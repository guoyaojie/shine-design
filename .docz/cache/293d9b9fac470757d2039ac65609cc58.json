{"remainingRequest":"/Users/qulongjun/personal/shine-design-rebase/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"transform-class-properties\",\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-object-assign\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-syntax-dynamic-import\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],[\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/jquery.steps.js","dependencies":[{"path":"/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/jquery.steps.js","mtime":1552960781403},{"path":"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1552894089278},{"path":"/Users/qulongjun/personal/shine-design-rebase/node_modules/babel-loader/lib/index.js","mtime":1552894085178}],"contextDependencies":[],"result":["\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! \n * jQuery Steps v1.1.0 - 09/04/2014\n * Copyright (c) 2014 Rafael Staib (http://www.jquery-steps.com)\n * Licensed under MIT http://www.opensource.org/licenses/MIT\n */\n;\n\n(function ($, undefined) {\n  $.fn.extend({\n    _aria: function _aria(name, value) {\n      return this.attr(\"aria-\" + name, value);\n    },\n    _removeAria: function _removeAria(name) {\n      return this.removeAttr(\"aria-\" + name);\n    },\n    _enableAria: function _enableAria(enable) {\n      return enable == null || enable ? this.removeClass(\"disabled\")._aria(\"disabled\", \"false\") : this.addClass(\"disabled\")._aria(\"disabled\", \"true\");\n    },\n    _showAria: function _showAria(show) {\n      return show == null || show ? this.show()._aria(\"hidden\", \"false\") : this.hide()._aria(\"hidden\", \"true\");\n    },\n    _selectAria: function _selectAria(select) {\n      return select == null || select ? this.addClass(\"current\")._aria(\"selected\", \"true\") : this.removeClass(\"current\")._aria(\"selected\", \"false\");\n    },\n    _id: function _id(id) {\n      return id ? this.attr(\"id\", id) : this.attr(\"id\");\n    }\n  });\n\n  if (!String.prototype.format) {\n    String.prototype.format = function () {\n      var args = arguments.length === 1 && $.isArray(arguments[0]) ? arguments[0] : arguments;\n      var formattedString = this;\n\n      for (var i = 0; i < args.length; i++) {\n        var pattern = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n        formattedString = formattedString.replace(pattern, args[i]);\n      }\n\n      return formattedString;\n    };\n  }\n  /**\n   * A global unique id count.\n   *\n   * @static\n   * @private\n   * @property _uniqueId\n   * @type Integer\n   **/\n\n\n  var _uniqueId = 0;\n  /**\n   * The plugin prefix for cookies.\n   *\n   * @final\n   * @private\n   * @property _cookiePrefix\n   * @type String\n   **/\n\n  var _cookiePrefix = \"jQu3ry_5teps_St@te_\";\n  /**\n   * Suffix for the unique tab id.\n   *\n   * @final\n   * @private\n   * @property _tabSuffix\n   * @type String\n   * @since 0.9.7\n   **/\n\n  var _tabSuffix = \"-t-\";\n  /**\n   * Suffix for the unique tabpanel id.\n   *\n   * @final\n   * @private\n   * @property _tabpanelSuffix\n   * @type String\n   * @since 0.9.7\n   **/\n\n  var _tabpanelSuffix = \"-p-\";\n  /**\n   * Suffix for the unique title id.\n   *\n   * @final\n   * @private\n   * @property _titleSuffix\n   * @type String\n   * @since 0.9.7\n   **/\n\n  var _titleSuffix = \"-h-\";\n  /**\n   * An error message for an \"index out of range\" error.\n   *\n   * @final\n   * @private\n   * @property _indexOutOfRangeErrorMessage\n   * @type String\n   **/\n\n  var _indexOutOfRangeErrorMessage = \"Index out of range.\";\n  /**\n   * An error message for an \"missing corresponding element\" error.\n   *\n   * @final\n   * @private\n   * @property _missingCorrespondingElementErrorMessage\n   * @type String\n   **/\n\n  var _missingCorrespondingElementErrorMessage = \"One or more corresponding step {0} are missing.\";\n  /**\n   * Adds a step to the cache.\n   *\n   * @static\n   * @private\n   * @method addStepToCache\n   * @param wizard {Object} A jQuery wizard object\n   * @param step {Object} The step object to add\n   **/\n\n  function addStepToCache(wizard, step) {\n    getSteps(wizard).push(step);\n  }\n\n  function analyzeData(wizard, options, state) {\n    var stepTitles = wizard.children(options.headerTag),\n        stepContents = wizard.children(options.bodyTag); // Validate content\n\n    if (stepTitles.length > stepContents.length) {\n      throwError(_missingCorrespondingElementErrorMessage, \"contents\");\n    } else if (stepTitles.length < stepContents.length) {\n      throwError(_missingCorrespondingElementErrorMessage, \"titles\");\n    }\n\n    var startIndex = options.startIndex;\n    state.stepCount = stepTitles.length; // Tries to load the saved state (step position)\n\n    if (options.saveState && $.cookie) {\n      var savedState = $.cookie(_cookiePrefix + getUniqueId(wizard)); // Sets the saved position to the start index if not undefined or out of range \n\n      var savedIndex = parseInt(savedState, 0);\n\n      if (!isNaN(savedIndex) && savedIndex < state.stepCount) {\n        startIndex = savedIndex;\n      }\n    }\n\n    state.currentIndex = startIndex;\n    stepTitles.each(function (index) {\n      var item = $(this),\n          // item == header\n      content = stepContents.eq(index),\n          modeData = content.data(\"mode\"),\n          mode = modeData == null ? contentMode.html : getValidEnumValue(contentMode, /^\\s*$/.test(modeData) || isNaN(modeData) ? modeData : parseInt(modeData, 0)),\n          contentUrl = mode === contentMode.html || content.data(\"url\") === undefined ? \"\" : content.data(\"url\"),\n          contentLoaded = mode !== contentMode.html && content.data(\"loaded\") === \"1\",\n          step = $.extend({}, stepModel, {\n        title: item.html(),\n        content: mode === contentMode.html ? content.html() : \"\",\n        contentUrl: contentUrl,\n        contentMode: mode,\n        contentLoaded: contentLoaded\n      });\n      addStepToCache(wizard, step);\n    });\n  }\n  /**\n   * Triggers the onCanceled event.\n   *\n   * @static\n   * @private\n   * @method cancel\n   * @param wizard {Object} The jQuery wizard object\n   **/\n\n\n  function cancel(wizard) {\n    wizard.triggerHandler(\"canceled\");\n  }\n\n  function decreaseCurrentIndexBy(state, decreaseBy) {\n    return state.currentIndex - decreaseBy;\n  }\n  /**\n   * Removes the control functionality completely and transforms the current state to the initial HTML structure.\n   *\n   * @static\n   * @private\n   * @method destroy\n   * @param wizard {Object} A jQuery wizard object\n   **/\n\n\n  function destroy(wizard, options) {\n    var eventNamespace = getEventNamespace(wizard); // Remove virtual data objects from the wizard\n\n    wizard.unbind(eventNamespace).removeData(\"uid\").removeData(\"options\").removeData(\"state\").removeData(\"steps\").removeData(\"eventNamespace\").find(\".actions a\").unbind(eventNamespace); // Remove attributes and CSS classes from the wizard\n\n    wizard.removeClass(options.clearFixCssClass + \" vertical\");\n    var contents = wizard.find(\".content > *\"); // Remove virtual data objects from panels and their titles\n\n    contents.removeData(\"loaded\").removeData(\"mode\").removeData(\"url\"); // Remove attributes, CSS classes and reset inline styles on all panels and their titles\n\n    contents.removeAttr(\"id\").removeAttr(\"role\").removeAttr(\"tabindex\").removeAttr(\"class\").removeAttr(\"style\")._removeAria(\"labelledby\")._removeAria(\"hidden\"); // Empty panels if the mode is set to 'async' or 'iframe'\n\n\n    wizard.find(\".content > [data-mode='async'],.content > [data-mode='iframe']\").empty();\n    var wizardSubstitute = $(\"<{0} class=\\\"{1}\\\"></{0}>\".format(wizard.get(0).tagName, wizard.attr(\"class\")));\n\n    var wizardId = wizard._id();\n\n    if (wizardId != null && wizardId !== \"\") {\n      wizardSubstitute._id(wizardId);\n    }\n\n    wizardSubstitute.html(wizard.find(\".content\").html());\n    wizard.after(wizardSubstitute);\n    wizard.remove();\n    return wizardSubstitute;\n  }\n  /**\n   * Triggers the onFinishing and onFinished event.\n   *\n   * @static\n   * @private\n   * @method finishStep\n   * @param wizard {Object} The jQuery wizard object\n   * @param state {Object} The state container of the current wizard\n   **/\n\n\n  function finishStep(wizard, state) {\n    var currentStep = wizard.find(\".steps li\").eq(state.currentIndex);\n\n    if (wizard.triggerHandler(\"finishing\", [state.currentIndex])) {\n      currentStep.addClass(\"done\").removeClass(\"error\");\n      wizard.triggerHandler(\"finished\", [state.currentIndex]);\n    } else {\n      currentStep.addClass(\"error\");\n    }\n  }\n  /**\n   * Gets or creates if not exist an unique event namespace for the given wizard instance.\n   *\n   * @static\n   * @private\n   * @method getEventNamespace\n   * @param wizard {Object} A jQuery wizard object\n   * @return {String} Returns the unique event namespace for the given wizard\n   */\n\n\n  function getEventNamespace(wizard) {\n    var eventNamespace = wizard.data(\"eventNamespace\");\n\n    if (eventNamespace == null) {\n      eventNamespace = \".\" + getUniqueId(wizard);\n      wizard.data(\"eventNamespace\", eventNamespace);\n    }\n\n    return eventNamespace;\n  }\n\n  function getStepAnchor(wizard, index) {\n    var uniqueId = getUniqueId(wizard);\n    return wizard.find(\"#\" + uniqueId + _tabSuffix + index);\n  }\n\n  function getStepPanel(wizard, index) {\n    var uniqueId = getUniqueId(wizard);\n    return wizard.find(\"#\" + uniqueId + _tabpanelSuffix + index);\n  }\n\n  function getStepTitle(wizard, index) {\n    var uniqueId = getUniqueId(wizard);\n    return wizard.find(\"#\" + uniqueId + _titleSuffix + index);\n  }\n\n  function getOptions(wizard) {\n    return wizard.data(\"options\");\n  }\n\n  function getState(wizard) {\n    return wizard.data(\"state\");\n  }\n\n  function getSteps(wizard) {\n    return wizard.data(\"steps\");\n  }\n  /**\n   * Gets a specific step object by index.\n   *\n   * @static\n   * @private\n   * @method getStep\n   * @param index {Integer} An integer that belongs to the position of a step\n   * @return {Object} A specific step object\n   **/\n\n\n  function getStep(wizard, index) {\n    var steps = getSteps(wizard);\n\n    if (index < 0 || index >= steps.length) {\n      throwError(_indexOutOfRangeErrorMessage);\n    }\n\n    return steps[index];\n  }\n  /**\n   * Gets or creates if not exist an unique id from the given wizard instance.\n   *\n   * @static\n   * @private\n   * @method getUniqueId\n   * @param wizard {Object} A jQuery wizard object\n   * @return {String} Returns the unique id for the given wizard\n   */\n\n\n  function getUniqueId(wizard) {\n    var uniqueId = wizard.data(\"uid\");\n\n    if (uniqueId == null) {\n      uniqueId = wizard._id();\n\n      if (uniqueId == null) {\n        uniqueId = \"steps-uid-\".concat(_uniqueId);\n\n        wizard._id(uniqueId);\n      }\n\n      _uniqueId++;\n      wizard.data(\"uid\", uniqueId);\n    }\n\n    return uniqueId;\n  }\n  /**\n   * Gets a valid enum value by checking a specific enum key or value.\n   * \n   * @static\n   * @private\n   * @method getValidEnumValue\n   * @param enumType {Object} Type of enum\n   * @param keyOrValue {Object} Key as `String` or value as `Integer` to check for\n   */\n\n\n  function getValidEnumValue(enumType, keyOrValue) {\n    validateArgument(\"enumType\", enumType);\n    validateArgument(\"keyOrValue\", keyOrValue); // Is key\n\n    if (typeof keyOrValue === \"string\") {\n      var value = enumType[keyOrValue];\n\n      if (value === undefined) {\n        throwError(\"The enum key '{0}' does not exist.\", keyOrValue);\n      }\n\n      return value;\n    } // Is value\n    else if (typeof keyOrValue === \"number\") {\n        for (var key in enumType) {\n          if (enumType[key] === keyOrValue) {\n            return keyOrValue;\n          }\n        }\n\n        throwError(\"Invalid enum value '{0}'.\", keyOrValue);\n      } // Type is not supported\n      else {\n          throwError(\"Invalid key or value type.\");\n        }\n  }\n  /**\n   * Routes to the next step.\n   *\n   * @static\n   * @private\n   * @method goToNextStep\n   * @param wizard {Object} The jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @return {Boolean} Indicates whether the action executed\n   **/\n\n\n  function goToNextStep(wizard, options, state) {\n    return paginationClick(wizard, options, state, increaseCurrentIndexBy(state, 1));\n  }\n  /**\n   * Routes to the previous step.\n   *\n   * @static\n   * @private\n   * @method goToPreviousStep\n   * @param wizard {Object} The jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @return {Boolean} Indicates whether the action executed\n   **/\n\n\n  function goToPreviousStep(wizard, options, state) {\n    return paginationClick(wizard, options, state, decreaseCurrentIndexBy(state, 1));\n  }\n  /**\n   * Routes to a specific step by a given index.\n   *\n   * @static\n   * @private\n   * @method goToStep\n   * @param wizard {Object} The jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param index {Integer} The position (zero-based) to route to\n   * @return {Boolean} Indicates whether the action succeeded or failed\n   **/\n\n\n  function goToStep(wizard, options, state, index) {\n    if (index < 0 || index >= state.stepCount) {\n      throwError(_indexOutOfRangeErrorMessage);\n    }\n\n    if (options.forceMoveForward && index < state.currentIndex) {\n      return;\n    }\n\n    var oldIndex = state.currentIndex;\n\n    if (wizard.triggerHandler(\"stepChanging\", [state.currentIndex, index])) {\n      // Save new state\n      state.currentIndex = index;\n      saveCurrentStateToCookie(wizard, options, state); // Change visualisation\n\n      refreshStepNavigation(wizard, options, state, oldIndex);\n      refreshPagination(wizard, options, state);\n      loadAsyncContent(wizard, options, state);\n      startTransitionEffect(wizard, options, state, index, oldIndex, function () {\n        wizard.triggerHandler(\"stepChanged\", [index, oldIndex]);\n      });\n    } else {\n      wizard.find(\".steps li\").eq(oldIndex).addClass(\"error\");\n    }\n\n    return true;\n  }\n\n  function increaseCurrentIndexBy(state, increaseBy) {\n    return state.currentIndex + increaseBy;\n  }\n  /**\n   * Initializes the component.\n   *\n   * @static\n   * @private\n   * @method initialize\n   * @param options {Object} The component settings\n   **/\n\n\n  function initialize(options) {\n    /*jshint -W040 */\n    var opts = $.extend(true, {}, defaults, options);\n    return this.each(function () {\n      var wizard = $(this);\n      var state = {\n        currentIndex: opts.startIndex,\n        currentStep: null,\n        stepCount: 0,\n        transitionElement: null\n      }; // Create data container\n\n      wizard.data(\"options\", opts);\n      wizard.data(\"state\", state);\n      wizard.data(\"steps\", []);\n      analyzeData(wizard, opts, state);\n      render(wizard, opts, state);\n      registerEvents(wizard, opts); // Trigger focus\n\n      if (opts.autoFocus && _uniqueId === 0) {\n        getStepAnchor(wizard, opts.startIndex).focus();\n      }\n\n      wizard.triggerHandler(\"init\", [opts.startIndex]);\n    });\n  }\n  /**\n   * Inserts a new step to a specific position.\n   *\n   * @static\n   * @private\n   * @method insertStep\n   * @param wizard {Object} The jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param index {Integer} The position (zero-based) to add\n   * @param step {Object} The step object to add\n   * @example\n   *     $(\"#wizard\").steps().insert(0, {\n   *         title: \"Title\",\n   *         content: \"\", // optional\n   *         contentMode: \"async\", // optional\n   *         contentUrl: \"/Content/Step/1\" // optional\n   *     });\n   * @chainable\n   **/\n\n\n  function insertStep(wizard, options, state, index, step) {\n    if (index < 0 || index > state.stepCount) {\n      throwError(_indexOutOfRangeErrorMessage);\n    } // TODO: Validate step object\n    // Change data\n\n\n    step = $.extend({}, stepModel, step);\n    insertStepToCache(wizard, index, step);\n\n    if (state.currentIndex !== state.stepCount && state.currentIndex >= index) {\n      state.currentIndex++;\n      saveCurrentStateToCookie(wizard, options, state);\n    }\n\n    state.stepCount++;\n    var contentContainer = wizard.find(\".content\"),\n        header = $(\"<{0}>{1}</{0}>\".format(options.headerTag, step.title)),\n        body = $(\"<{0}></{0}>\".format(options.bodyTag));\n\n    if (step.contentMode == null || step.contentMode === contentMode.html) {\n      body.html(step.content);\n    }\n\n    if (index === 0) {\n      contentContainer.prepend(body).prepend(header);\n    } else {\n      getStepPanel(wizard, index - 1).after(body).after(header);\n    }\n\n    renderBody(wizard, state, body, index);\n    renderTitle(wizard, options, state, header, index);\n    refreshSteps(wizard, options, state, index);\n\n    if (index === state.currentIndex) {\n      refreshStepNavigation(wizard, options, state);\n    }\n\n    refreshPagination(wizard, options, state);\n    return wizard;\n  }\n  /**\n   * Inserts a step object to the cache at a specific position.\n   *\n   * @static\n   * @private\n   * @method insertStepToCache\n   * @param wizard {Object} A jQuery wizard object\n   * @param index {Integer} The position (zero-based) to add\n   * @param step {Object} The step object to add\n   **/\n\n\n  function insertStepToCache(wizard, index, step) {\n    getSteps(wizard).splice(index, 0, step);\n  }\n  /**\n   * Handles the keyup DOM event for pagination.\n   *\n   * @static\n   * @private\n   * @event keyup\n   * @param event {Object} An event object\n   */\n\n\n  function keyUpHandler(event) {\n    var wizard = $(this),\n        options = getOptions(wizard),\n        state = getState(wizard);\n\n    if (options.suppressPaginationOnFocus && wizard.find(\":focus\").is(\":input\")) {\n      event.preventDefault();\n      return false;\n    }\n\n    var keyCodes = {\n      left: 37,\n      right: 39\n    };\n\n    if (event.keyCode === keyCodes.left) {\n      event.preventDefault();\n      goToPreviousStep(wizard, options, state);\n    } else if (event.keyCode === keyCodes.right) {\n      event.preventDefault();\n      goToNextStep(wizard, options, state);\n    }\n  }\n  /**\n   * Loads and includes async content.\n   *\n   * @static\n   * @private\n   * @method loadAsyncContent\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   */\n\n\n  function loadAsyncContent(wizard, options, state) {\n    if (state.stepCount > 0) {\n      var currentIndex = state.currentIndex,\n          currentStep = getStep(wizard, currentIndex);\n\n      if (!options.enableContentCache || !currentStep.contentLoaded) {\n        switch (getValidEnumValue(contentMode, currentStep.contentMode)) {\n          case contentMode.iframe:\n            wizard.find(\".content > .body\").eq(state.currentIndex).empty().html(\"<iframe src=\\\"\" + currentStep.contentUrl + \"\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\" />\").data(\"loaded\", \"1\");\n            break;\n\n          case contentMode.async:\n            var currentStepContent = getStepPanel(wizard, currentIndex)._aria(\"busy\", \"true\").empty().append(renderTemplate(options.loadingTemplate, {\n              text: options.labels.loading\n            }));\n\n            $.ajax({\n              url: currentStep.contentUrl,\n              cache: false\n            }).done(function (data) {\n              currentStepContent.empty().html(data)._aria(\"busy\", \"false\").data(\"loaded\", \"1\");\n\n              wizard.triggerHandler(\"contentLoaded\", [currentIndex]);\n            });\n            break;\n        }\n      }\n    }\n  }\n  /**\n   * Fires the action next or previous click event.\n   *\n   * @static\n   * @private\n   * @method paginationClick\n   * @param wizard {Object} The jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param index {Integer} The position (zero-based) to route to\n   * @return {Boolean} Indicates whether the event fired successfully or not\n   **/\n\n\n  function paginationClick(wizard, options, state, index) {\n    var oldIndex = state.currentIndex;\n\n    if (index >= 0 && index < state.stepCount && !(options.forceMoveForward && index < state.currentIndex)) {\n      var anchor = getStepAnchor(wizard, index),\n          parent = anchor.parent(),\n          isDisabled = parent.hasClass(\"disabled\"); // Enable the step to make the anchor clickable!\n\n      parent._enableAria();\n\n      anchor.click(); // An error occured\n\n      if (oldIndex === state.currentIndex && isDisabled) {\n        // Disable the step again if current index has not changed; prevents click action.\n        parent._enableAria(false);\n\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Fires when a pagination click happens.\n   *\n   * @static\n   * @private\n   * @event click\n   * @param event {Object} An event object\n   */\n\n\n  function paginationClickHandler(event) {\n    event.preventDefault();\n    var anchor = $(this),\n        wizard = anchor.parent().parent().parent().parent(),\n        options = getOptions(wizard),\n        state = getState(wizard),\n        href = anchor.attr(\"href\");\n\n    switch (href.substring(href.lastIndexOf(\"#\") + 1)) {\n      case \"cancel\":\n        cancel(wizard);\n        break;\n\n      case \"finish\":\n        finishStep(wizard, state);\n        break;\n\n      case \"next\":\n        goToNextStep(wizard, options, state);\n        break;\n\n      case \"previous\":\n        goToPreviousStep(wizard, options, state);\n        break;\n    }\n  }\n  /**\n   * Refreshs the visualization state for the entire pagination.\n   *\n   * @static\n   * @private\n   * @method refreshPagination\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   */\n\n\n  function refreshPagination(wizard, options, state) {\n    if (options.enablePagination) {\n      var finish = wizard.find(\".actions a[href$='#finish']\").parent(),\n          next = wizard.find(\".actions a[href$='#next']\").parent();\n\n      if (!options.forceMoveForward) {\n        var previous = wizard.find(\".actions a[href$='#previous']\").parent();\n\n        previous._enableAria(state.currentIndex > 0);\n      }\n\n      if (options.enableFinishButton && options.showFinishButtonAlways) {\n        finish._enableAria(state.stepCount > 0);\n\n        next._enableAria(state.stepCount > 1 && state.stepCount > state.currentIndex + 1);\n      } else {\n        finish._showAria(options.enableFinishButton && state.stepCount === state.currentIndex + 1);\n\n        next._showAria(state.stepCount === 0 || state.stepCount > state.currentIndex + 1)._enableAria(state.stepCount > state.currentIndex + 1 || !options.enableFinishButton);\n      }\n    }\n  }\n  /**\n   * Refreshs the visualization state for the step navigation (tabs).\n   *\n   * @static\n   * @private\n   * @method refreshStepNavigation\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param [oldIndex] {Integer} The index of the prior step\n   */\n\n\n  function refreshStepNavigation(wizard, options, state, oldIndex) {\n    var currentOrNewStepAnchor = getStepAnchor(wizard, state.currentIndex),\n        currentInfo = $(\"<span class=\\\"current-info audible\\\">\" + options.labels.current + \" </span>\"),\n        stepTitles = wizard.find(\".content > .title\");\n\n    if (oldIndex != null) {\n      var oldStepAnchor = getStepAnchor(wizard, oldIndex);\n\n      oldStepAnchor.parent().addClass(\"done\").removeClass(\"error\")._selectAria(false);\n\n      stepTitles.eq(oldIndex).removeClass(\"current\").next(\".body\").removeClass(\"current\");\n      currentInfo = oldStepAnchor.find(\".current-info\");\n      currentOrNewStepAnchor.focus();\n    }\n\n    currentOrNewStepAnchor.prepend(currentInfo).parent()._selectAria().removeClass(\"done\")._enableAria();\n\n    stepTitles.eq(state.currentIndex).addClass(\"current\").next(\".body\").addClass(\"current\");\n  }\n  /**\n   * Refreshes step buttons and their related titles beyond a certain position.\n   *\n   * @static\n   * @private\n   * @method refreshSteps\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param index {Integer} The start point for refreshing ids\n   */\n\n\n  function refreshSteps(wizard, options, state, index) {\n    var uniqueId = getUniqueId(wizard);\n\n    for (var i = index; i < state.stepCount; i++) {\n      var uniqueStepId = uniqueId + _tabSuffix + i,\n          uniqueBodyId = uniqueId + _tabpanelSuffix + i,\n          uniqueHeaderId = uniqueId + _titleSuffix + i,\n          title = wizard.find(\".title\").eq(i)._id(uniqueHeaderId);\n\n      wizard.find(\".steps a\").eq(i)._id(uniqueStepId)._aria(\"controls\", uniqueBodyId).attr(\"href\", \"#\" + uniqueHeaderId).html(renderTemplate(options.titleTemplate, {\n        index: i + 1,\n        title: title.html()\n      }));\n\n      wizard.find(\".body\").eq(i)._id(uniqueBodyId)._aria(\"labelledby\", uniqueHeaderId);\n    }\n  }\n\n  function registerEvents(wizard, options) {\n    var eventNamespace = getEventNamespace(wizard);\n    wizard.bind(\"canceled\" + eventNamespace, options.onCanceled);\n    wizard.bind(\"contentLoaded\" + eventNamespace, options.onContentLoaded);\n    wizard.bind(\"finishing\" + eventNamespace, options.onFinishing);\n    wizard.bind(\"finished\" + eventNamespace, options.onFinished);\n    wizard.bind(\"init\" + eventNamespace, options.onInit);\n    wizard.bind(\"stepChanging\" + eventNamespace, options.onStepChanging);\n    wizard.bind(\"stepChanged\" + eventNamespace, options.onStepChanged);\n\n    if (options.enableKeyNavigation) {\n      wizard.bind(\"keyup\" + eventNamespace, keyUpHandler);\n    }\n\n    wizard.find(\".actions a\").bind(\"click\" + eventNamespace, paginationClickHandler);\n  }\n  /**\n   * Removes a specific step by an given index.\n   *\n   * @static\n   * @private\n   * @method removeStep\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param index {Integer} The position (zero-based) of the step to remove\n   * @return Indecates whether the item is removed.\n   **/\n\n\n  function removeStep(wizard, options, state, index) {\n    // Index out of range and try deleting current item will return false.\n    if (index < 0 || index >= state.stepCount || state.currentIndex === index) {\n      return false;\n    } // Change data\n\n\n    removeStepFromCache(wizard, index);\n\n    if (state.currentIndex > index) {\n      state.currentIndex--;\n      saveCurrentStateToCookie(wizard, options, state);\n    }\n\n    state.stepCount--;\n    getStepTitle(wizard, index).remove();\n    getStepPanel(wizard, index).remove();\n    getStepAnchor(wizard, index).parent().remove(); // Set the \"first\" class to the new first step button \n\n    if (index === 0) {\n      wizard.find(\".steps li\").first().addClass(\"first\");\n    } // Set the \"last\" class to the new last step button \n\n\n    if (index === state.stepCount) {\n      wizard.find(\".steps li\").eq(index).addClass(\"last\");\n    }\n\n    refreshSteps(wizard, options, state, index);\n    refreshPagination(wizard, options, state);\n    return true;\n  }\n\n  function removeStepFromCache(wizard, index) {\n    getSteps(wizard).splice(index, 1);\n  }\n  /**\n   * Transforms the base html structure to a more sensible html structure.\n   *\n   * @static\n   * @private\n   * @method render\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   **/\n\n\n  function render(wizard, options, state) {\n    // Create a content wrapper and copy HTML from the intial wizard structure\n    var contentWrapperTemplate = \"<{0} class=\\\"{1}\\\"></{0}>\",\n        stepsWrapperTemplate = \"<{0} class=\\\"{1}\\\">{2}</{0}>\",\n        orientation = getValidEnumValue(stepsOrientation, options.stepsOrientation),\n        verticalCssClass = orientation === stepsOrientation.vertical ? \" vertical\" : \"\",\n        contentWrapper = $(contentWrapperTemplate.format(options.contentContainerTag, \"content \" + options.clearFixCssClass)),\n        stepsWrapper = $(stepsWrapperTemplate.format(options.stepsContainerTag, \"steps \" + options.clearFixCssClass, \"<ul role=\\\"tablist\\\"></ul>\")); // Transform the wizard wrapper by wrapping the innerHTML in the content wrapper, then prepending the stepsWrapper\n\n    wizard.attr(\"role\", \"application\").wrapInner(contentWrapper).prepend(stepsWrapper).addClass(options.cssClass + \" \" + options.clearFixCssClass + verticalCssClass); //Now that wizard is tansformed, select the the title and contents elements\n\n    var populatedContent = wizard.find('.content'),\n        stepTitles = populatedContent.children(options.headerTag),\n        stepContents = populatedContent.children(options.bodyTag); // Add WIA-ARIA support\n\n    stepContents.each(function (index) {\n      renderBody(wizard, state, $(this), index);\n    });\n    stepTitles.each(function (index) {\n      renderTitle(wizard, options, state, $(this), index);\n    });\n    refreshStepNavigation(wizard, options, state);\n    renderPagination(wizard, options, state);\n  }\n  /**\n   * Transforms the body to a proper tabpanel.\n   *\n   * @static\n   * @private\n   * @method renderBody\n   * @param wizard {Object} A jQuery wizard object\n   * @param body {Object} A jQuery body object\n   * @param index {Integer} The position of the body\n   */\n\n\n  function renderBody(wizard, state, body, index) {\n    var uniqueId = getUniqueId(wizard),\n        uniqueBodyId = uniqueId + _tabpanelSuffix + index,\n        uniqueHeaderId = uniqueId + _titleSuffix + index;\n\n    body._id(uniqueBodyId).attr(\"role\", \"tabpanel\")._aria(\"labelledby\", uniqueHeaderId).addClass(\"body\")._showAria(state.currentIndex === index);\n  }\n  /**\n   * Renders a pagination if enabled.\n   *\n   * @static\n   * @private\n   * @method renderPagination\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   */\n\n\n  function renderPagination(wizard, options, state) {\n    if (options.enablePagination) {\n      var pagination = \"<{0} class=\\\"actions {1}\\\"><ul role=\\\"menu\\\" aria-label=\\\"{2}\\\">{3}</ul></{0}>\",\n          buttonTemplate = \"<li><a href=\\\"#{0}\\\" role=\\\"menuitem\\\">{1}</a></li>\",\n          buttons = \"\";\n\n      if (!options.forceMoveForward) {\n        buttons += buttonTemplate.format(\"previous\", options.labels.previous);\n      }\n\n      buttons += buttonTemplate.format(\"next\", options.labels.next);\n\n      if (options.enableFinishButton) {\n        buttons += buttonTemplate.format(\"finish\", options.labels.finish);\n      }\n\n      if (options.enableCancelButton) {\n        buttons += buttonTemplate.format(\"cancel\", options.labels.cancel);\n      }\n\n      wizard.append(pagination.format(options.actionContainerTag, options.clearFixCssClass, options.labels.pagination, buttons));\n      refreshPagination(wizard, options, state);\n      loadAsyncContent(wizard, options, state);\n    }\n  }\n  /**\n   * Renders a template and replaces all placeholder.\n   *\n   * @static\n   * @private\n   * @method renderTemplate\n   * @param template {String} A template\n   * @param substitutes {Object} A list of substitute\n   * @return {String} The rendered template\n   */\n\n\n  function renderTemplate(template, substitutes) {\n    var matches = template.match(/#([a-z]*)#/gi);\n\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i],\n          key = match.substring(1, match.length - 1);\n\n      if (substitutes[key] === undefined) {\n        throwError(\"The key '{0}' does not exist in the substitute collection!\", key);\n      }\n\n      template = template.replace(match, substitutes[key]);\n    }\n\n    return template;\n  }\n  /**\n   * Transforms the title to a step item button.\n   *\n   * @static\n   * @private\n   * @method renderTitle\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   * @param header {Object} A jQuery header object\n   * @param index {Integer} The position of the header\n   */\n\n\n  function renderTitle(wizard, options, state, header, index) {\n    var uniqueId = getUniqueId(wizard),\n        uniqueStepId = uniqueId + _tabSuffix + index,\n        uniqueBodyId = uniqueId + _tabpanelSuffix + index,\n        uniqueHeaderId = uniqueId + _titleSuffix + index,\n        stepCollection = wizard.find(\".steps > ul\"),\n        title = renderTemplate(options.titleTemplate, {\n      index: index + 1,\n      title: header.html()\n    }),\n        stepItem = $(\"<li role=\\\"tab\\\"><a id=\\\"\" + uniqueStepId + \"\\\" href=\\\"#\" + uniqueHeaderId + \"\\\" aria-controls=\\\"\" + uniqueBodyId + \"\\\">\" + title + \"</a></li>\");\n\n    stepItem._enableAria(options.enableAllSteps || state.currentIndex > index);\n\n    if (state.currentIndex > index) {\n      stepItem.addClass(\"done\");\n    }\n\n    header._id(uniqueHeaderId).attr(\"tabindex\", \"-1\").addClass(\"title\");\n\n    if (index === 0) {\n      stepCollection.prepend(stepItem);\n    } else {\n      stepCollection.find(\"li\").eq(index - 1).after(stepItem);\n    } // Set the \"first\" class to the new first step button\n\n\n    if (index === 0) {\n      stepCollection.find(\"li\").removeClass(\"first\").eq(index).addClass(\"first\");\n    } // Set the \"last\" class to the new last step button\n\n\n    if (index === state.stepCount - 1) {\n      stepCollection.find(\"li\").removeClass(\"last\").eq(index).addClass(\"last\");\n    } // Register click event\n\n\n    stepItem.children(\"a\").bind(\"click\" + getEventNamespace(wizard), stepClickHandler);\n  }\n  /**\n   * Saves the current state to a cookie.\n   *\n   * @static\n   * @private\n   * @method saveCurrentStateToCookie\n   * @param wizard {Object} A jQuery wizard object\n   * @param options {Object} Settings of the current wizard\n   * @param state {Object} The state container of the current wizard\n   */\n\n\n  function saveCurrentStateToCookie(wizard, options, state) {\n    if (options.saveState && $.cookie) {\n      $.cookie(_cookiePrefix + getUniqueId(wizard), state.currentIndex);\n    }\n  }\n\n  function startTransitionEffect(wizard, options, state, index, oldIndex, doneCallback) {\n    var stepContents = wizard.find(\".content > .body\"),\n        effect = getValidEnumValue(transitionEffect, options.transitionEffect),\n        effectSpeed = options.transitionEffectSpeed,\n        newStep = stepContents.eq(index),\n        currentStep = stepContents.eq(oldIndex);\n\n    switch (effect) {\n      case transitionEffect.fade:\n      case transitionEffect.slide:\n        var hide = effect === transitionEffect.fade ? \"fadeOut\" : \"slideUp\",\n            show = effect === transitionEffect.fade ? \"fadeIn\" : \"slideDown\";\n        state.transitionElement = newStep;\n        currentStep[hide](effectSpeed, function () {\n          var wizard = $(this)._showAria(false).parent().parent(),\n              state = getState(wizard);\n\n          if (state.transitionElement) {\n            state.transitionElement[show](effectSpeed, function () {\n              $(this)._showAria();\n            }).promise().done(doneCallback);\n            state.transitionElement = null;\n          }\n        });\n        break;\n\n      case transitionEffect.slideLeft:\n        var outerWidth = currentStep.outerWidth(true),\n            posFadeOut = index > oldIndex ? -outerWidth : outerWidth,\n            posFadeIn = index > oldIndex ? outerWidth : -outerWidth;\n        $.when(currentStep.animate({\n          left: posFadeOut\n        }, effectSpeed, function () {\n          $(this)._showAria(false);\n        }), newStep.css(\"left\", posFadeIn + \"px\")._showAria().animate({\n          left: 0\n        }, effectSpeed)).done(doneCallback);\n        break;\n\n      default:\n        $.when(currentStep._showAria(false), newStep._showAria()).done(doneCallback);\n        break;\n    }\n  }\n  /**\n   * Fires when a step click happens.\n   *\n   * @static\n   * @private\n   * @event click\n   * @param event {Object} An event object\n   */\n\n\n  function stepClickHandler(event) {\n    event.preventDefault();\n    var anchor = $(this),\n        wizard = anchor.parent().parent().parent().parent(),\n        options = getOptions(wizard),\n        state = getState(wizard),\n        oldIndex = state.currentIndex;\n\n    if (anchor.parent().is(\":not(.disabled):not(.current)\")) {\n      var href = anchor.attr(\"href\"),\n          position = parseInt(href.substring(href.lastIndexOf(\"-\") + 1), 0);\n      goToStep(wizard, options, state, position);\n    } // If nothing has changed\n\n\n    if (oldIndex === state.currentIndex) {\n      getStepAnchor(wizard, oldIndex).focus();\n      return false;\n    }\n  }\n\n  function throwError(message) {\n    if (arguments.length > 1) {\n      message = message.format(Array.prototype.slice.call(arguments, 1));\n    }\n\n    throw new Error(message);\n  }\n  /**\n   * Checks an argument for null or undefined and throws an error if one check applies.\n   *\n   * @static\n   * @private\n   * @method validateArgument\n   * @param argumentName {String} The name of the given argument\n   * @param argumentValue {Object} The argument itself\n   */\n\n\n  function validateArgument(argumentName, argumentValue) {\n    if (argumentValue == null) {\n      throwError(\"The argument '{0}' is null or undefined.\", argumentName);\n    }\n  }\n  /**\n   * Represents a jQuery wizard plugin.\n   *\n   * @class steps\n   * @constructor\n   * @param [method={}] The name of the method as `String` or an JSON object for initialization\n   * @param [params=]* {Array} Additional arguments for a method call\n   * @chainable\n   **/\n\n\n  $.fn.steps = function (method) {\n    if ($.fn.steps[method]) {\n      return $.fn.steps[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (_typeof(method) === \"object\" || !method) {\n      return initialize.apply(this, arguments);\n    } else {\n      $.error(\"Method \" + method + \" does not exist on jQuery.steps\");\n    }\n  };\n  /**\n   * Adds a new step.\n   *\n   * @method add\n   * @param step {Object} The step object to add\n   * @chainable\n   **/\n\n\n  $.fn.steps.add = function (step) {\n    var state = getState(this);\n    return insertStep(this, getOptions(this), state, state.stepCount, step);\n  };\n  /**\n   * Removes the control functionality completely and transforms the current state to the initial HTML structure.\n   *\n   * @method destroy\n   * @chainable\n   **/\n\n\n  $.fn.steps.destroy = function () {\n    return destroy(this, getOptions(this));\n  };\n  /**\n   * Triggers the onFinishing and onFinished event.\n   *\n   * @method finish\n   **/\n\n\n  $.fn.steps.finish = function () {\n    finishStep(this, getState(this));\n  };\n  /**\n   * Gets the current step index.\n   *\n   * @method getCurrentIndex\n   * @return {Integer} The actual step index (zero-based)\n   * @for steps\n   **/\n\n\n  $.fn.steps.getCurrentIndex = function () {\n    return getState(this).currentIndex;\n  };\n  /**\n   * Gets the current step object.\n   *\n   * @method getCurrentStep\n   * @return {Object} The actual step object\n   **/\n\n\n  $.fn.steps.getCurrentStep = function () {\n    return getStep(this, getState(this).currentIndex);\n  };\n  /**\n   * Gets a specific step object by index.\n   *\n   * @method getStep\n   * @param index {Integer} An integer that belongs to the position of a step\n   * @return {Object} A specific step object\n   **/\n\n\n  $.fn.steps.getStep = function (index) {\n    return getStep(this, index);\n  };\n  /**\n   * Inserts a new step to a specific position.\n   *\n   * @method insert\n   * @param index {Integer} The position (zero-based) to add\n   * @param step {Object} The step object to add\n   * @example\n   *     $(\"#wizard\").steps().insert(0, {\n   *         title: \"Title\",\n   *         content: \"\", // optional\n   *         contentMode: \"async\", // optional\n   *         contentUrl: \"/Content/Step/1\" // optional\n   *     });\n   * @chainable\n   **/\n\n\n  $.fn.steps.insert = function (index, step) {\n    return insertStep(this, getOptions(this), getState(this), index, step);\n  };\n  /**\n   * Routes to the next step.\n   *\n   * @method next\n   * @return {Boolean} Indicates whether the action executed\n   **/\n\n\n  $.fn.steps.next = function () {\n    return goToNextStep(this, getOptions(this), getState(this));\n  };\n  /**\n   * Routes to the previous step.\n   *\n   * @method previous\n   * @return {Boolean} Indicates whether the action executed\n   **/\n\n\n  $.fn.steps.previous = function () {\n    return goToPreviousStep(this, getOptions(this), getState(this));\n  };\n  /**\n   * Removes a specific step by an given index.\n   *\n   * @method remove\n   * @param index {Integer} The position (zero-based) of the step to remove\n   * @return Indecates whether the item is removed.\n   **/\n\n\n  $.fn.steps.remove = function (index) {\n    return removeStep(this, getOptions(this), getState(this), index);\n  };\n  /**\n   * Sets a specific step object by index.\n   *\n   * @method setStep\n   * @param index {Integer} An integer that belongs to the position of a step\n   * @param step {Object} The step object to change\n   **/\n\n\n  $.fn.steps.setStep = function (index, step) {\n    throw new Error(\"Not yet implemented!\");\n  };\n  /**\n   * Skips an certain amount of steps.\n   *\n   * @method skip\n   * @param count {Integer} The amount of steps that should be skipped\n   * @return {Boolean} Indicates whether the action executed\n   **/\n\n\n  $.fn.steps.skip = function (count) {\n    throw new Error(\"Not yet implemented!\");\n  };\n  /**\n   * An enum represents the different content types of a step and their loading mechanisms.\n   *\n   * @class contentMode\n   * @for steps\n   **/\n\n\n  var contentMode = $.fn.steps.contentMode = {\n    /**\n     * HTML embedded content\n     *\n     * @readOnly\n     * @property html\n     * @type Integer\n     * @for contentMode\n     **/\n    html: 0,\n\n    /**\n     * IFrame embedded content\n     *\n     * @readOnly\n     * @property iframe\n     * @type Integer\n     * @for contentMode\n     **/\n    iframe: 1,\n\n    /**\n     * Async embedded content\n     *\n     * @readOnly\n     * @property async\n     * @type Integer\n     * @for contentMode\n     **/\n    async: 2\n  };\n  /**\n   * An enum represents the orientation of the steps navigation.\n   *\n   * @class stepsOrientation\n   * @for steps\n   **/\n\n  var stepsOrientation = $.fn.steps.stepsOrientation = {\n    /**\n     * Horizontal orientation\n     *\n     * @readOnly\n     * @property horizontal\n     * @type Integer\n     * @for stepsOrientation\n     **/\n    horizontal: 0,\n\n    /**\n     * Vertical orientation\n     *\n     * @readOnly\n     * @property vertical\n     * @type Integer\n     * @for stepsOrientation\n     **/\n    vertical: 1\n  };\n  /**\n   * An enum that represents the various transition animations.\n   *\n   * @class transitionEffect\n   * @for steps\n   **/\n\n  var transitionEffect = $.fn.steps.transitionEffect = {\n    /**\n     * No transition animation\n     *\n     * @readOnly\n     * @property none\n     * @type Integer\n     * @for transitionEffect\n     **/\n    none: 0,\n\n    /**\n     * Fade in transition\n     *\n     * @readOnly\n     * @property fade\n     * @type Integer\n     * @for transitionEffect\n     **/\n    fade: 1,\n\n    /**\n     * Slide up transition\n     *\n     * @readOnly\n     * @property slide\n     * @type Integer\n     * @for transitionEffect\n     **/\n    slide: 2,\n\n    /**\n     * Slide left transition\n     *\n     * @readOnly\n     * @property slideLeft\n     * @type Integer\n     * @for transitionEffect\n     **/\n    slideLeft: 3\n  };\n  var stepModel = $.fn.steps.stepModel = {\n    title: \"\",\n    content: \"\",\n    contentUrl: \"\",\n    contentMode: contentMode.html,\n    contentLoaded: false\n  };\n  /**\n   * An object that represents the default settings.\n   * There are two possibities to override the sub-properties.\n   * Either by doing it generally (global) or on initialization.\n   *\n   * @static\n   * @class defaults\n   * @for steps\n   * @example\n   *   // Global approach\n   *   $.steps.defaults.headerTag = \"h3\";\n   * @example\n   *   // Initialization approach\n   *   $(\"#wizard\").steps({ headerTag: \"h3\" });\n   **/\n\n  var defaults = $.fn.steps.defaults = {\n    /**\n     * The header tag is used to find the step button text within the declared wizard area.\n     *\n     * @property headerTag\n     * @type String\n     * @default \"h1\"\n     * @for defaults\n     **/\n    headerTag: \"h1\",\n\n    /**\n     * The body tag is used to find the step content within the declared wizard area.\n     *\n     * @property bodyTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    bodyTag: \"div\",\n\n    /**\n     * The content container tag which will be used to wrap all step contents.\n     *\n     * @property contentContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    contentContainerTag: \"div\",\n\n    /**\n     * The action container tag which will be used to wrap the pagination navigation.\n     *\n     * @property actionContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    actionContainerTag: \"div\",\n\n    /**\n     * The steps container tag which will be used to wrap the steps navigation.\n     *\n     * @property stepsContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    stepsContainerTag: \"div\",\n\n    /**\n     * The css class which will be added to the outer component wrapper.\n     *\n     * @property cssClass\n     * @type String\n     * @default \"wizard\"\n     * @for defaults\n     * @example\n     *     <div class=\"wizard\">\n     *         ...\n     *     </div>\n     **/\n    cssClass: \"wizard\",\n\n    /**\n     * The css class which will be used for floating scenarios.\n     *\n     * @property clearFixCssClass\n     * @type String\n     * @default \"clearfix\"\n     * @for defaults\n     **/\n    clearFixCssClass: \"clearfix\",\n\n    /**\n     * Determines whether the steps are vertically or horizontally oriented.\n     *\n     * @property stepsOrientation\n     * @type stepsOrientation\n     * @default horizontal\n     * @for defaults\n     * @since 1.0.0\n     **/\n    stepsOrientation: stepsOrientation.horizontal,\n\n    /*\n     * Tempplates\n     */\n\n    /**\n     * The title template which will be used to create a step button.\n     *\n     * @property titleTemplate\n     * @type String\n     * @default \"<span class=\\\"number\\\">#index#.</span> #title#\"\n     * @for defaults\n     **/\n    titleTemplate: \"<span class=\\\"number\\\">#index#.</span> #title#\",\n\n    /**\n     * The loading template which will be used to create the loading animation.\n     *\n     * @property loadingTemplate\n     * @type String\n     * @default \"<span class=\\\"spinner\\\"></span> #text#\"\n     * @for defaults\n     **/\n    loadingTemplate: \"<span class=\\\"spinner\\\"></span> #text#\",\n\n    /*\n     * Behaviour\n     */\n\n    /**\n     * Sets the focus to the first wizard instance in order to enable the key navigation from the begining if `true`. \n     *\n     * @property autoFocus\n     * @type Boolean\n     * @default false\n     * @for defaults\n     * @since 0.9.4\n     **/\n    autoFocus: false,\n\n    /**\n     * Enables all steps from the begining if `true` (all steps are clickable).\n     *\n     * @property enableAllSteps\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    enableAllSteps: false,\n\n    /**\n     * Enables keyboard navigation if `true` (arrow left and arrow right).\n     *\n     * @property enableKeyNavigation\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableKeyNavigation: true,\n\n    /**\n     * Enables pagination if `true`.\n     *\n     * @property enablePagination\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enablePagination: true,\n\n    /**\n     * Suppresses pagination if a form field is focused.\n     *\n     * @property suppressPaginationOnFocus\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    suppressPaginationOnFocus: true,\n\n    /**\n     * Enables cache for async loaded or iframe embedded content.\n     *\n     * @property enableContentCache\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableContentCache: true,\n\n    /**\n     * Shows the cancel button if enabled.\n     *\n     * @property enableCancelButton\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    enableCancelButton: false,\n\n    /**\n     * Shows the finish button if enabled.\n     *\n     * @property enableFinishButton\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableFinishButton: true,\n\n    /**\n     * Not yet implemented.\n     *\n     * @property preloadContent\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    preloadContent: false,\n\n    /**\n     * Shows the finish button always (on each step; right beside the next button) if `true`. \n     * Otherwise the next button will be replaced by the finish button if the last step becomes active.\n     *\n     * @property showFinishButtonAlways\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    showFinishButtonAlways: false,\n\n    /**\n     * Prevents jumping to a previous step.\n     *\n     * @property forceMoveForward\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    forceMoveForward: false,\n\n    /**\n     * Saves the current state (step position) to a cookie.\n     * By coming next time the last active step becomes activated.\n     *\n     * @property saveState\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    saveState: false,\n\n    /**\n     * The position to start on (zero-based).\n     *\n     * @property startIndex\n     * @type Integer\n     * @default 0\n     * @for defaults\n     **/\n    startIndex: 0,\n\n    /*\n     * Animation Effect Configuration\n     */\n\n    /**\n     * The animation effect which will be used for step transitions.\n     *\n     * @property transitionEffect\n     * @type transitionEffect\n     * @default none\n     * @for defaults\n     **/\n    transitionEffect: transitionEffect.none,\n\n    /**\n     * Animation speed for step transitions (in milliseconds).\n     *\n     * @property transitionEffectSpeed\n     * @type Integer\n     * @default 200\n     * @for defaults\n     **/\n    transitionEffectSpeed: 200,\n\n    /*\n     * Events\n     */\n\n    /**\n     * Fires before the step changes and can be used to prevent step changing by returning `false`. \n     * Very useful for form validation. \n     *\n     * @property onStepChanging\n     * @type Event\n     * @default function (event, currentIndex, newIndex) { return true; }\n     * @for defaults\n     **/\n    onStepChanging: function onStepChanging(event, currentIndex, newIndex) {\n      return true;\n    },\n\n    /**\n     * Fires after the step has change. \n     *\n     * @property onStepChanged\n     * @type Event\n     * @default function (event, currentIndex, priorIndex) { }\n     * @for defaults\n     **/\n    onStepChanged: function onStepChanged(event, currentIndex, priorIndex) {},\n\n    /**\n     * Fires after cancelation. \n     *\n     * @property onCanceled\n     * @type Event\n     * @default function (event) { }\n     * @for defaults\n     **/\n    onCanceled: function onCanceled(event) {},\n\n    /**\n     * Fires before finishing and can be used to prevent completion by returning `false`. \n     * Very useful for form validation. \n     *\n     * @property onFinishing\n     * @type Event\n     * @default function (event, currentIndex) { return true; }\n     * @for defaults\n     **/\n    onFinishing: function onFinishing(event, currentIndex) {\n      return true;\n    },\n\n    /**\n     * Fires after completion. \n     *\n     * @property onFinished\n     * @type Event\n     * @default function (event, currentIndex) { }\n     * @for defaults\n     **/\n    onFinished: function onFinished(event, currentIndex) {},\n\n    /**\n     * Fires after async content is loaded. \n     *\n     * @property onContentLoaded\n     * @type Event\n     * @default function (event, index) { }\n     * @for defaults\n     **/\n    onContentLoaded: function onContentLoaded(event, currentIndex) {},\n\n    /**\n     * Fires when the wizard is initialized. \n     *\n     * @property onInit\n     * @type Event\n     * @default function (event) { }\n     * @for defaults\n     **/\n    onInit: function onInit(event, currentIndex) {},\n\n    /**\n     * Contains all labels. \n     *\n     * @property labels\n     * @type Object\n     * @for defaults\n     **/\n    labels: {\n      /**\n       * Label for the cancel button.\n       *\n       * @property cancel\n       * @type String\n       * @default \"Cancel\"\n       * @for defaults\n       **/\n      cancel: \"Cancel\",\n\n      /**\n       * This label is important for accessability reasons.\n       * Indicates which step is activated.\n       *\n       * @property current\n       * @type String\n       * @default \"current step:\"\n       * @for defaults\n       **/\n      current: \"current step:\",\n\n      /**\n       * This label is important for accessability reasons and describes the kind of navigation.\n       *\n       * @property pagination\n       * @type String\n       * @default \"Pagination\"\n       * @for defaults\n       * @since 0.9.7\n       **/\n      pagination: \"Pagination\",\n\n      /**\n       * Label for the finish button.\n       *\n       * @property finish\n       * @type String\n       * @default \"Finish\"\n       * @for defaults\n       **/\n      finish: \"Finish\",\n\n      /**\n       * Label for the next button.\n       *\n       * @property next\n       * @type String\n       * @default \"Next\"\n       * @for defaults\n       **/\n      next: \"Next\",\n\n      /**\n       * Label for the previous button.\n       *\n       * @property previous\n       * @type String\n       * @default \"Previous\"\n       * @for defaults\n       **/\n      previous: \"Previous\",\n\n      /**\n       * Label for the loading animation.\n       *\n       * @property loading\n       * @type String\n       * @default \"Loading ...\"\n       * @for defaults\n       **/\n      loading: \"Loading ...\"\n    }\n  };\n})(jQuery);",{"version":3,"sources":["/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/jquery.steps.js"],"names":["$","undefined","fn","extend","_aria","name","value","attr","_removeAria","removeAttr","_enableAria","enable","removeClass","addClass","_showAria","show","hide","_selectAria","select","_id","id","String","prototype","format","args","arguments","length","isArray","formattedString","i","pattern","RegExp","replace","_uniqueId","_cookiePrefix","_tabSuffix","_tabpanelSuffix","_titleSuffix","_indexOutOfRangeErrorMessage","_missingCorrespondingElementErrorMessage","addStepToCache","wizard","step","getSteps","push","analyzeData","options","state","stepTitles","children","headerTag","stepContents","bodyTag","throwError","startIndex","stepCount","saveState","cookie","savedState","getUniqueId","savedIndex","parseInt","isNaN","currentIndex","each","index","item","content","eq","modeData","data","mode","contentMode","html","getValidEnumValue","test","contentUrl","contentLoaded","stepModel","title","cancel","triggerHandler","decreaseCurrentIndexBy","decreaseBy","destroy","eventNamespace","getEventNamespace","unbind","removeData","find","clearFixCssClass","contents","empty","wizardSubstitute","get","tagName","wizardId","after","remove","finishStep","currentStep","getStepAnchor","uniqueId","getStepPanel","getStepTitle","getOptions","getState","getStep","steps","concat","enumType","keyOrValue","validateArgument","key","goToNextStep","paginationClick","increaseCurrentIndexBy","goToPreviousStep","goToStep","forceMoveForward","oldIndex","saveCurrentStateToCookie","refreshStepNavigation","refreshPagination","loadAsyncContent","startTransitionEffect","increaseBy","initialize","opts","defaults","transitionElement","render","registerEvents","autoFocus","focus","insertStep","insertStepToCache","contentContainer","header","body","prepend","renderBody","renderTitle","refreshSteps","splice","keyUpHandler","event","suppressPaginationOnFocus","is","preventDefault","keyCodes","left","right","keyCode","enableContentCache","iframe","async","currentStepContent","append","renderTemplate","loadingTemplate","text","labels","loading","ajax","url","cache","done","anchor","parent","isDisabled","hasClass","click","paginationClickHandler","href","substring","lastIndexOf","enablePagination","finish","next","previous","enableFinishButton","showFinishButtonAlways","currentOrNewStepAnchor","currentInfo","current","oldStepAnchor","uniqueStepId","uniqueBodyId","uniqueHeaderId","titleTemplate","bind","onCanceled","onContentLoaded","onFinishing","onFinished","onInit","onStepChanging","onStepChanged","enableKeyNavigation","removeStep","removeStepFromCache","first","contentWrapperTemplate","stepsWrapperTemplate","orientation","stepsOrientation","verticalCssClass","vertical","contentWrapper","contentContainerTag","stepsWrapper","stepsContainerTag","wrapInner","cssClass","populatedContent","renderPagination","pagination","buttonTemplate","buttons","enableCancelButton","actionContainerTag","template","substitutes","matches","match","stepCollection","stepItem","enableAllSteps","stepClickHandler","doneCallback","effect","transitionEffect","effectSpeed","transitionEffectSpeed","newStep","fade","slide","promise","slideLeft","outerWidth","posFadeOut","posFadeIn","when","animate","css","position","message","Array","slice","call","Error","argumentName","argumentValue","method","apply","error","add","getCurrentIndex","getCurrentStep","insert","setStep","skip","count","horizontal","none","preloadContent","newIndex","priorIndex","jQuery"],"mappings":";;;;AAAA;;;;;AAKA;;AAAC,CAAC,UAAUA,CAAV,EAAaC,SAAb,EACF;AACAD,EAAAA,CAAC,CAACE,EAAF,CAAKC,MAAL,CAAY;AACRC,IAAAA,KAAK,EAAE,eAAUC,IAAV,EAAgBC,KAAhB,EACP;AACI,aAAO,KAAKC,IAAL,CAAU,UAAUF,IAApB,EAA0BC,KAA1B,CAAP;AACH,KAJO;AAMRE,IAAAA,WAAW,EAAE,qBAAUH,IAAV,EACb;AACI,aAAO,KAAKI,UAAL,CAAgB,UAAUJ,IAA1B,CAAP;AACH,KATO;AAWRK,IAAAA,WAAW,EAAE,qBAAUC,MAAV,EACb;AACI,aAAQA,MAAM,IAAI,IAAV,IAAkBA,MAAnB,GACH,KAAKC,WAAL,CAAiB,UAAjB,EAA6BR,KAA7B,CAAmC,UAAnC,EAA+C,OAA/C,CADG,GAEH,KAAKS,QAAL,CAAc,UAAd,EAA0BT,KAA1B,CAAgC,UAAhC,EAA4C,MAA5C,CAFJ;AAGH,KAhBO;AAkBRU,IAAAA,SAAS,EAAE,mBAAUC,IAAV,EACX;AACI,aAAQA,IAAI,IAAI,IAAR,IAAgBA,IAAjB,GACH,KAAKA,IAAL,GAAYX,KAAZ,CAAkB,QAAlB,EAA4B,OAA5B,CADG,GAEH,KAAKY,IAAL,GAAYZ,KAAZ,CAAkB,QAAlB,EAA4B,MAA5B,CAFJ;AAGH,KAvBO;AAyBRa,IAAAA,WAAW,EAAE,qBAAUC,MAAV,EACb;AACI,aAAQA,MAAM,IAAI,IAAV,IAAkBA,MAAnB,GACH,KAAKL,QAAL,CAAc,SAAd,EAAyBT,KAAzB,CAA+B,UAA/B,EAA2C,MAA3C,CADG,GAEH,KAAKQ,WAAL,CAAiB,SAAjB,EAA4BR,KAA5B,CAAkC,UAAlC,EAA8C,OAA9C,CAFJ;AAGH,KA9BO;AAgCRe,IAAAA,GAAG,EAAE,aAAUC,EAAV,EACL;AACI,aAAQA,EAAD,GAAO,KAAKb,IAAL,CAAU,IAAV,EAAgBa,EAAhB,CAAP,GAA6B,KAAKb,IAAL,CAAU,IAAV,CAApC;AACH;AAnCO,GAAZ;;AAsCA,MAAI,CAACc,MAAM,CAACC,SAAP,CAAiBC,MAAtB,EACA;AACIF,IAAAA,MAAM,CAACC,SAAP,CAAiBC,MAAjB,GAA0B,YAC1B;AACI,UAAIC,IAAI,GAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B1B,CAAC,CAAC2B,OAAF,CAAUF,SAAS,CAAC,CAAD,CAAnB,CAA3B,GAAsDA,SAAS,CAAC,CAAD,CAA/D,GAAqEA,SAAhF;AACA,UAAIG,eAAe,GAAG,IAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACE,MAAzB,EAAiCG,CAAC,EAAlC,EACA;AACI,YAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,QAAQF,CAAR,GAAY,KAAvB,EAA8B,IAA9B,CAAd;AACAD,QAAAA,eAAe,GAAGA,eAAe,CAACI,OAAhB,CAAwBF,OAAxB,EAAiCN,IAAI,CAACK,CAAD,CAArC,CAAlB;AACH;;AACD,aAAOD,eAAP;AACH,KAVD;AAWH;AAED;;;;;;;;;;AAQA,MAAIK,SAAS,GAAG,CAAhB;AAEA;;;;;;;;;AAQA,MAAIC,aAAa,GAAG,qBAApB;AAEA;;;;;;;;;;AASA,MAAIC,UAAU,GAAG,KAAjB;AAEA;;;;;;;;;;AASA,MAAIC,eAAe,GAAG,KAAtB;AAEA;;;;;;;;;;AASA,MAAIC,YAAY,GAAG,KAAnB;AAEA;;;;;;;;;AAQA,MAAIC,4BAA4B,GAAG,qBAAnC;AAEA;;;;;;;;;AAQA,MAAIC,wCAAwC,GAAG,iDAA/C;AAEA;;;;;;;;;;AASA,WAASC,cAAT,CAAwBC,MAAxB,EAAgCC,IAAhC,EACA;AACIC,IAAAA,QAAQ,CAACF,MAAD,CAAR,CAAiBG,IAAjB,CAAsBF,IAAtB;AACH;;AAED,WAASG,WAAT,CAAqBJ,MAArB,EAA6BK,OAA7B,EAAsCC,KAAtC,EACA;AACI,QAAIC,UAAU,GAAGP,MAAM,CAACQ,QAAP,CAAgBH,OAAO,CAACI,SAAxB,CAAjB;AAAA,QACIC,YAAY,GAAGV,MAAM,CAACQ,QAAP,CAAgBH,OAAO,CAACM,OAAxB,CADnB,CADJ,CAII;;AACA,QAAIJ,UAAU,CAACtB,MAAX,GAAoByB,YAAY,CAACzB,MAArC,EACA;AACI2B,MAAAA,UAAU,CAACd,wCAAD,EAA2C,UAA3C,CAAV;AACH,KAHD,MAIK,IAAIS,UAAU,CAACtB,MAAX,GAAoByB,YAAY,CAACzB,MAArC,EACL;AACI2B,MAAAA,UAAU,CAACd,wCAAD,EAA2C,QAA3C,CAAV;AACH;;AAED,QAAIe,UAAU,GAAGR,OAAO,CAACQ,UAAzB;AAEAP,IAAAA,KAAK,CAACQ,SAAN,GAAkBP,UAAU,CAACtB,MAA7B,CAhBJ,CAkBI;;AACA,QAAIoB,OAAO,CAACU,SAAR,IAAqBxD,CAAC,CAACyD,MAA3B,EACA;AACI,UAAIC,UAAU,GAAG1D,CAAC,CAACyD,MAAF,CAASvB,aAAa,GAAGyB,WAAW,CAAClB,MAAD,CAApC,CAAjB,CADJ,CAEI;;AACA,UAAImB,UAAU,GAAGC,QAAQ,CAACH,UAAD,EAAa,CAAb,CAAzB;;AACA,UAAI,CAACI,KAAK,CAACF,UAAD,CAAN,IAAsBA,UAAU,GAAGb,KAAK,CAACQ,SAA7C,EACA;AACID,QAAAA,UAAU,GAAGM,UAAb;AACH;AACJ;;AAEDb,IAAAA,KAAK,CAACgB,YAAN,GAAqBT,UAArB;AAEAN,IAAAA,UAAU,CAACgB,IAAX,CAAgB,UAAUC,KAAV,EAChB;AACI,UAAIC,IAAI,GAAGlE,CAAC,CAAC,IAAD,CAAZ;AAAA,UAAoB;AAChBmE,MAAAA,OAAO,GAAGhB,YAAY,CAACiB,EAAb,CAAgBH,KAAhB,CADd;AAAA,UAEII,QAAQ,GAAGF,OAAO,CAACG,IAAR,CAAa,MAAb,CAFf;AAAA,UAGIC,IAAI,GAAIF,QAAQ,IAAI,IAAb,GAAqBG,WAAW,CAACC,IAAjC,GAAwCC,iBAAiB,CAACF,WAAD,EAC3D,QAAQG,IAAR,CAAaN,QAAb,KAA0BP,KAAK,CAACO,QAAD,CAAhC,GAA8CA,QAA9C,GAAyDR,QAAQ,CAACQ,QAAD,EAAW,CAAX,CADL,CAHpE;AAAA,UAKIO,UAAU,GAAIL,IAAI,KAAKC,WAAW,CAACC,IAArB,IAA6BN,OAAO,CAACG,IAAR,CAAa,KAAb,MAAwBrE,SAAtD,GACT,EADS,GACJkE,OAAO,CAACG,IAAR,CAAa,KAAb,CANb;AAAA,UAOIO,aAAa,GAAIN,IAAI,KAAKC,WAAW,CAACC,IAArB,IAA6BN,OAAO,CAACG,IAAR,CAAa,QAAb,MAA2B,GAP7E;AAAA,UAQI5B,IAAI,GAAG1C,CAAC,CAACG,MAAF,CAAS,EAAT,EAAa2E,SAAb,EAAwB;AAC3BC,QAAAA,KAAK,EAAEb,IAAI,CAACO,IAAL,EADoB;AAE3BN,QAAAA,OAAO,EAAGI,IAAI,KAAKC,WAAW,CAACC,IAAtB,GAA8BN,OAAO,CAACM,IAAR,EAA9B,GAA+C,EAF7B;AAG3BG,QAAAA,UAAU,EAAEA,UAHe;AAI3BJ,QAAAA,WAAW,EAAED,IAJc;AAK3BM,QAAAA,aAAa,EAAEA;AALY,OAAxB,CARX;AAgBArC,MAAAA,cAAc,CAACC,MAAD,EAASC,IAAT,CAAd;AACH,KAnBD;AAoBH;AAED;;;;;;;;;;AAQA,WAASsC,MAAT,CAAgBvC,MAAhB,EACA;AACIA,IAAAA,MAAM,CAACwC,cAAP,CAAsB,UAAtB;AACH;;AAED,WAASC,sBAAT,CAAgCnC,KAAhC,EAAuCoC,UAAvC,EACA;AACI,WAAOpC,KAAK,CAACgB,YAAN,GAAqBoB,UAA5B;AACH;AAED;;;;;;;;;;AAQA,WAASC,OAAT,CAAiB3C,MAAjB,EAAyBK,OAAzB,EACA;AACI,QAAIuC,cAAc,GAAGC,iBAAiB,CAAC7C,MAAD,CAAtC,CADJ,CAGI;;AACAA,IAAAA,MAAM,CAAC8C,MAAP,CAAcF,cAAd,EAA8BG,UAA9B,CAAyC,KAAzC,EAAgDA,UAAhD,CAA2D,SAA3D,EACKA,UADL,CACgB,OADhB,EACyBA,UADzB,CACoC,OADpC,EAC6CA,UAD7C,CACwD,gBADxD,EAEKC,IAFL,CAEU,YAFV,EAEwBF,MAFxB,CAE+BF,cAF/B,EAJJ,CAQI;;AACA5C,IAAAA,MAAM,CAAC7B,WAAP,CAAmBkC,OAAO,CAAC4C,gBAAR,GAA2B,WAA9C;AAEA,QAAIC,QAAQ,GAAGlD,MAAM,CAACgD,IAAP,CAAY,cAAZ,CAAf,CAXJ,CAaI;;AACAE,IAAAA,QAAQ,CAACH,UAAT,CAAoB,QAApB,EAA8BA,UAA9B,CAAyC,MAAzC,EAAiDA,UAAjD,CAA4D,KAA5D,EAdJ,CAgBI;;AACAG,IAAAA,QAAQ,CAAClF,UAAT,CAAoB,IAApB,EAA0BA,UAA1B,CAAqC,MAArC,EAA6CA,UAA7C,CAAwD,UAAxD,EACKA,UADL,CACgB,OADhB,EACyBA,UADzB,CACoC,OADpC,EAC6CD,WAD7C,CACyD,YADzD,EAEKA,WAFL,CAEiB,QAFjB,EAjBJ,CAqBI;;;AACAiC,IAAAA,MAAM,CAACgD,IAAP,CAAY,gEAAZ,EAA8EG,KAA9E;AAEA,QAAIC,gBAAgB,GAAG7F,CAAC,CAAC,4BAA4BuB,MAA5B,CAAmCkB,MAAM,CAACqD,GAAP,CAAW,CAAX,EAAcC,OAAjD,EAA0DtD,MAAM,CAAClC,IAAP,CAAY,OAAZ,CAA1D,CAAD,CAAxB;;AAEA,QAAIyF,QAAQ,GAAGvD,MAAM,CAACtB,GAAP,EAAf;;AACA,QAAI6E,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,EAArC,EACA;AACIH,MAAAA,gBAAgB,CAAC1E,GAAjB,CAAqB6E,QAArB;AACH;;AAEDH,IAAAA,gBAAgB,CAACpB,IAAjB,CAAsBhC,MAAM,CAACgD,IAAP,CAAY,UAAZ,EAAwBhB,IAAxB,EAAtB;AACAhC,IAAAA,MAAM,CAACwD,KAAP,CAAaJ,gBAAb;AACApD,IAAAA,MAAM,CAACyD,MAAP;AAEA,WAAOL,gBAAP;AACH;AAED;;;;;;;;;;;AASA,WAASM,UAAT,CAAoB1D,MAApB,EAA4BM,KAA5B,EACA;AACI,QAAIqD,WAAW,GAAG3D,MAAM,CAACgD,IAAP,CAAY,WAAZ,EAAyBrB,EAAzB,CAA4BrB,KAAK,CAACgB,YAAlC,CAAlB;;AAEA,QAAItB,MAAM,CAACwC,cAAP,CAAsB,WAAtB,EAAmC,CAAClC,KAAK,CAACgB,YAAP,CAAnC,CAAJ,EACA;AACIqC,MAAAA,WAAW,CAACvF,QAAZ,CAAqB,MAArB,EAA6BD,WAA7B,CAAyC,OAAzC;AACA6B,MAAAA,MAAM,CAACwC,cAAP,CAAsB,UAAtB,EAAkC,CAAClC,KAAK,CAACgB,YAAP,CAAlC;AACH,KAJD,MAMA;AACIqC,MAAAA,WAAW,CAACvF,QAAZ,CAAqB,OAArB;AACH;AACJ;AAED;;;;;;;;;;;AASA,WAASyE,iBAAT,CAA2B7C,MAA3B,EACA;AACI,QAAI4C,cAAc,GAAG5C,MAAM,CAAC6B,IAAP,CAAY,gBAAZ,CAArB;;AAEA,QAAIe,cAAc,IAAI,IAAtB,EACA;AACIA,MAAAA,cAAc,GAAG,MAAM1B,WAAW,CAAClB,MAAD,CAAlC;AACAA,MAAAA,MAAM,CAAC6B,IAAP,CAAY,gBAAZ,EAA8Be,cAA9B;AACH;;AAED,WAAOA,cAAP;AACH;;AAED,WAASgB,aAAT,CAAuB5D,MAAvB,EAA+BwB,KAA/B,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;AAEA,WAAOA,MAAM,CAACgD,IAAP,CAAY,MAAMa,QAAN,GAAiBnE,UAAjB,GAA8B8B,KAA1C,CAAP;AACH;;AAED,WAASsC,YAAT,CAAsB9D,MAAtB,EAA8BwB,KAA9B,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;AAEA,WAAOA,MAAM,CAACgD,IAAP,CAAY,MAAMa,QAAN,GAAiBlE,eAAjB,GAAmC6B,KAA/C,CAAP;AACH;;AAED,WAASuC,YAAT,CAAsB/D,MAAtB,EAA8BwB,KAA9B,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;AAEA,WAAOA,MAAM,CAACgD,IAAP,CAAY,MAAMa,QAAN,GAAiBjE,YAAjB,GAAgC4B,KAA5C,CAAP;AACH;;AAED,WAASwC,UAAT,CAAoBhE,MAApB,EACA;AACI,WAAOA,MAAM,CAAC6B,IAAP,CAAY,SAAZ,CAAP;AACH;;AAED,WAASoC,QAAT,CAAkBjE,MAAlB,EACA;AACI,WAAOA,MAAM,CAAC6B,IAAP,CAAY,OAAZ,CAAP;AACH;;AAED,WAAS3B,QAAT,CAAkBF,MAAlB,EACA;AACI,WAAOA,MAAM,CAAC6B,IAAP,CAAY,OAAZ,CAAP;AACH;AAED;;;;;;;;;;;AASA,WAASqC,OAAT,CAAiBlE,MAAjB,EAAyBwB,KAAzB,EACA;AACI,QAAI2C,KAAK,GAAGjE,QAAQ,CAACF,MAAD,CAApB;;AAEA,QAAIwB,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI2C,KAAK,CAAClF,MAAhC,EACA;AACI2B,MAAAA,UAAU,CAACf,4BAAD,CAAV;AACH;;AAED,WAAOsE,KAAK,CAAC3C,KAAD,CAAZ;AACH;AAED;;;;;;;;;;;AASA,WAASN,WAAT,CAAqBlB,MAArB,EACA;AACI,QAAI6D,QAAQ,GAAG7D,MAAM,CAAC6B,IAAP,CAAY,KAAZ,CAAf;;AAEA,QAAIgC,QAAQ,IAAI,IAAhB,EACA;AACIA,MAAAA,QAAQ,GAAG7D,MAAM,CAACtB,GAAP,EAAX;;AACA,UAAImF,QAAQ,IAAI,IAAhB,EACA;AACIA,QAAAA,QAAQ,GAAG,aAAaO,MAAb,CAAoB5E,SAApB,CAAX;;AACAQ,QAAAA,MAAM,CAACtB,GAAP,CAAWmF,QAAX;AACH;;AAEDrE,MAAAA,SAAS;AACTQ,MAAAA,MAAM,CAAC6B,IAAP,CAAY,KAAZ,EAAmBgC,QAAnB;AACH;;AAED,WAAOA,QAAP;AACH;AAED;;;;;;;;;;;AASA,WAAS5B,iBAAT,CAA2BoC,QAA3B,EAAqCC,UAArC,EACA;AACIC,IAAAA,gBAAgB,CAAC,UAAD,EAAaF,QAAb,CAAhB;AACAE,IAAAA,gBAAgB,CAAC,YAAD,EAAeD,UAAf,CAAhB,CAFJ,CAII;;AACA,QAAI,OAAOA,UAAP,KAAsB,QAA1B,EACA;AACI,UAAIzG,KAAK,GAAGwG,QAAQ,CAACC,UAAD,CAApB;;AACA,UAAIzG,KAAK,KAAKL,SAAd,EACA;AACIoD,QAAAA,UAAU,CAAC,oCAAD,EAAuC0D,UAAvC,CAAV;AACH;;AAED,aAAOzG,KAAP;AACH,KATD,CAUA;AAVA,SAWK,IAAI,OAAOyG,UAAP,KAAsB,QAA1B,EACL;AACI,aAAK,IAAIE,GAAT,IAAgBH,QAAhB,EACA;AACI,cAAIA,QAAQ,CAACG,GAAD,CAAR,KAAkBF,UAAtB,EACA;AACI,mBAAOA,UAAP;AACH;AACJ;;AAED1D,QAAAA,UAAU,CAAC,2BAAD,EAA8B0D,UAA9B,CAAV;AACH,OAXI,CAYL;AAZK,WAcL;AACI1D,UAAAA,UAAU,CAAC,4BAAD,CAAV;AACH;AACJ;AAED;;;;;;;;;;;;;AAWA,WAAS6D,YAAT,CAAsBzE,MAAtB,EAA8BK,OAA9B,EAAuCC,KAAvC,EACA;AACI,WAAOoE,eAAe,CAAC1E,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBqE,sBAAsB,CAACrE,KAAD,EAAQ,CAAR,CAA/C,CAAtB;AACH;AAED;;;;;;;;;;;;;AAWA,WAASsE,gBAAT,CAA0B5E,MAA1B,EAAkCK,OAAlC,EAA2CC,KAA3C,EACA;AACI,WAAOoE,eAAe,CAAC1E,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBmC,sBAAsB,CAACnC,KAAD,EAAQ,CAAR,CAA/C,CAAtB;AACH;AAED;;;;;;;;;;;;;;AAYA,WAASuE,QAAT,CAAkB7E,MAAlB,EAA0BK,OAA1B,EAAmCC,KAAnC,EAA0CkB,KAA1C,EACA;AACI,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAIlB,KAAK,CAACQ,SAAhC,EACA;AACIF,MAAAA,UAAU,CAACf,4BAAD,CAAV;AACH;;AAED,QAAIQ,OAAO,CAACyE,gBAAR,IAA4BtD,KAAK,GAAGlB,KAAK,CAACgB,YAA9C,EACA;AACI;AACH;;AAED,QAAIyD,QAAQ,GAAGzE,KAAK,CAACgB,YAArB;;AACA,QAAItB,MAAM,CAACwC,cAAP,CAAsB,cAAtB,EAAsC,CAAClC,KAAK,CAACgB,YAAP,EAAqBE,KAArB,CAAtC,CAAJ,EACA;AACI;AACAlB,MAAAA,KAAK,CAACgB,YAAN,GAAqBE,KAArB;AACAwD,MAAAA,wBAAwB,CAAChF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAxB,CAHJ,CAKI;;AACA2E,MAAAA,qBAAqB,CAACjF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyByE,QAAzB,CAArB;AACAG,MAAAA,iBAAiB,CAAClF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAjB;AACA6E,MAAAA,gBAAgB,CAACnF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAhB;AACA8E,MAAAA,qBAAqB,CAACpF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBkB,KAAzB,EAAgCuD,QAAhC,EAA0C,YAC/D;AACI/E,QAAAA,MAAM,CAACwC,cAAP,CAAsB,aAAtB,EAAqC,CAAChB,KAAD,EAAQuD,QAAR,CAArC;AACH,OAHoB,CAArB;AAIH,KAdD,MAgBA;AACI/E,MAAAA,MAAM,CAACgD,IAAP,CAAY,WAAZ,EAAyBrB,EAAzB,CAA4BoD,QAA5B,EAAsC3G,QAAtC,CAA+C,OAA/C;AACH;;AAED,WAAO,IAAP;AACH;;AAED,WAASuG,sBAAT,CAAgCrE,KAAhC,EAAuC+E,UAAvC,EACA;AACI,WAAO/E,KAAK,CAACgB,YAAN,GAAqB+D,UAA5B;AACH;AAED;;;;;;;;;;AAQA,WAASC,UAAT,CAAoBjF,OAApB,EACA;AACI;AACA,QAAIkF,IAAI,GAAGhI,CAAC,CAACG,MAAF,CAAS,IAAT,EAAe,EAAf,EAAmB8H,QAAnB,EAA6BnF,OAA7B,CAAX;AAEA,WAAO,KAAKkB,IAAL,CAAU,YACjB;AACI,UAAIvB,MAAM,GAAGzC,CAAC,CAAC,IAAD,CAAd;AACA,UAAI+C,KAAK,GAAG;AACRgB,QAAAA,YAAY,EAAEiE,IAAI,CAAC1E,UADX;AAER8C,QAAAA,WAAW,EAAE,IAFL;AAGR7C,QAAAA,SAAS,EAAE,CAHH;AAIR2E,QAAAA,iBAAiB,EAAE;AAJX,OAAZ,CAFJ,CASI;;AACAzF,MAAAA,MAAM,CAAC6B,IAAP,CAAY,SAAZ,EAAuB0D,IAAvB;AACAvF,MAAAA,MAAM,CAAC6B,IAAP,CAAY,OAAZ,EAAqBvB,KAArB;AACAN,MAAAA,MAAM,CAAC6B,IAAP,CAAY,OAAZ,EAAqB,EAArB;AAEAzB,MAAAA,WAAW,CAACJ,MAAD,EAASuF,IAAT,EAAejF,KAAf,CAAX;AACAoF,MAAAA,MAAM,CAAC1F,MAAD,EAASuF,IAAT,EAAejF,KAAf,CAAN;AACAqF,MAAAA,cAAc,CAAC3F,MAAD,EAASuF,IAAT,CAAd,CAhBJ,CAkBI;;AACA,UAAIA,IAAI,CAACK,SAAL,IAAkBpG,SAAS,KAAK,CAApC,EACA;AACIoE,QAAAA,aAAa,CAAC5D,MAAD,EAASuF,IAAI,CAAC1E,UAAd,CAAb,CAAuCgF,KAAvC;AACH;;AAED7F,MAAAA,MAAM,CAACwC,cAAP,CAAsB,MAAtB,EAA8B,CAAC+C,IAAI,CAAC1E,UAAN,CAA9B;AACH,KA1BM,CAAP;AA2BH;AAED;;;;;;;;;;;;;;;;;;;;;;AAoBA,WAASiF,UAAT,CAAoB9F,MAApB,EAA4BK,OAA5B,EAAqCC,KAArC,EAA4CkB,KAA5C,EAAmDvB,IAAnD,EACA;AACI,QAAIuB,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGlB,KAAK,CAACQ,SAA/B,EACA;AACIF,MAAAA,UAAU,CAACf,4BAAD,CAAV;AACH,KAJL,CAMI;AAEA;;;AACAI,IAAAA,IAAI,GAAG1C,CAAC,CAACG,MAAF,CAAS,EAAT,EAAa2E,SAAb,EAAwBpC,IAAxB,CAAP;AACA8F,IAAAA,iBAAiB,CAAC/F,MAAD,EAASwB,KAAT,EAAgBvB,IAAhB,CAAjB;;AACA,QAAIK,KAAK,CAACgB,YAAN,KAAuBhB,KAAK,CAACQ,SAA7B,IAA0CR,KAAK,CAACgB,YAAN,IAAsBE,KAApE,EACA;AACIlB,MAAAA,KAAK,CAACgB,YAAN;AACA0D,MAAAA,wBAAwB,CAAChF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAxB;AACH;;AACDA,IAAAA,KAAK,CAACQ,SAAN;AAEA,QAAIkF,gBAAgB,GAAGhG,MAAM,CAACgD,IAAP,CAAY,UAAZ,CAAvB;AAAA,QACIiD,MAAM,GAAG1I,CAAC,CAAC,iBAAiBuB,MAAjB,CAAwBuB,OAAO,CAACI,SAAhC,EAA2CR,IAAI,CAACqC,KAAhD,CAAD,CADd;AAAA,QAEI4D,IAAI,GAAG3I,CAAC,CAAC,cAAcuB,MAAd,CAAqBuB,OAAO,CAACM,OAA7B,CAAD,CAFZ;;AAIA,QAAIV,IAAI,CAAC8B,WAAL,IAAoB,IAApB,IAA4B9B,IAAI,CAAC8B,WAAL,KAAqBA,WAAW,CAACC,IAAjE,EACA;AACIkE,MAAAA,IAAI,CAAClE,IAAL,CAAU/B,IAAI,CAACyB,OAAf;AACH;;AAED,QAAIF,KAAK,KAAK,CAAd,EACA;AACIwE,MAAAA,gBAAgB,CAACG,OAAjB,CAAyBD,IAAzB,EAA+BC,OAA/B,CAAuCF,MAAvC;AACH,KAHD,MAKA;AACInC,MAAAA,YAAY,CAAC9D,MAAD,EAAUwB,KAAK,GAAG,CAAlB,CAAZ,CAAkCgC,KAAlC,CAAwC0C,IAAxC,EAA8C1C,KAA9C,CAAoDyC,MAApD;AACH;;AAEDG,IAAAA,UAAU,CAACpG,MAAD,EAASM,KAAT,EAAgB4F,IAAhB,EAAsB1E,KAAtB,CAAV;AACA6E,IAAAA,WAAW,CAACrG,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyB2F,MAAzB,EAAiCzE,KAAjC,CAAX;AACA8E,IAAAA,YAAY,CAACtG,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBkB,KAAzB,CAAZ;;AACA,QAAIA,KAAK,KAAKlB,KAAK,CAACgB,YAApB,EACA;AACI2D,MAAAA,qBAAqB,CAACjF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAArB;AACH;;AACD4E,IAAAA,iBAAiB,CAAClF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAjB;AAEA,WAAON,MAAP;AACH;AAED;;;;;;;;;;;;AAUA,WAAS+F,iBAAT,CAA2B/F,MAA3B,EAAmCwB,KAAnC,EAA0CvB,IAA1C,EACA;AACIC,IAAAA,QAAQ,CAACF,MAAD,CAAR,CAAiBuG,MAAjB,CAAwB/E,KAAxB,EAA+B,CAA/B,EAAkCvB,IAAlC;AACH;AAED;;;;;;;;;;AAQA,WAASuG,YAAT,CAAsBC,KAAtB,EACA;AACI,QAAIzG,MAAM,GAAGzC,CAAC,CAAC,IAAD,CAAd;AAAA,QACI8C,OAAO,GAAG2D,UAAU,CAAChE,MAAD,CADxB;AAAA,QAEIM,KAAK,GAAG2D,QAAQ,CAACjE,MAAD,CAFpB;;AAIA,QAAIK,OAAO,CAACqG,yBAAR,IAAqC1G,MAAM,CAACgD,IAAP,CAAY,QAAZ,EAAsB2D,EAAtB,CAAyB,QAAzB,CAAzC,EACA;AACIF,MAAAA,KAAK,CAACG,cAAN;AACA,aAAO,KAAP;AACH;;AAED,QAAIC,QAAQ,GAAG;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KAAf;;AACA,QAAIN,KAAK,CAACO,OAAN,KAAkBH,QAAQ,CAACC,IAA/B,EACA;AACIL,MAAAA,KAAK,CAACG,cAAN;AACAhC,MAAAA,gBAAgB,CAAC5E,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAhB;AACH,KAJD,MAKK,IAAImG,KAAK,CAACO,OAAN,KAAkBH,QAAQ,CAACE,KAA/B,EACL;AACIN,MAAAA,KAAK,CAACG,cAAN;AACAnC,MAAAA,YAAY,CAACzE,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAZ;AACH;AACJ;AAED;;;;;;;;;;;;AAUA,WAAS6E,gBAAT,CAA0BnF,MAA1B,EAAkCK,OAAlC,EAA2CC,KAA3C,EACA;AACI,QAAIA,KAAK,CAACQ,SAAN,GAAkB,CAAtB,EACA;AACI,UAAIQ,YAAY,GAAGhB,KAAK,CAACgB,YAAzB;AAAA,UACIqC,WAAW,GAAGO,OAAO,CAAClE,MAAD,EAASsB,YAAT,CADzB;;AAGA,UAAI,CAACjB,OAAO,CAAC4G,kBAAT,IAA+B,CAACtD,WAAW,CAACvB,aAAhD,EACA;AACI,gBAAQH,iBAAiB,CAACF,WAAD,EAAc4B,WAAW,CAAC5B,WAA1B,CAAzB;AAEI,eAAKA,WAAW,CAACmF,MAAjB;AACIlH,YAAAA,MAAM,CAACgD,IAAP,CAAY,kBAAZ,EAAgCrB,EAAhC,CAAmCrB,KAAK,CAACgB,YAAzC,EAAuD6B,KAAvD,GACKnB,IADL,CACU,mBAAmB2B,WAAW,CAACxB,UAA/B,GAA4C,0CADtD,EAEKN,IAFL,CAEU,QAFV,EAEoB,GAFpB;AAGA;;AAEJ,eAAKE,WAAW,CAACoF,KAAjB;AACI,gBAAIC,kBAAkB,GAAGtD,YAAY,CAAC9D,MAAD,EAASsB,YAAT,CAAZ,CAAmC3D,KAAnC,CAAyC,MAAzC,EAAiD,MAAjD,EACpBwF,KADoB,GACZkE,MADY,CACLC,cAAc,CAACjH,OAAO,CAACkH,eAAT,EAA0B;AAAEC,cAAAA,IAAI,EAAEnH,OAAO,CAACoH,MAAR,CAAeC;AAAvB,aAA1B,CADT,CAAzB;;AAGAnK,YAAAA,CAAC,CAACoK,IAAF,CAAO;AAAEC,cAAAA,GAAG,EAAEjE,WAAW,CAACxB,UAAnB;AAA+B0F,cAAAA,KAAK,EAAE;AAAtC,aAAP,EAAsDC,IAAtD,CAA2D,UAAUjG,IAAV,EAC3D;AACIuF,cAAAA,kBAAkB,CAACjE,KAAnB,GAA2BnB,IAA3B,CAAgCH,IAAhC,EAAsClE,KAAtC,CAA4C,MAA5C,EAAoD,OAApD,EAA6DkE,IAA7D,CAAkE,QAAlE,EAA4E,GAA5E;;AACA7B,cAAAA,MAAM,CAACwC,cAAP,CAAsB,eAAtB,EAAuC,CAAClB,YAAD,CAAvC;AACH,aAJD;AAKA;AAjBR;AAmBH;AACJ;AACJ;AAED;;;;;;;;;;;;;;AAYA,WAASoD,eAAT,CAAyB1E,MAAzB,EAAiCK,OAAjC,EAA0CC,KAA1C,EAAiDkB,KAAjD,EACA;AACI,QAAIuD,QAAQ,GAAGzE,KAAK,CAACgB,YAArB;;AAEA,QAAIE,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGlB,KAAK,CAACQ,SAA5B,IAAyC,EAAET,OAAO,CAACyE,gBAAR,IAA4BtD,KAAK,GAAGlB,KAAK,CAACgB,YAA5C,CAA7C,EACA;AACI,UAAIyG,MAAM,GAAGnE,aAAa,CAAC5D,MAAD,EAASwB,KAAT,CAA1B;AAAA,UACIwG,MAAM,GAAGD,MAAM,CAACC,MAAP,EADb;AAAA,UAEIC,UAAU,GAAGD,MAAM,CAACE,QAAP,CAAgB,UAAhB,CAFjB,CADJ,CAKI;;AACAF,MAAAA,MAAM,CAAC/J,WAAP;;AACA8J,MAAAA,MAAM,CAACI,KAAP,GAPJ,CASI;;AACA,UAAIpD,QAAQ,KAAKzE,KAAK,CAACgB,YAAnB,IAAmC2G,UAAvC,EACA;AACI;AACAD,QAAAA,MAAM,CAAC/J,WAAP,CAAmB,KAAnB;;AACA,eAAO,KAAP;AACH;;AAED,aAAO,IAAP;AACH;;AAED,WAAO,KAAP;AACH;AAED;;;;;;;;;;AAQA,WAASmK,sBAAT,CAAgC3B,KAAhC,EACA;AACIA,IAAAA,KAAK,CAACG,cAAN;AAEA,QAAImB,MAAM,GAAGxK,CAAC,CAAC,IAAD,CAAd;AAAA,QACIyC,MAAM,GAAG+H,MAAM,CAACC,MAAP,GAAgBA,MAAhB,GAAyBA,MAAzB,GAAkCA,MAAlC,EADb;AAAA,QAEI3H,OAAO,GAAG2D,UAAU,CAAChE,MAAD,CAFxB;AAAA,QAGIM,KAAK,GAAG2D,QAAQ,CAACjE,MAAD,CAHpB;AAAA,QAIIqI,IAAI,GAAGN,MAAM,CAACjK,IAAP,CAAY,MAAZ,CAJX;;AAMA,YAAQuK,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CAAR;AAEI,WAAK,QAAL;AACIhG,QAAAA,MAAM,CAACvC,MAAD,CAAN;AACA;;AAEJ,WAAK,QAAL;AACI0D,QAAAA,UAAU,CAAC1D,MAAD,EAASM,KAAT,CAAV;AACA;;AAEJ,WAAK,MAAL;AACImE,QAAAA,YAAY,CAACzE,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAZ;AACA;;AAEJ,WAAK,UAAL;AACIsE,QAAAA,gBAAgB,CAAC5E,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAhB;AACA;AAhBR;AAkBH;AAED;;;;;;;;;;;;AAUA,WAAS4E,iBAAT,CAA2BlF,MAA3B,EAAmCK,OAAnC,EAA4CC,KAA5C,EACA;AACI,QAAID,OAAO,CAACmI,gBAAZ,EACA;AACI,UAAIC,MAAM,GAAGzI,MAAM,CAACgD,IAAP,CAAY,6BAAZ,EAA2CgF,MAA3C,EAAb;AAAA,UACIU,IAAI,GAAG1I,MAAM,CAACgD,IAAP,CAAY,2BAAZ,EAAyCgF,MAAzC,EADX;;AAGA,UAAI,CAAC3H,OAAO,CAACyE,gBAAb,EACA;AACI,YAAI6D,QAAQ,GAAG3I,MAAM,CAACgD,IAAP,CAAY,+BAAZ,EAA6CgF,MAA7C,EAAf;;AACAW,QAAAA,QAAQ,CAAC1K,WAAT,CAAqBqC,KAAK,CAACgB,YAAN,GAAqB,CAA1C;AACH;;AAED,UAAIjB,OAAO,CAACuI,kBAAR,IAA8BvI,OAAO,CAACwI,sBAA1C,EACA;AACIJ,QAAAA,MAAM,CAACxK,WAAP,CAAmBqC,KAAK,CAACQ,SAAN,GAAkB,CAArC;;AACA4H,QAAAA,IAAI,CAACzK,WAAL,CAAiBqC,KAAK,CAACQ,SAAN,GAAkB,CAAlB,IAAuBR,KAAK,CAACQ,SAAN,GAAmBR,KAAK,CAACgB,YAAN,GAAqB,CAAhF;AACH,OAJD,MAMA;AACImH,QAAAA,MAAM,CAACpK,SAAP,CAAiBgC,OAAO,CAACuI,kBAAR,IAA8BtI,KAAK,CAACQ,SAAN,KAAqBR,KAAK,CAACgB,YAAN,GAAqB,CAAzF;;AACAoH,QAAAA,IAAI,CAACrK,SAAL,CAAeiC,KAAK,CAACQ,SAAN,KAAoB,CAApB,IAAyBR,KAAK,CAACQ,SAAN,GAAmBR,KAAK,CAACgB,YAAN,GAAqB,CAAhF,EACIrD,WADJ,CACgBqC,KAAK,CAACQ,SAAN,GAAmBR,KAAK,CAACgB,YAAN,GAAqB,CAAxC,IAA8C,CAACjB,OAAO,CAACuI,kBADvE;AAEH;AACJ;AACJ;AAED;;;;;;;;;;;;;AAWA,WAAS3D,qBAAT,CAA+BjF,MAA/B,EAAuCK,OAAvC,EAAgDC,KAAhD,EAAuDyE,QAAvD,EACA;AACI,QAAI+D,sBAAsB,GAAGlF,aAAa,CAAC5D,MAAD,EAASM,KAAK,CAACgB,YAAf,CAA1C;AAAA,QACIyH,WAAW,GAAGxL,CAAC,CAAC,0CAA0C8C,OAAO,CAACoH,MAAR,CAAeuB,OAAzD,GAAmE,UAApE,CADnB;AAAA,QAEIzI,UAAU,GAAGP,MAAM,CAACgD,IAAP,CAAY,mBAAZ,CAFjB;;AAIA,QAAI+B,QAAQ,IAAI,IAAhB,EACA;AACI,UAAIkE,aAAa,GAAGrF,aAAa,CAAC5D,MAAD,EAAS+E,QAAT,CAAjC;;AACAkE,MAAAA,aAAa,CAACjB,MAAd,GAAuB5J,QAAvB,CAAgC,MAAhC,EAAwCD,WAAxC,CAAoD,OAApD,EAA6DK,WAA7D,CAAyE,KAAzE;;AACA+B,MAAAA,UAAU,CAACoB,EAAX,CAAcoD,QAAd,EAAwB5G,WAAxB,CAAoC,SAApC,EAA+CuK,IAA/C,CAAoD,OAApD,EAA6DvK,WAA7D,CAAyE,SAAzE;AACA4K,MAAAA,WAAW,GAAGE,aAAa,CAACjG,IAAd,CAAmB,eAAnB,CAAd;AACA8F,MAAAA,sBAAsB,CAACjD,KAAvB;AACH;;AAEDiD,IAAAA,sBAAsB,CAAC3C,OAAvB,CAA+B4C,WAA/B,EAA4Cf,MAA5C,GAAqDxJ,WAArD,GAAmEL,WAAnE,CAA+E,MAA/E,EAAuFF,WAAvF;;AACAsC,IAAAA,UAAU,CAACoB,EAAX,CAAcrB,KAAK,CAACgB,YAApB,EAAkClD,QAAlC,CAA2C,SAA3C,EAAsDsK,IAAtD,CAA2D,OAA3D,EAAoEtK,QAApE,CAA6E,SAA7E;AACH;AAED;;;;;;;;;;;;;AAWA,WAASkI,YAAT,CAAsBtG,MAAtB,EAA8BK,OAA9B,EAAuCC,KAAvC,EAA8CkB,KAA9C,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;;AAEA,SAAK,IAAIZ,CAAC,GAAGoC,KAAb,EAAoBpC,CAAC,GAAGkB,KAAK,CAACQ,SAA9B,EAAyC1B,CAAC,EAA1C,EACA;AACI,UAAI8J,YAAY,GAAGrF,QAAQ,GAAGnE,UAAX,GAAwBN,CAA3C;AAAA,UACI+J,YAAY,GAAGtF,QAAQ,GAAGlE,eAAX,GAA6BP,CADhD;AAAA,UAEIgK,cAAc,GAAGvF,QAAQ,GAAGjE,YAAX,GAA0BR,CAF/C;AAAA,UAGIkD,KAAK,GAAGtC,MAAM,CAACgD,IAAP,CAAY,QAAZ,EAAsBrB,EAAtB,CAAyBvC,CAAzB,EAA4BV,GAA5B,CAAgC0K,cAAhC,CAHZ;;AAKApJ,MAAAA,MAAM,CAACgD,IAAP,CAAY,UAAZ,EAAwBrB,EAAxB,CAA2BvC,CAA3B,EAA8BV,GAA9B,CAAkCwK,YAAlC,EACKvL,KADL,CACW,UADX,EACuBwL,YADvB,EACqCrL,IADrC,CAC0C,MAD1C,EACkD,MAAMsL,cADxD,EAEKpH,IAFL,CAEUsF,cAAc,CAACjH,OAAO,CAACgJ,aAAT,EAAwB;AAAE7H,QAAAA,KAAK,EAAEpC,CAAC,GAAG,CAAb;AAAgBkD,QAAAA,KAAK,EAAEA,KAAK,CAACN,IAAN;AAAvB,OAAxB,CAFxB;;AAGAhC,MAAAA,MAAM,CAACgD,IAAP,CAAY,OAAZ,EAAqBrB,EAArB,CAAwBvC,CAAxB,EAA2BV,GAA3B,CAA+ByK,YAA/B,EACKxL,KADL,CACW,YADX,EACyByL,cADzB;AAEH;AACJ;;AAED,WAASzD,cAAT,CAAwB3F,MAAxB,EAAgCK,OAAhC,EACA;AACI,QAAIuC,cAAc,GAAGC,iBAAiB,CAAC7C,MAAD,CAAtC;AAEAA,IAAAA,MAAM,CAACsJ,IAAP,CAAY,aAAa1G,cAAzB,EAAyCvC,OAAO,CAACkJ,UAAjD;AACAvJ,IAAAA,MAAM,CAACsJ,IAAP,CAAY,kBAAkB1G,cAA9B,EAA8CvC,OAAO,CAACmJ,eAAtD;AACAxJ,IAAAA,MAAM,CAACsJ,IAAP,CAAY,cAAc1G,cAA1B,EAA0CvC,OAAO,CAACoJ,WAAlD;AACAzJ,IAAAA,MAAM,CAACsJ,IAAP,CAAY,aAAa1G,cAAzB,EAAyCvC,OAAO,CAACqJ,UAAjD;AACA1J,IAAAA,MAAM,CAACsJ,IAAP,CAAY,SAAS1G,cAArB,EAAqCvC,OAAO,CAACsJ,MAA7C;AACA3J,IAAAA,MAAM,CAACsJ,IAAP,CAAY,iBAAiB1G,cAA7B,EAA6CvC,OAAO,CAACuJ,cAArD;AACA5J,IAAAA,MAAM,CAACsJ,IAAP,CAAY,gBAAgB1G,cAA5B,EAA4CvC,OAAO,CAACwJ,aAApD;;AAEA,QAAIxJ,OAAO,CAACyJ,mBAAZ,EACA;AACI9J,MAAAA,MAAM,CAACsJ,IAAP,CAAY,UAAU1G,cAAtB,EAAsC4D,YAAtC;AACH;;AAEDxG,IAAAA,MAAM,CAACgD,IAAP,CAAY,YAAZ,EAA0BsG,IAA1B,CAA+B,UAAU1G,cAAzC,EAAyDwF,sBAAzD;AACH;AAED;;;;;;;;;;;;;;AAYA,WAAS2B,UAAT,CAAoB/J,MAApB,EAA4BK,OAA5B,EAAqCC,KAArC,EAA4CkB,KAA5C,EACA;AACI;AACA,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAIlB,KAAK,CAACQ,SAA5B,IAAyCR,KAAK,CAACgB,YAAN,KAAuBE,KAApE,EACA;AACI,aAAO,KAAP;AACH,KALL,CAOI;;;AACAwI,IAAAA,mBAAmB,CAAChK,MAAD,EAASwB,KAAT,CAAnB;;AACA,QAAIlB,KAAK,CAACgB,YAAN,GAAqBE,KAAzB,EACA;AACIlB,MAAAA,KAAK,CAACgB,YAAN;AACA0D,MAAAA,wBAAwB,CAAChF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAxB;AACH;;AACDA,IAAAA,KAAK,CAACQ,SAAN;AAEAiD,IAAAA,YAAY,CAAC/D,MAAD,EAASwB,KAAT,CAAZ,CAA4BiC,MAA5B;AACAK,IAAAA,YAAY,CAAC9D,MAAD,EAASwB,KAAT,CAAZ,CAA4BiC,MAA5B;AACAG,IAAAA,aAAa,CAAC5D,MAAD,EAASwB,KAAT,CAAb,CAA6BwG,MAA7B,GAAsCvE,MAAtC,GAlBJ,CAoBI;;AACA,QAAIjC,KAAK,KAAK,CAAd,EACA;AACIxB,MAAAA,MAAM,CAACgD,IAAP,CAAY,WAAZ,EAAyBiH,KAAzB,GAAiC7L,QAAjC,CAA0C,OAA1C;AACH,KAxBL,CA0BI;;;AACA,QAAIoD,KAAK,KAAKlB,KAAK,CAACQ,SAApB,EACA;AACId,MAAAA,MAAM,CAACgD,IAAP,CAAY,WAAZ,EAAyBrB,EAAzB,CAA4BH,KAA5B,EAAmCpD,QAAnC,CAA4C,MAA5C;AACH;;AAEDkI,IAAAA,YAAY,CAACtG,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBkB,KAAzB,CAAZ;AACA0D,IAAAA,iBAAiB,CAAClF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAjB;AAEA,WAAO,IAAP;AACH;;AAED,WAAS0J,mBAAT,CAA6BhK,MAA7B,EAAqCwB,KAArC,EACA;AACItB,IAAAA,QAAQ,CAACF,MAAD,CAAR,CAAiBuG,MAAjB,CAAwB/E,KAAxB,EAA+B,CAA/B;AACH;AAED;;;;;;;;;;;;AAUA,WAASkE,MAAT,CAAgB1F,MAAhB,EAAwBK,OAAxB,EAAiCC,KAAjC,EAAwC;AACxC;AACI,QAAI4J,sBAAsB,GAAG,2BAA7B;AAAA,QACIC,oBAAoB,GAAG,8BAD3B;AAAA,QAEIC,WAAW,GAAGnI,iBAAiB,CAACoI,gBAAD,EAAmBhK,OAAO,CAACgK,gBAA3B,CAFnC;AAAA,QAGIC,gBAAgB,GAAIF,WAAW,KAAKC,gBAAgB,CAACE,QAAlC,GAA8C,WAA9C,GAA4D,EAHnF;AAAA,QAIIC,cAAc,GAAGjN,CAAC,CAAC2M,sBAAsB,CAACpL,MAAvB,CAA8BuB,OAAO,CAACoK,mBAAtC,EAA2D,aAAiBpK,OAAO,CAAC4C,gBAApF,CAAD,CAJtB;AAAA,QAKIyH,YAAY,GAAGnN,CAAC,CAAC4M,oBAAoB,CAACrL,MAArB,CAA4BuB,OAAO,CAACsK,iBAApC,EAAuD,WAAWtK,OAAO,CAAC4C,gBAA1E,EAA4F,4BAA5F,CAAD,CALpB,CAFoC,CASxC;;AACIjD,IAAAA,MAAM,CAAClC,IAAP,CAAY,MAAZ,EAAoB,aAApB,EAAmC8M,SAAnC,CAA6CJ,cAA7C,EAA6DrE,OAA7D,CAAqEuE,YAArE,EACKtM,QADL,CACciC,OAAO,CAACwK,QAAR,GAAmB,GAAnB,GAAyBxK,OAAO,CAAC4C,gBAAjC,GAAoDqH,gBADlE,EAVoC,CAaxC;;AACI,QAAIQ,gBAAgB,GAAG9K,MAAM,CAACgD,IAAP,CAAY,UAAZ,CAAvB;AAAA,QACIzC,UAAU,GAAGuK,gBAAgB,CAACtK,QAAjB,CAA0BH,OAAO,CAACI,SAAlC,CADjB;AAAA,QAEIC,YAAY,GAAGoK,gBAAgB,CAACtK,QAAjB,CAA0BH,OAAO,CAACM,OAAlC,CAFnB,CAdoC,CAkBxC;;AACID,IAAAA,YAAY,CAACa,IAAb,CAAkB,UAAUC,KAAV,EAAiB;AAC/B4E,MAAAA,UAAU,CAACpG,MAAD,EAASM,KAAT,EAAgB/C,CAAC,CAAC,IAAD,CAAjB,EAAyBiE,KAAzB,CAAV;AACH,KAFD;AAIAjB,IAAAA,UAAU,CAACgB,IAAX,CAAgB,UAAUC,KAAV,EAAiB;AAC7B6E,MAAAA,WAAW,CAACrG,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyB/C,CAAC,CAAC,IAAD,CAA1B,EAAkCiE,KAAlC,CAAX;AACH,KAFD;AAIAyD,IAAAA,qBAAqB,CAACjF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAArB;AACAyK,IAAAA,gBAAgB,CAAC/K,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAhB;AACH;AAED;;;;;;;;;;;;AAUA,WAAS8F,UAAT,CAAoBpG,MAApB,EAA4BM,KAA5B,EAAmC4F,IAAnC,EAAyC1E,KAAzC,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;AAAA,QACImJ,YAAY,GAAGtF,QAAQ,GAAGlE,eAAX,GAA6B6B,KADhD;AAAA,QAEI4H,cAAc,GAAGvF,QAAQ,GAAGjE,YAAX,GAA0B4B,KAF/C;;AAIA0E,IAAAA,IAAI,CAACxH,GAAL,CAASyK,YAAT,EAAuBrL,IAAvB,CAA4B,MAA5B,EAAoC,UAApC,EAAgDH,KAAhD,CAAsD,YAAtD,EAAoEyL,cAApE,EACKhL,QADL,CACc,MADd,EACsBC,SADtB,CACgCiC,KAAK,CAACgB,YAAN,KAAuBE,KADvD;AAEH;AAED;;;;;;;;;;;;AAUA,WAASuJ,gBAAT,CAA0B/K,MAA1B,EAAkCK,OAAlC,EAA2CC,KAA3C,EACA;AACI,QAAID,OAAO,CAACmI,gBAAZ,EACA;AACI,UAAIwC,UAAU,GAAG,gFAAjB;AAAA,UACIC,cAAc,GAAG,qDADrB;AAAA,UAEIC,OAAO,GAAG,EAFd;;AAIA,UAAI,CAAC7K,OAAO,CAACyE,gBAAb,EACA;AACIoG,QAAAA,OAAO,IAAID,cAAc,CAACnM,MAAf,CAAsB,UAAtB,EAAkCuB,OAAO,CAACoH,MAAR,CAAekB,QAAjD,CAAX;AACH;;AAEDuC,MAAAA,OAAO,IAAID,cAAc,CAACnM,MAAf,CAAsB,MAAtB,EAA8BuB,OAAO,CAACoH,MAAR,CAAeiB,IAA7C,CAAX;;AAEA,UAAIrI,OAAO,CAACuI,kBAAZ,EACA;AACIsC,QAAAA,OAAO,IAAID,cAAc,CAACnM,MAAf,CAAsB,QAAtB,EAAgCuB,OAAO,CAACoH,MAAR,CAAegB,MAA/C,CAAX;AACH;;AAED,UAAIpI,OAAO,CAAC8K,kBAAZ,EACA;AACID,QAAAA,OAAO,IAAID,cAAc,CAACnM,MAAf,CAAsB,QAAtB,EAAgCuB,OAAO,CAACoH,MAAR,CAAelF,MAA/C,CAAX;AACH;;AAEDvC,MAAAA,MAAM,CAACqH,MAAP,CAAc2D,UAAU,CAAClM,MAAX,CAAkBuB,OAAO,CAAC+K,kBAA1B,EAA8C/K,OAAO,CAAC4C,gBAAtD,EACV5C,OAAO,CAACoH,MAAR,CAAeuD,UADL,EACiBE,OADjB,CAAd;AAGAhG,MAAAA,iBAAiB,CAAClF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAjB;AACA6E,MAAAA,gBAAgB,CAACnF,MAAD,EAASK,OAAT,EAAkBC,KAAlB,CAAhB;AACH;AACJ;AAED;;;;;;;;;;;;AAUA,WAASgH,cAAT,CAAwB+D,QAAxB,EAAkCC,WAAlC,EACA;AACI,QAAIC,OAAO,GAAGF,QAAQ,CAACG,KAAT,CAAe,cAAf,CAAd;;AAEA,SAAK,IAAIpM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmM,OAAO,CAACtM,MAA5B,EAAoCG,CAAC,EAArC,EACA;AACI,UAAIoM,KAAK,GAAGD,OAAO,CAACnM,CAAD,CAAnB;AAAA,UACIoF,GAAG,GAAGgH,KAAK,CAAClD,SAAN,CAAgB,CAAhB,EAAmBkD,KAAK,CAACvM,MAAN,GAAe,CAAlC,CADV;;AAGA,UAAIqM,WAAW,CAAC9G,GAAD,CAAX,KAAqBhH,SAAzB,EACA;AACIoD,QAAAA,UAAU,CAAC,4DAAD,EAA+D4D,GAA/D,CAAV;AACH;;AAED6G,MAAAA,QAAQ,GAAGA,QAAQ,CAAC9L,OAAT,CAAiBiM,KAAjB,EAAwBF,WAAW,CAAC9G,GAAD,CAAnC,CAAX;AACH;;AAED,WAAO6G,QAAP;AACH;AAED;;;;;;;;;;;;;;AAYA,WAAShF,WAAT,CAAqBrG,MAArB,EAA6BK,OAA7B,EAAsCC,KAAtC,EAA6C2F,MAA7C,EAAqDzE,KAArD,EACA;AACI,QAAIqC,QAAQ,GAAG3C,WAAW,CAAClB,MAAD,CAA1B;AAAA,QACIkJ,YAAY,GAAGrF,QAAQ,GAAGnE,UAAX,GAAwB8B,KAD3C;AAAA,QAEI2H,YAAY,GAAGtF,QAAQ,GAAGlE,eAAX,GAA6B6B,KAFhD;AAAA,QAGI4H,cAAc,GAAGvF,QAAQ,GAAGjE,YAAX,GAA0B4B,KAH/C;AAAA,QAIIiK,cAAc,GAAGzL,MAAM,CAACgD,IAAP,CAAY,aAAZ,CAJrB;AAAA,QAKIV,KAAK,GAAGgF,cAAc,CAACjH,OAAO,CAACgJ,aAAT,EAAwB;AAC1C7H,MAAAA,KAAK,EAAEA,KAAK,GAAG,CAD2B;AAE1Cc,MAAAA,KAAK,EAAE2D,MAAM,CAACjE,IAAP;AAFmC,KAAxB,CAL1B;AAAA,QASI0J,QAAQ,GAAGnO,CAAC,CAAC,8BAA8B2L,YAA9B,GAA6C,aAA7C,GAA6DE,cAA7D,GACT,qBADS,GACeD,YADf,GAC8B,KAD9B,GACsC7G,KADtC,GAC8C,WAD/C,CAThB;;AAYAoJ,IAAAA,QAAQ,CAACzN,WAAT,CAAqBoC,OAAO,CAACsL,cAAR,IAA0BrL,KAAK,CAACgB,YAAN,GAAqBE,KAApE;;AAEA,QAAIlB,KAAK,CAACgB,YAAN,GAAqBE,KAAzB,EACA;AACIkK,MAAAA,QAAQ,CAACtN,QAAT,CAAkB,MAAlB;AACH;;AAED6H,IAAAA,MAAM,CAACvH,GAAP,CAAW0K,cAAX,EAA2BtL,IAA3B,CAAgC,UAAhC,EAA4C,IAA5C,EAAkDM,QAAlD,CAA2D,OAA3D;;AAEA,QAAIoD,KAAK,KAAK,CAAd,EACA;AACIiK,MAAAA,cAAc,CAACtF,OAAf,CAAuBuF,QAAvB;AACH,KAHD,MAKA;AACID,MAAAA,cAAc,CAACzI,IAAf,CAAoB,IAApB,EAA0BrB,EAA1B,CAA6BH,KAAK,GAAG,CAArC,EAAwCgC,KAAxC,CAA8CkI,QAA9C;AACH,KA7BL,CA+BI;;;AACA,QAAIlK,KAAK,KAAK,CAAd,EACA;AACIiK,MAAAA,cAAc,CAACzI,IAAf,CAAoB,IAApB,EAA0B7E,WAA1B,CAAsC,OAAtC,EAA+CwD,EAA/C,CAAkDH,KAAlD,EAAyDpD,QAAzD,CAAkE,OAAlE;AACH,KAnCL,CAqCI;;;AACA,QAAIoD,KAAK,KAAMlB,KAAK,CAACQ,SAAN,GAAkB,CAAjC,EACA;AACI2K,MAAAA,cAAc,CAACzI,IAAf,CAAoB,IAApB,EAA0B7E,WAA1B,CAAsC,MAAtC,EAA8CwD,EAA9C,CAAiDH,KAAjD,EAAwDpD,QAAxD,CAAiE,MAAjE;AACH,KAzCL,CA2CI;;;AACAsN,IAAAA,QAAQ,CAAClL,QAAT,CAAkB,GAAlB,EAAuB8I,IAAvB,CAA4B,UAAUzG,iBAAiB,CAAC7C,MAAD,CAAvD,EAAiE4L,gBAAjE;AACH;AAED;;;;;;;;;;;;AAUA,WAAS5G,wBAAT,CAAkChF,MAAlC,EAA0CK,OAA1C,EAAmDC,KAAnD,EACA;AACI,QAAID,OAAO,CAACU,SAAR,IAAqBxD,CAAC,CAACyD,MAA3B,EACA;AACIzD,MAAAA,CAAC,CAACyD,MAAF,CAASvB,aAAa,GAAGyB,WAAW,CAAClB,MAAD,CAApC,EAA8CM,KAAK,CAACgB,YAApD;AACH;AACJ;;AAED,WAAS8D,qBAAT,CAA+BpF,MAA/B,EAAuCK,OAAvC,EAAgDC,KAAhD,EAAuDkB,KAAvD,EAA8DuD,QAA9D,EAAwE8G,YAAxE,EACA;AACI,QAAInL,YAAY,GAAGV,MAAM,CAACgD,IAAP,CAAY,kBAAZ,CAAnB;AAAA,QACI8I,MAAM,GAAG7J,iBAAiB,CAAC8J,gBAAD,EAAmB1L,OAAO,CAAC0L,gBAA3B,CAD9B;AAAA,QAEIC,WAAW,GAAG3L,OAAO,CAAC4L,qBAF1B;AAAA,QAGIC,OAAO,GAAGxL,YAAY,CAACiB,EAAb,CAAgBH,KAAhB,CAHd;AAAA,QAIImC,WAAW,GAAGjD,YAAY,CAACiB,EAAb,CAAgBoD,QAAhB,CAJlB;;AAMA,YAAQ+G,MAAR;AAEI,WAAKC,gBAAgB,CAACI,IAAtB;AACA,WAAKJ,gBAAgB,CAACK,KAAtB;AACI,YAAI7N,IAAI,GAAIuN,MAAM,KAAKC,gBAAgB,CAACI,IAA7B,GAAqC,SAArC,GAAiD,SAA5D;AAAA,YACI7N,IAAI,GAAIwN,MAAM,KAAKC,gBAAgB,CAACI,IAA7B,GAAqC,QAArC,GAAgD,WAD3D;AAGA7L,QAAAA,KAAK,CAACmF,iBAAN,GAA0ByG,OAA1B;AACAvI,QAAAA,WAAW,CAACpF,IAAD,CAAX,CAAkByN,WAAlB,EAA+B,YAC/B;AACI,cAAIhM,MAAM,GAAGzC,CAAC,CAAC,IAAD,CAAD,CAAQc,SAAR,CAAkB,KAAlB,EAAyB2J,MAAzB,GAAkCA,MAAlC,EAAb;AAAA,cACI1H,KAAK,GAAG2D,QAAQ,CAACjE,MAAD,CADpB;;AAGA,cAAIM,KAAK,CAACmF,iBAAV,EACA;AACInF,YAAAA,KAAK,CAACmF,iBAAN,CAAwBnH,IAAxB,EAA8B0N,WAA9B,EAA2C,YAC3C;AACIzO,cAAAA,CAAC,CAAC,IAAD,CAAD,CAAQc,SAAR;AACH,aAHD,EAGGgO,OAHH,GAGavE,IAHb,CAGkB+D,YAHlB;AAIAvL,YAAAA,KAAK,CAACmF,iBAAN,GAA0B,IAA1B;AACH;AACJ,SAbD;AAcA;;AAEJ,WAAKsG,gBAAgB,CAACO,SAAtB;AACI,YAAIC,UAAU,GAAG5I,WAAW,CAAC4I,UAAZ,CAAuB,IAAvB,CAAjB;AAAA,YACIC,UAAU,GAAIhL,KAAK,GAAGuD,QAAT,GAAqB,CAAEwH,UAAvB,GAAqCA,UADtD;AAAA,YAEIE,SAAS,GAAIjL,KAAK,GAAGuD,QAAT,GAAqBwH,UAArB,GAAkC,CAAEA,UAFpD;AAIAhP,QAAAA,CAAC,CAACmP,IAAF,CAAO/I,WAAW,CAACgJ,OAAZ,CAAoB;AAAE7F,UAAAA,IAAI,EAAE0F;AAAR,SAApB,EAA0CR,WAA1C,EACC,YAAY;AAAEzO,UAAAA,CAAC,CAAC,IAAD,CAAD,CAAQc,SAAR,CAAkB,KAAlB;AAA2B,SAD1C,CAAP,EAEI6N,OAAO,CAACU,GAAR,CAAY,MAAZ,EAAoBH,SAAS,GAAG,IAAhC,EAAsCpO,SAAtC,GACKsO,OADL,CACa;AAAE7F,UAAAA,IAAI,EAAE;AAAR,SADb,EAC0BkF,WAD1B,CAFJ,EAG4ClE,IAH5C,CAGiD+D,YAHjD;AAIA;;AAEJ;AACItO,QAAAA,CAAC,CAACmP,IAAF,CAAO/I,WAAW,CAACtF,SAAZ,CAAsB,KAAtB,CAAP,EAAqC6N,OAAO,CAAC7N,SAAR,EAArC,EACKyJ,IADL,CACU+D,YADV;AAEA;AAtCR;AAwCH;AAED;;;;;;;;;;AAQA,WAASD,gBAAT,CAA0BnF,KAA1B,EACA;AACIA,IAAAA,KAAK,CAACG,cAAN;AAEA,QAAImB,MAAM,GAAGxK,CAAC,CAAC,IAAD,CAAd;AAAA,QACIyC,MAAM,GAAG+H,MAAM,CAACC,MAAP,GAAgBA,MAAhB,GAAyBA,MAAzB,GAAkCA,MAAlC,EADb;AAAA,QAEI3H,OAAO,GAAG2D,UAAU,CAAChE,MAAD,CAFxB;AAAA,QAGIM,KAAK,GAAG2D,QAAQ,CAACjE,MAAD,CAHpB;AAAA,QAII+E,QAAQ,GAAGzE,KAAK,CAACgB,YAJrB;;AAMA,QAAIyG,MAAM,CAACC,MAAP,GAAgBrB,EAAhB,CAAmB,+BAAnB,CAAJ,EACA;AACI,UAAI0B,IAAI,GAAGN,MAAM,CAACjK,IAAP,CAAY,MAAZ,CAAX;AAAA,UACI+O,QAAQ,GAAGzL,QAAQ,CAACiH,IAAI,CAACC,SAAL,CAAeD,IAAI,CAACE,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CAAD,EAA4C,CAA5C,CADvB;AAGA1D,MAAAA,QAAQ,CAAC7E,MAAD,EAASK,OAAT,EAAkBC,KAAlB,EAAyBuM,QAAzB,CAAR;AACH,KAfL,CAiBI;;;AACA,QAAI9H,QAAQ,KAAKzE,KAAK,CAACgB,YAAvB,EACA;AACIsC,MAAAA,aAAa,CAAC5D,MAAD,EAAS+E,QAAT,CAAb,CAAgCc,KAAhC;AACA,aAAO,KAAP;AACH;AACJ;;AAED,WAASjF,UAAT,CAAoBkM,OAApB,EACA;AACI,QAAI9N,SAAS,CAACC,MAAV,GAAmB,CAAvB,EACA;AACI6N,MAAAA,OAAO,GAAGA,OAAO,CAAChO,MAAR,CAAeiO,KAAK,CAAClO,SAAN,CAAgBmO,KAAhB,CAAsBC,IAAtB,CAA2BjO,SAA3B,EAAsC,CAAtC,CAAf,CAAV;AACH;;AAED,UAAM,IAAIkO,KAAJ,CAAUJ,OAAV,CAAN;AACH;AAED;;;;;;;;;;;AASA,WAASvI,gBAAT,CAA0B4I,YAA1B,EAAwCC,aAAxC,EACA;AACI,QAAIA,aAAa,IAAI,IAArB,EACA;AACIxM,MAAAA,UAAU,CAAC,0CAAD,EAA6CuM,YAA7C,CAAV;AACH;AACJ;AAED;;;;;;;;;;;AASA5P,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,GAAa,UAAUkJ,MAAV,EACb;AACI,QAAI9P,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWkJ,MAAX,CAAJ,EACA;AACI,aAAO9P,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWkJ,MAAX,EAAmBC,KAAnB,CAAyB,IAAzB,EAA+BP,KAAK,CAAClO,SAAN,CAAgBmO,KAAhB,CAAsBC,IAAtB,CAA2BjO,SAA3B,EAAsC,CAAtC,CAA/B,CAAP;AACH,KAHD,MAIK,IAAI,QAAOqO,MAAP,MAAkB,QAAlB,IAA8B,CAACA,MAAnC,EACL;AACI,aAAO/H,UAAU,CAACgI,KAAX,CAAiB,IAAjB,EAAuBtO,SAAvB,CAAP;AACH,KAHI,MAKL;AACIzB,MAAAA,CAAC,CAACgQ,KAAF,CAAQ,YAAYF,MAAZ,GAAqB,iCAA7B;AACH;AACJ,GAdD;AAgBA;;;;;;;;;AAOA9P,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWqJ,GAAX,GAAiB,UAAUvN,IAAV,EACjB;AACI,QAAIK,KAAK,GAAG2D,QAAQ,CAAC,IAAD,CAApB;AACA,WAAO6B,UAAU,CAAC,IAAD,EAAO9B,UAAU,CAAC,IAAD,CAAjB,EAAyB1D,KAAzB,EAAgCA,KAAK,CAACQ,SAAtC,EAAiDb,IAAjD,CAAjB;AACH,GAJD;AAMA;;;;;;;;AAMA1C,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWxB,OAAX,GAAqB,YACrB;AACI,WAAOA,OAAO,CAAC,IAAD,EAAOqB,UAAU,CAAC,IAAD,CAAjB,CAAd;AACH,GAHD;AAKA;;;;;;;AAKAzG,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWsE,MAAX,GAAoB,YACpB;AACI/E,IAAAA,UAAU,CAAC,IAAD,EAAOO,QAAQ,CAAC,IAAD,CAAf,CAAV;AACH,GAHD;AAKA;;;;;;;;;AAOA1G,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWsJ,eAAX,GAA6B,YAC7B;AACI,WAAOxJ,QAAQ,CAAC,IAAD,CAAR,CAAe3C,YAAtB;AACH,GAHD;AAKA;;;;;;;;AAMA/D,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWuJ,cAAX,GAA4B,YAC5B;AACI,WAAOxJ,OAAO,CAAC,IAAD,EAAOD,QAAQ,CAAC,IAAD,CAAR,CAAe3C,YAAtB,CAAd;AACH,GAHD;AAKA;;;;;;;;;AAOA/D,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWD,OAAX,GAAqB,UAAU1C,KAAV,EACrB;AACI,WAAO0C,OAAO,CAAC,IAAD,EAAO1C,KAAP,CAAd;AACH,GAHD;AAKA;;;;;;;;;;;;;;;;;AAeAjE,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWwJ,MAAX,GAAoB,UAAUnM,KAAV,EAAiBvB,IAAjB,EACpB;AACI,WAAO6F,UAAU,CAAC,IAAD,EAAO9B,UAAU,CAAC,IAAD,CAAjB,EAAyBC,QAAQ,CAAC,IAAD,CAAjC,EAAyCzC,KAAzC,EAAgDvB,IAAhD,CAAjB;AACH,GAHD;AAKA;;;;;;;;AAMA1C,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWuE,IAAX,GAAkB,YAClB;AACI,WAAOjE,YAAY,CAAC,IAAD,EAAOT,UAAU,CAAC,IAAD,CAAjB,EAAyBC,QAAQ,CAAC,IAAD,CAAjC,CAAnB;AACH,GAHD;AAKA;;;;;;;;AAMA1G,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWwE,QAAX,GAAsB,YACtB;AACI,WAAO/D,gBAAgB,CAAC,IAAD,EAAOZ,UAAU,CAAC,IAAD,CAAjB,EAAyBC,QAAQ,CAAC,IAAD,CAAjC,CAAvB;AACH,GAHD;AAKA;;;;;;;;;AAOA1G,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWV,MAAX,GAAoB,UAAUjC,KAAV,EACpB;AACI,WAAOuI,UAAU,CAAC,IAAD,EAAO/F,UAAU,CAAC,IAAD,CAAjB,EAAyBC,QAAQ,CAAC,IAAD,CAAjC,EAAyCzC,KAAzC,CAAjB;AACH,GAHD;AAKA;;;;;;;;;AAOAjE,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWyJ,OAAX,GAAqB,UAAUpM,KAAV,EAAiBvB,IAAjB,EACrB;AACI,UAAM,IAAIiN,KAAJ,CAAU,sBAAV,CAAN;AACH,GAHD;AAKA;;;;;;;;;AAOA3P,EAAAA,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAW0J,IAAX,GAAkB,UAAUC,KAAV,EAClB;AACI,UAAM,IAAIZ,KAAJ,CAAU,sBAAV,CAAN;AACH,GAHD;AAKA;;;;;;;;AAMA,MAAInL,WAAW,GAAGxE,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWpC,WAAX,GAAyB;AACvC;;;;;;;;AAQAC,IAAAA,IAAI,EAAE,CATiC;;AAWvC;;;;;;;;AAQAkF,IAAAA,MAAM,EAAE,CAnB+B;;AAqBvC;;;;;;;;AAQAC,IAAAA,KAAK,EAAE;AA7BgC,GAA3C;AAgCA;;;;;;;AAMA,MAAIkD,gBAAgB,GAAG9M,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWkG,gBAAX,GAA8B;AACjD;;;;;;;;AAQA0D,IAAAA,UAAU,EAAE,CATqC;;AAWjD;;;;;;;;AAQAxD,IAAAA,QAAQ,EAAE;AAnBuC,GAArD;AAsBA;;;;;;;AAMA,MAAIwB,gBAAgB,GAAGxO,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAW4H,gBAAX,GAA8B;AACjD;;;;;;;;AAQAiC,IAAAA,IAAI,EAAE,CAT2C;;AAWjD;;;;;;;;AAQA7B,IAAAA,IAAI,EAAE,CAnB2C;;AAqBjD;;;;;;;;AAQAC,IAAAA,KAAK,EAAE,CA7B0C;;AA+BjD;;;;;;;;AAQAE,IAAAA,SAAS,EAAE;AAvCsC,GAArD;AA0CA,MAAIjK,SAAS,GAAG9E,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAW9B,SAAX,GAAuB;AACnCC,IAAAA,KAAK,EAAE,EAD4B;AAEnCZ,IAAAA,OAAO,EAAE,EAF0B;AAGnCS,IAAAA,UAAU,EAAE,EAHuB;AAInCJ,IAAAA,WAAW,EAAEA,WAAW,CAACC,IAJU;AAKnCI,IAAAA,aAAa,EAAE;AALoB,GAAvC;AAQA;;;;;;;;;;;;;;;;AAeA,MAAIoD,QAAQ,GAAGjI,CAAC,CAACE,EAAF,CAAK0G,KAAL,CAAWqB,QAAX,GAAsB;AACjC;;;;;;;;AAQA/E,IAAAA,SAAS,EAAE,IATsB;;AAWjC;;;;;;;;AAQAE,IAAAA,OAAO,EAAE,KAnBwB;;AAqBjC;;;;;;;;AAQA8J,IAAAA,mBAAmB,EAAE,KA7BY;;AA+BjC;;;;;;;;AAQAW,IAAAA,kBAAkB,EAAE,KAvCa;;AAyCjC;;;;;;;;AAQAT,IAAAA,iBAAiB,EAAE,KAjDc;;AAmDjC;;;;;;;;;;;;AAYAE,IAAAA,QAAQ,EAAE,QA/DuB;;AAiEjC;;;;;;;;AAQA5H,IAAAA,gBAAgB,EAAE,UAzEe;;AA2EjC;;;;;;;;;AASAoH,IAAAA,gBAAgB,EAAEA,gBAAgB,CAAC0D,UApFF;;AAsFjC;;;;AAIA;;;;;;;;AAQA1E,IAAAA,aAAa,EAAE,gDAlGkB;;AAoGjC;;;;;;;;AAQA9B,IAAAA,eAAe,EAAE,wCA5GgB;;AA8GjC;;;;AAIA;;;;;;;;;AASA3B,IAAAA,SAAS,EAAE,KA3HsB;;AA6HjC;;;;;;;;AAQA+F,IAAAA,cAAc,EAAE,KArIiB;;AAuIjC;;;;;;;;AAQA7B,IAAAA,mBAAmB,EAAE,IA/IY;;AAiJjC;;;;;;;;AAQAtB,IAAAA,gBAAgB,EAAE,IAzJe;;AA2JjC;;;;;;;;AAQA9B,IAAAA,yBAAyB,EAAE,IAnKM;;AAqKjC;;;;;;;;AAQAO,IAAAA,kBAAkB,EAAE,IA7Ka;;AA+KjC;;;;;;;;AAQAkE,IAAAA,kBAAkB,EAAE,KAvLa;;AAyLjC;;;;;;;;AAQAvC,IAAAA,kBAAkB,EAAE,IAjMa;;AAmMjC;;;;;;;;AAQAqF,IAAAA,cAAc,EAAE,KA3MiB;;AA6MjC;;;;;;;;;AASApF,IAAAA,sBAAsB,EAAE,KAtNS;;AAwNjC;;;;;;;;AAQA/D,IAAAA,gBAAgB,EAAE,KAhOe;;AAkOjC;;;;;;;;;AASA/D,IAAAA,SAAS,EAAE,KA3OsB;;AA6OjC;;;;;;;;AAQAF,IAAAA,UAAU,EAAE,CArPqB;;AAuPjC;;;;AAIA;;;;;;;;AAQAkL,IAAAA,gBAAgB,EAAEA,gBAAgB,CAACiC,IAnQF;;AAqQjC;;;;;;;;AAQA/B,IAAAA,qBAAqB,EAAE,GA7QU;;AA+QjC;;;;AAIA;;;;;;;;;AASArC,IAAAA,cAAc,EAAE,wBAAUnD,KAAV,EAAiBnF,YAAjB,EAA+B4M,QAA/B,EAAyC;AAAE,aAAO,IAAP;AAAc,KA5RxC;;AA8RjC;;;;;;;;AAQArE,IAAAA,aAAa,EAAE,uBAAUpD,KAAV,EAAiBnF,YAAjB,EAA+B6M,UAA/B,EAA2C,CAAG,CAtS5B;;AAwSjC;;;;;;;;AAQA5E,IAAAA,UAAU,EAAE,oBAAU9C,KAAV,EAAiB,CAAG,CAhTC;;AAkTjC;;;;;;;;;AASAgD,IAAAA,WAAW,EAAE,qBAAUhD,KAAV,EAAiBnF,YAAjB,EAA+B;AAAE,aAAO,IAAP;AAAc,KA3T3B;;AA6TjC;;;;;;;;AAQAoI,IAAAA,UAAU,EAAE,oBAAUjD,KAAV,EAAiBnF,YAAjB,EAA+B,CAAG,CArUb;;AAuUjC;;;;;;;;AAQAkI,IAAAA,eAAe,EAAE,yBAAU/C,KAAV,EAAiBnF,YAAjB,EAA+B,CAAG,CA/UlB;;AAiVjC;;;;;;;;AAQAqI,IAAAA,MAAM,EAAE,gBAAUlD,KAAV,EAAiBnF,YAAjB,EAA+B,CAAG,CAzVT;;AA2VjC;;;;;;;AAOAmG,IAAAA,MAAM,EAAE;AACJ;;;;;;;;AAQAlF,MAAAA,MAAM,EAAE,QATJ;;AAWJ;;;;;;;;;AASAyG,MAAAA,OAAO,EAAE,eApBL;;AAsBJ;;;;;;;;;AASAgC,MAAAA,UAAU,EAAE,YA/BR;;AAiCJ;;;;;;;;AAQAvC,MAAAA,MAAM,EAAE,QAzCJ;;AA2CJ;;;;;;;;AAQAC,MAAAA,IAAI,EAAE,MAnDF;;AAqDJ;;;;;;;;AAQAC,MAAAA,QAAQ,EAAE,UA7DN;;AA+DJ;;;;;;;;AAQAjB,MAAAA,OAAO,EAAE;AAvEL;AAlWyB,GAArC;AA4aC,CAr/DA,EAq/DE0G,MAr/DF","sourcesContent":["/*! \n * jQuery Steps v1.1.0 - 09/04/2014\n * Copyright (c) 2014 Rafael Staib (http://www.jquery-steps.com)\n * Licensed under MIT http://www.opensource.org/licenses/MIT\n */\n;(function ($, undefined)\n{\n$.fn.extend({\n    _aria: function (name, value)\n    {\n        return this.attr(\"aria-\" + name, value);\n    },\n\n    _removeAria: function (name)\n    {\n        return this.removeAttr(\"aria-\" + name);\n    },\n\n    _enableAria: function (enable)\n    {\n        return (enable == null || enable) ? \n            this.removeClass(\"disabled\")._aria(\"disabled\", \"false\") : \n            this.addClass(\"disabled\")._aria(\"disabled\", \"true\");\n    },\n\n    _showAria: function (show)\n    {\n        return (show == null || show) ? \n            this.show()._aria(\"hidden\", \"false\") : \n            this.hide()._aria(\"hidden\", \"true\");\n    },\n\n    _selectAria: function (select)\n    {\n        return (select == null || select) ? \n            this.addClass(\"current\")._aria(\"selected\", \"true\") : \n            this.removeClass(\"current\")._aria(\"selected\", \"false\");\n    },\n\n    _id: function (id)\n    {\n        return (id) ? this.attr(\"id\", id) : this.attr(\"id\");\n    }\n});\n\nif (!String.prototype.format)\n{\n    String.prototype.format = function()\n    {\n        var args = (arguments.length === 1 && $.isArray(arguments[0])) ? arguments[0] : arguments;\n        var formattedString = this;\n        for (var i = 0; i < args.length; i++)\n        {\n            var pattern = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n            formattedString = formattedString.replace(pattern, args[i]);\n        }\n        return formattedString;\n    };\n}\n\n/**\n * A global unique id count.\n *\n * @static\n * @private\n * @property _uniqueId\n * @type Integer\n **/\nvar _uniqueId = 0;\n\n/**\n * The plugin prefix for cookies.\n *\n * @final\n * @private\n * @property _cookiePrefix\n * @type String\n **/\nvar _cookiePrefix = \"jQu3ry_5teps_St@te_\";\n\n/**\n * Suffix for the unique tab id.\n *\n * @final\n * @private\n * @property _tabSuffix\n * @type String\n * @since 0.9.7\n **/\nvar _tabSuffix = \"-t-\";\n\n/**\n * Suffix for the unique tabpanel id.\n *\n * @final\n * @private\n * @property _tabpanelSuffix\n * @type String\n * @since 0.9.7\n **/\nvar _tabpanelSuffix = \"-p-\";\n\n/**\n * Suffix for the unique title id.\n *\n * @final\n * @private\n * @property _titleSuffix\n * @type String\n * @since 0.9.7\n **/\nvar _titleSuffix = \"-h-\";\n\n/**\n * An error message for an \"index out of range\" error.\n *\n * @final\n * @private\n * @property _indexOutOfRangeErrorMessage\n * @type String\n **/\nvar _indexOutOfRangeErrorMessage = \"Index out of range.\";\n\n/**\n * An error message for an \"missing corresponding element\" error.\n *\n * @final\n * @private\n * @property _missingCorrespondingElementErrorMessage\n * @type String\n **/\nvar _missingCorrespondingElementErrorMessage = \"One or more corresponding step {0} are missing.\";\n\n/**\n * Adds a step to the cache.\n *\n * @static\n * @private\n * @method addStepToCache\n * @param wizard {Object} A jQuery wizard object\n * @param step {Object} The step object to add\n **/\nfunction addStepToCache(wizard, step)\n{\n    getSteps(wizard).push(step);\n}\n\nfunction analyzeData(wizard, options, state)\n{\n    var stepTitles = wizard.children(options.headerTag),\n        stepContents = wizard.children(options.bodyTag);\n\n    // Validate content\n    if (stepTitles.length > stepContents.length)\n    {\n        throwError(_missingCorrespondingElementErrorMessage, \"contents\");\n    }\n    else if (stepTitles.length < stepContents.length)\n    {\n        throwError(_missingCorrespondingElementErrorMessage, \"titles\");\n    }\n        \n    var startIndex = options.startIndex;\n\n    state.stepCount = stepTitles.length;\n\n    // Tries to load the saved state (step position)\n    if (options.saveState && $.cookie)\n    {\n        var savedState = $.cookie(_cookiePrefix + getUniqueId(wizard));\n        // Sets the saved position to the start index if not undefined or out of range \n        var savedIndex = parseInt(savedState, 0);\n        if (!isNaN(savedIndex) && savedIndex < state.stepCount)\n        {\n            startIndex = savedIndex;\n        }\n    }\n\n    state.currentIndex = startIndex;\n\n    stepTitles.each(function (index)\n    {\n        var item = $(this), // item == header\n            content = stepContents.eq(index),\n            modeData = content.data(\"mode\"),\n            mode = (modeData == null) ? contentMode.html : getValidEnumValue(contentMode,\n                (/^\\s*$/.test(modeData) || isNaN(modeData)) ? modeData : parseInt(modeData, 0)),\n            contentUrl = (mode === contentMode.html || content.data(\"url\") === undefined) ?\n                \"\" : content.data(\"url\"),\n            contentLoaded = (mode !== contentMode.html && content.data(\"loaded\") === \"1\"),\n            step = $.extend({}, stepModel, {\n                title: item.html(),\n                content: (mode === contentMode.html) ? content.html() : \"\",\n                contentUrl: contentUrl,\n                contentMode: mode,\n                contentLoaded: contentLoaded\n            });\n\n        addStepToCache(wizard, step);\n    });\n}\n\n/**\n * Triggers the onCanceled event.\n *\n * @static\n * @private\n * @method cancel\n * @param wizard {Object} The jQuery wizard object\n **/\nfunction cancel(wizard)\n{\n    wizard.triggerHandler(\"canceled\");\n}\n\nfunction decreaseCurrentIndexBy(state, decreaseBy)\n{\n    return state.currentIndex - decreaseBy;\n}\n\n/**\n * Removes the control functionality completely and transforms the current state to the initial HTML structure.\n *\n * @static\n * @private\n * @method destroy\n * @param wizard {Object} A jQuery wizard object\n **/\nfunction destroy(wizard, options)\n{\n    var eventNamespace = getEventNamespace(wizard);\n\n    // Remove virtual data objects from the wizard\n    wizard.unbind(eventNamespace).removeData(\"uid\").removeData(\"options\")\n        .removeData(\"state\").removeData(\"steps\").removeData(\"eventNamespace\")\n        .find(\".actions a\").unbind(eventNamespace);\n\n    // Remove attributes and CSS classes from the wizard\n    wizard.removeClass(options.clearFixCssClass + \" vertical\");\n\n    var contents = wizard.find(\".content > *\");\n\n    // Remove virtual data objects from panels and their titles\n    contents.removeData(\"loaded\").removeData(\"mode\").removeData(\"url\");\n\n    // Remove attributes, CSS classes and reset inline styles on all panels and their titles\n    contents.removeAttr(\"id\").removeAttr(\"role\").removeAttr(\"tabindex\")\n        .removeAttr(\"class\").removeAttr(\"style\")._removeAria(\"labelledby\")\n        ._removeAria(\"hidden\");\n\n    // Empty panels if the mode is set to 'async' or 'iframe'\n    wizard.find(\".content > [data-mode='async'],.content > [data-mode='iframe']\").empty();\n\n    var wizardSubstitute = $(\"<{0} class=\\\"{1}\\\"></{0}>\".format(wizard.get(0).tagName, wizard.attr(\"class\")));\n\n    var wizardId = wizard._id();\n    if (wizardId != null && wizardId !== \"\")\n    {\n        wizardSubstitute._id(wizardId);\n    }\n\n    wizardSubstitute.html(wizard.find(\".content\").html());\n    wizard.after(wizardSubstitute);\n    wizard.remove();\n\n    return wizardSubstitute;\n}\n\n/**\n * Triggers the onFinishing and onFinished event.\n *\n * @static\n * @private\n * @method finishStep\n * @param wizard {Object} The jQuery wizard object\n * @param state {Object} The state container of the current wizard\n **/\nfunction finishStep(wizard, state)\n{\n    var currentStep = wizard.find(\".steps li\").eq(state.currentIndex);\n\n    if (wizard.triggerHandler(\"finishing\", [state.currentIndex]))\n    {\n        currentStep.addClass(\"done\").removeClass(\"error\");\n        wizard.triggerHandler(\"finished\", [state.currentIndex]);\n    }\n    else\n    {\n        currentStep.addClass(\"error\");\n    }\n}\n\n/**\n * Gets or creates if not exist an unique event namespace for the given wizard instance.\n *\n * @static\n * @private\n * @method getEventNamespace\n * @param wizard {Object} A jQuery wizard object\n * @return {String} Returns the unique event namespace for the given wizard\n */\nfunction getEventNamespace(wizard)\n{\n    var eventNamespace = wizard.data(\"eventNamespace\");\n\n    if (eventNamespace == null)\n    {\n        eventNamespace = \".\" + getUniqueId(wizard);\n        wizard.data(\"eventNamespace\", eventNamespace);\n    }\n\n    return eventNamespace;\n}\n\nfunction getStepAnchor(wizard, index)\n{\n    var uniqueId = getUniqueId(wizard);\n\n    return wizard.find(\"#\" + uniqueId + _tabSuffix + index);\n}\n\nfunction getStepPanel(wizard, index)\n{\n    var uniqueId = getUniqueId(wizard);\n\n    return wizard.find(\"#\" + uniqueId + _tabpanelSuffix + index);\n}\n\nfunction getStepTitle(wizard, index)\n{\n    var uniqueId = getUniqueId(wizard);\n\n    return wizard.find(\"#\" + uniqueId + _titleSuffix + index);\n}\n\nfunction getOptions(wizard)\n{\n    return wizard.data(\"options\");\n}\n\nfunction getState(wizard)\n{\n    return wizard.data(\"state\");\n}\n\nfunction getSteps(wizard)\n{\n    return wizard.data(\"steps\");\n}\n\n/**\n * Gets a specific step object by index.\n *\n * @static\n * @private\n * @method getStep\n * @param index {Integer} An integer that belongs to the position of a step\n * @return {Object} A specific step object\n **/\nfunction getStep(wizard, index)\n{\n    var steps = getSteps(wizard);\n\n    if (index < 0 || index >= steps.length)\n    {\n        throwError(_indexOutOfRangeErrorMessage);\n    }\n\n    return steps[index];\n}\n\n/**\n * Gets or creates if not exist an unique id from the given wizard instance.\n *\n * @static\n * @private\n * @method getUniqueId\n * @param wizard {Object} A jQuery wizard object\n * @return {String} Returns the unique id for the given wizard\n */\nfunction getUniqueId(wizard)\n{\n    var uniqueId = wizard.data(\"uid\");\n\n    if (uniqueId == null)\n    {\n        uniqueId = wizard._id();\n        if (uniqueId == null)\n        {\n            uniqueId = \"steps-uid-\".concat(_uniqueId);\n            wizard._id(uniqueId);\n        }\n\n        _uniqueId++;\n        wizard.data(\"uid\", uniqueId);\n    }\n\n    return uniqueId;\n}\n\n/**\n * Gets a valid enum value by checking a specific enum key or value.\n * \n * @static\n * @private\n * @method getValidEnumValue\n * @param enumType {Object} Type of enum\n * @param keyOrValue {Object} Key as `String` or value as `Integer` to check for\n */\nfunction getValidEnumValue(enumType, keyOrValue)\n{\n    validateArgument(\"enumType\", enumType);\n    validateArgument(\"keyOrValue\", keyOrValue);\n\n    // Is key\n    if (typeof keyOrValue === \"string\")\n    {\n        var value = enumType[keyOrValue];\n        if (value === undefined)\n        {\n            throwError(\"The enum key '{0}' does not exist.\", keyOrValue);\n        }\n\n        return value;\n    }\n    // Is value\n    else if (typeof keyOrValue === \"number\")\n    {\n        for (var key in enumType)\n        {\n            if (enumType[key] === keyOrValue)\n            {\n                return keyOrValue;\n            }\n        }\n\n        throwError(\"Invalid enum value '{0}'.\", keyOrValue);\n    }\n    // Type is not supported\n    else\n    {\n        throwError(\"Invalid key or value type.\");\n    }\n}\n\n/**\n * Routes to the next step.\n *\n * @static\n * @private\n * @method goToNextStep\n * @param wizard {Object} The jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @return {Boolean} Indicates whether the action executed\n **/\nfunction goToNextStep(wizard, options, state)\n{\n    return paginationClick(wizard, options, state, increaseCurrentIndexBy(state, 1));\n}\n\n/**\n * Routes to the previous step.\n *\n * @static\n * @private\n * @method goToPreviousStep\n * @param wizard {Object} The jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @return {Boolean} Indicates whether the action executed\n **/\nfunction goToPreviousStep(wizard, options, state)\n{\n    return paginationClick(wizard, options, state, decreaseCurrentIndexBy(state, 1));\n}\n\n/**\n * Routes to a specific step by a given index.\n *\n * @static\n * @private\n * @method goToStep\n * @param wizard {Object} The jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param index {Integer} The position (zero-based) to route to\n * @return {Boolean} Indicates whether the action succeeded or failed\n **/\nfunction goToStep(wizard, options, state, index)\n{\n    if (index < 0 || index >= state.stepCount)\n    {\n        throwError(_indexOutOfRangeErrorMessage);\n    }\n\n    if (options.forceMoveForward && index < state.currentIndex)\n    {\n        return;\n    }\n\n    var oldIndex = state.currentIndex;\n    if (wizard.triggerHandler(\"stepChanging\", [state.currentIndex, index]))\n    {\n        // Save new state\n        state.currentIndex = index;\n        saveCurrentStateToCookie(wizard, options, state);\n\n        // Change visualisation\n        refreshStepNavigation(wizard, options, state, oldIndex);\n        refreshPagination(wizard, options, state);\n        loadAsyncContent(wizard, options, state);\n        startTransitionEffect(wizard, options, state, index, oldIndex, function()\n        {\n            wizard.triggerHandler(\"stepChanged\", [index, oldIndex]);\n        });\n    }\n    else\n    {\n        wizard.find(\".steps li\").eq(oldIndex).addClass(\"error\");\n    }\n\n    return true;\n}\n\nfunction increaseCurrentIndexBy(state, increaseBy)\n{\n    return state.currentIndex + increaseBy;\n}\n\n/**\n * Initializes the component.\n *\n * @static\n * @private\n * @method initialize\n * @param options {Object} The component settings\n **/\nfunction initialize(options)\n{\n    /*jshint -W040 */\n    var opts = $.extend(true, {}, defaults, options);\n\n    return this.each(function ()\n    {\n        var wizard = $(this);\n        var state = {\n            currentIndex: opts.startIndex,\n            currentStep: null,\n            stepCount: 0,\n            transitionElement: null\n        };\n\n        // Create data container\n        wizard.data(\"options\", opts);\n        wizard.data(\"state\", state);\n        wizard.data(\"steps\", []);\n\n        analyzeData(wizard, opts, state);\n        render(wizard, opts, state);\n        registerEvents(wizard, opts);\n\n        // Trigger focus\n        if (opts.autoFocus && _uniqueId === 0)\n        {\n            getStepAnchor(wizard, opts.startIndex).focus();\n        }\n\n        wizard.triggerHandler(\"init\", [opts.startIndex]);\n    });\n}\n\n/**\n * Inserts a new step to a specific position.\n *\n * @static\n * @private\n * @method insertStep\n * @param wizard {Object} The jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param index {Integer} The position (zero-based) to add\n * @param step {Object} The step object to add\n * @example\n *     $(\"#wizard\").steps().insert(0, {\n *         title: \"Title\",\n *         content: \"\", // optional\n *         contentMode: \"async\", // optional\n *         contentUrl: \"/Content/Step/1\" // optional\n *     });\n * @chainable\n **/\nfunction insertStep(wizard, options, state, index, step)\n{\n    if (index < 0 || index > state.stepCount)\n    {\n        throwError(_indexOutOfRangeErrorMessage);\n    }\n\n    // TODO: Validate step object\n\n    // Change data\n    step = $.extend({}, stepModel, step);\n    insertStepToCache(wizard, index, step);\n    if (state.currentIndex !== state.stepCount && state.currentIndex >= index)\n    {\n        state.currentIndex++;\n        saveCurrentStateToCookie(wizard, options, state);\n    }\n    state.stepCount++;\n\n    var contentContainer = wizard.find(\".content\"),\n        header = $(\"<{0}>{1}</{0}>\".format(options.headerTag, step.title)),\n        body = $(\"<{0}></{0}>\".format(options.bodyTag));\n\n    if (step.contentMode == null || step.contentMode === contentMode.html)\n    {\n        body.html(step.content);\n    }\n\n    if (index === 0)\n    {\n        contentContainer.prepend(body).prepend(header);\n    }\n    else\n    {\n        getStepPanel(wizard, (index - 1)).after(body).after(header);\n    }\n\n    renderBody(wizard, state, body, index);\n    renderTitle(wizard, options, state, header, index);\n    refreshSteps(wizard, options, state, index);\n    if (index === state.currentIndex)\n    {\n        refreshStepNavigation(wizard, options, state);\n    }\n    refreshPagination(wizard, options, state);\n\n    return wizard;\n}\n\n/**\n * Inserts a step object to the cache at a specific position.\n *\n * @static\n * @private\n * @method insertStepToCache\n * @param wizard {Object} A jQuery wizard object\n * @param index {Integer} The position (zero-based) to add\n * @param step {Object} The step object to add\n **/\nfunction insertStepToCache(wizard, index, step)\n{\n    getSteps(wizard).splice(index, 0, step);\n}\n\n/**\n * Handles the keyup DOM event for pagination.\n *\n * @static\n * @private\n * @event keyup\n * @param event {Object} An event object\n */\nfunction keyUpHandler(event)\n{\n    var wizard = $(this),\n        options = getOptions(wizard),\n        state = getState(wizard);\n\n    if (options.suppressPaginationOnFocus && wizard.find(\":focus\").is(\":input\"))\n    {\n        event.preventDefault();\n        return false;\n    }\n\n    var keyCodes = { left: 37, right: 39 };\n    if (event.keyCode === keyCodes.left)\n    {\n        event.preventDefault();\n        goToPreviousStep(wizard, options, state);\n    }\n    else if (event.keyCode === keyCodes.right)\n    {\n        event.preventDefault();\n        goToNextStep(wizard, options, state);\n    }\n}\n\n/**\n * Loads and includes async content.\n *\n * @static\n * @private\n * @method loadAsyncContent\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n */\nfunction loadAsyncContent(wizard, options, state)\n{\n    if (state.stepCount > 0)\n    {\n        var currentIndex = state.currentIndex,\n            currentStep = getStep(wizard, currentIndex);\n\n        if (!options.enableContentCache || !currentStep.contentLoaded)\n        {\n            switch (getValidEnumValue(contentMode, currentStep.contentMode))\n            {\n                case contentMode.iframe:\n                    wizard.find(\".content > .body\").eq(state.currentIndex).empty()\n                        .html(\"<iframe src=\\\"\" + currentStep.contentUrl + \"\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\" />\")\n                        .data(\"loaded\", \"1\");\n                    break;\n\n                case contentMode.async:\n                    var currentStepContent = getStepPanel(wizard, currentIndex)._aria(\"busy\", \"true\")\n                        .empty().append(renderTemplate(options.loadingTemplate, { text: options.labels.loading }));\n\n                    $.ajax({ url: currentStep.contentUrl, cache: false }).done(function (data)\n                    {\n                        currentStepContent.empty().html(data)._aria(\"busy\", \"false\").data(\"loaded\", \"1\");\n                        wizard.triggerHandler(\"contentLoaded\", [currentIndex]);\n                    });\n                    break;\n            }\n        }\n    }\n}\n\n/**\n * Fires the action next or previous click event.\n *\n * @static\n * @private\n * @method paginationClick\n * @param wizard {Object} The jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param index {Integer} The position (zero-based) to route to\n * @return {Boolean} Indicates whether the event fired successfully or not\n **/\nfunction paginationClick(wizard, options, state, index)\n{\n    var oldIndex = state.currentIndex;\n\n    if (index >= 0 && index < state.stepCount && !(options.forceMoveForward && index < state.currentIndex))\n    {\n        var anchor = getStepAnchor(wizard, index),\n            parent = anchor.parent(),\n            isDisabled = parent.hasClass(\"disabled\");\n\n        // Enable the step to make the anchor clickable!\n        parent._enableAria();\n        anchor.click();\n\n        // An error occured\n        if (oldIndex === state.currentIndex && isDisabled)\n        {\n            // Disable the step again if current index has not changed; prevents click action.\n            parent._enableAria(false);\n            return false;\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Fires when a pagination click happens.\n *\n * @static\n * @private\n * @event click\n * @param event {Object} An event object\n */\nfunction paginationClickHandler(event)\n{\n    event.preventDefault();\n\n    var anchor = $(this),\n        wizard = anchor.parent().parent().parent().parent(),\n        options = getOptions(wizard),\n        state = getState(wizard),\n        href = anchor.attr(\"href\");\n\n    switch (href.substring(href.lastIndexOf(\"#\") + 1))\n    {\n        case \"cancel\":\n            cancel(wizard);\n            break;\n\n        case \"finish\":\n            finishStep(wizard, state);\n            break;\n\n        case \"next\":\n            goToNextStep(wizard, options, state);\n            break;\n\n        case \"previous\":\n            goToPreviousStep(wizard, options, state);\n            break;\n    }\n}\n\n/**\n * Refreshs the visualization state for the entire pagination.\n *\n * @static\n * @private\n * @method refreshPagination\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n */\nfunction refreshPagination(wizard, options, state)\n{\n    if (options.enablePagination)\n    {\n        var finish = wizard.find(\".actions a[href$='#finish']\").parent(),\n            next = wizard.find(\".actions a[href$='#next']\").parent();\n\n        if (!options.forceMoveForward)\n        {\n            var previous = wizard.find(\".actions a[href$='#previous']\").parent();\n            previous._enableAria(state.currentIndex > 0);\n        }\n\n        if (options.enableFinishButton && options.showFinishButtonAlways)\n        {\n            finish._enableAria(state.stepCount > 0);\n            next._enableAria(state.stepCount > 1 && state.stepCount > (state.currentIndex + 1));\n        }\n        else\n        {\n            finish._showAria(options.enableFinishButton && state.stepCount === (state.currentIndex + 1));\n            next._showAria(state.stepCount === 0 || state.stepCount > (state.currentIndex + 1)).\n                _enableAria(state.stepCount > (state.currentIndex + 1) || !options.enableFinishButton);\n        }\n    }\n}\n\n/**\n * Refreshs the visualization state for the step navigation (tabs).\n *\n * @static\n * @private\n * @method refreshStepNavigation\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param [oldIndex] {Integer} The index of the prior step\n */\nfunction refreshStepNavigation(wizard, options, state, oldIndex)\n{\n    var currentOrNewStepAnchor = getStepAnchor(wizard, state.currentIndex),\n        currentInfo = $(\"<span class=\\\"current-info audible\\\">\" + options.labels.current + \" </span>\"),\n        stepTitles = wizard.find(\".content > .title\");\n\n    if (oldIndex != null)\n    {\n        var oldStepAnchor = getStepAnchor(wizard, oldIndex);\n        oldStepAnchor.parent().addClass(\"done\").removeClass(\"error\")._selectAria(false);\n        stepTitles.eq(oldIndex).removeClass(\"current\").next(\".body\").removeClass(\"current\");\n        currentInfo = oldStepAnchor.find(\".current-info\");\n        currentOrNewStepAnchor.focus();\n    }\n\n    currentOrNewStepAnchor.prepend(currentInfo).parent()._selectAria().removeClass(\"done\")._enableAria();\n    stepTitles.eq(state.currentIndex).addClass(\"current\").next(\".body\").addClass(\"current\");\n}\n\n/**\n * Refreshes step buttons and their related titles beyond a certain position.\n *\n * @static\n * @private\n * @method refreshSteps\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param index {Integer} The start point for refreshing ids\n */\nfunction refreshSteps(wizard, options, state, index)\n{\n    var uniqueId = getUniqueId(wizard);\n\n    for (var i = index; i < state.stepCount; i++)\n    {\n        var uniqueStepId = uniqueId + _tabSuffix + i,\n            uniqueBodyId = uniqueId + _tabpanelSuffix + i,\n            uniqueHeaderId = uniqueId + _titleSuffix + i,\n            title = wizard.find(\".title\").eq(i)._id(uniqueHeaderId);\n\n        wizard.find(\".steps a\").eq(i)._id(uniqueStepId)\n            ._aria(\"controls\", uniqueBodyId).attr(\"href\", \"#\" + uniqueHeaderId)\n            .html(renderTemplate(options.titleTemplate, { index: i + 1, title: title.html() }));\n        wizard.find(\".body\").eq(i)._id(uniqueBodyId)\n            ._aria(\"labelledby\", uniqueHeaderId);\n    }\n}\n\nfunction registerEvents(wizard, options)\n{\n    var eventNamespace = getEventNamespace(wizard);\n\n    wizard.bind(\"canceled\" + eventNamespace, options.onCanceled);\n    wizard.bind(\"contentLoaded\" + eventNamespace, options.onContentLoaded);\n    wizard.bind(\"finishing\" + eventNamespace, options.onFinishing);\n    wizard.bind(\"finished\" + eventNamespace, options.onFinished);\n    wizard.bind(\"init\" + eventNamespace, options.onInit);\n    wizard.bind(\"stepChanging\" + eventNamespace, options.onStepChanging);\n    wizard.bind(\"stepChanged\" + eventNamespace, options.onStepChanged);\n\n    if (options.enableKeyNavigation)\n    {\n        wizard.bind(\"keyup\" + eventNamespace, keyUpHandler);\n    }\n\n    wizard.find(\".actions a\").bind(\"click\" + eventNamespace, paginationClickHandler);\n}\n\n/**\n * Removes a specific step by an given index.\n *\n * @static\n * @private\n * @method removeStep\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param index {Integer} The position (zero-based) of the step to remove\n * @return Indecates whether the item is removed.\n **/\nfunction removeStep(wizard, options, state, index)\n{\n    // Index out of range and try deleting current item will return false.\n    if (index < 0 || index >= state.stepCount || state.currentIndex === index)\n    {\n        return false;\n    }\n\n    // Change data\n    removeStepFromCache(wizard, index);\n    if (state.currentIndex > index)\n    {\n        state.currentIndex--;\n        saveCurrentStateToCookie(wizard, options, state);\n    }\n    state.stepCount--;\n\n    getStepTitle(wizard, index).remove();\n    getStepPanel(wizard, index).remove();\n    getStepAnchor(wizard, index).parent().remove();\n\n    // Set the \"first\" class to the new first step button \n    if (index === 0)\n    {\n        wizard.find(\".steps li\").first().addClass(\"first\");\n    }\n\n    // Set the \"last\" class to the new last step button \n    if (index === state.stepCount)\n    {\n        wizard.find(\".steps li\").eq(index).addClass(\"last\");\n    }\n\n    refreshSteps(wizard, options, state, index);\n    refreshPagination(wizard, options, state);\n\n    return true;\n}\n\nfunction removeStepFromCache(wizard, index)\n{\n    getSteps(wizard).splice(index, 1);\n}\n\n/**\n * Transforms the base html structure to a more sensible html structure.\n *\n * @static\n * @private\n * @method render\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n **/\nfunction render(wizard, options, state) {\n// Create a content wrapper and copy HTML from the intial wizard structure\n    var contentWrapperTemplate = \"<{0} class=\\\"{1}\\\"></{0}>\",\n        stepsWrapperTemplate = \"<{0} class=\\\"{1}\\\">{2}</{0}>\",\n        orientation = getValidEnumValue(stepsOrientation, options.stepsOrientation),\n        verticalCssClass = (orientation === stepsOrientation.vertical) ? \" vertical\" : \"\",\n        contentWrapper = $(contentWrapperTemplate.format(options.contentContainerTag, \"content \" +     options.clearFixCssClass)),\n        stepsWrapper = $(stepsWrapperTemplate.format(options.stepsContainerTag, \"steps \" + options.clearFixCssClass, \"<ul role=\\\"tablist\\\"></ul>\"));\n\n// Transform the wizard wrapper by wrapping the innerHTML in the content wrapper, then prepending the stepsWrapper\n    wizard.attr(\"role\", \"application\").wrapInner(contentWrapper).prepend(stepsWrapper)\n        .addClass(options.cssClass + \" \" + options.clearFixCssClass + verticalCssClass);\n\n//Now that wizard is tansformed, select the the title and contents elements\n    var populatedContent = wizard.find('.content'),\n        stepTitles = populatedContent.children(options.headerTag),\n        stepContents = populatedContent.children(options.bodyTag);\n\n// Add WIA-ARIA support\n    stepContents.each(function (index) {\n        renderBody(wizard, state, $(this), index);\n    });\n\n    stepTitles.each(function (index) {\n        renderTitle(wizard, options, state, $(this), index);\n    });\n\n    refreshStepNavigation(wizard, options, state);\n    renderPagination(wizard, options, state);\n}\n\n/**\n * Transforms the body to a proper tabpanel.\n *\n * @static\n * @private\n * @method renderBody\n * @param wizard {Object} A jQuery wizard object\n * @param body {Object} A jQuery body object\n * @param index {Integer} The position of the body\n */\nfunction renderBody(wizard, state, body, index)\n{\n    var uniqueId = getUniqueId(wizard),\n        uniqueBodyId = uniqueId + _tabpanelSuffix + index,\n        uniqueHeaderId = uniqueId + _titleSuffix + index;\n\n    body._id(uniqueBodyId).attr(\"role\", \"tabpanel\")._aria(\"labelledby\", uniqueHeaderId)\n        .addClass(\"body\")._showAria(state.currentIndex === index);\n}\n\n/**\n * Renders a pagination if enabled.\n *\n * @static\n * @private\n * @method renderPagination\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n */\nfunction renderPagination(wizard, options, state)\n{\n    if (options.enablePagination)\n    {\n        var pagination = \"<{0} class=\\\"actions {1}\\\"><ul role=\\\"menu\\\" aria-label=\\\"{2}\\\">{3}</ul></{0}>\",\n            buttonTemplate = \"<li><a href=\\\"#{0}\\\" role=\\\"menuitem\\\">{1}</a></li>\",\n            buttons = \"\";\n\n        if (!options.forceMoveForward)\n        {\n            buttons += buttonTemplate.format(\"previous\", options.labels.previous);\n        }\n\n        buttons += buttonTemplate.format(\"next\", options.labels.next);\n\n        if (options.enableFinishButton)\n        {\n            buttons += buttonTemplate.format(\"finish\", options.labels.finish);\n        }\n\n        if (options.enableCancelButton)\n        {\n            buttons += buttonTemplate.format(\"cancel\", options.labels.cancel);\n        }\n\n        wizard.append(pagination.format(options.actionContainerTag, options.clearFixCssClass,\n            options.labels.pagination, buttons));\n\n        refreshPagination(wizard, options, state);\n        loadAsyncContent(wizard, options, state);\n    }\n}\n\n/**\n * Renders a template and replaces all placeholder.\n *\n * @static\n * @private\n * @method renderTemplate\n * @param template {String} A template\n * @param substitutes {Object} A list of substitute\n * @return {String} The rendered template\n */\nfunction renderTemplate(template, substitutes)\n{\n    var matches = template.match(/#([a-z]*)#/gi);\n\n    for (var i = 0; i < matches.length; i++)\n    {\n        var match = matches[i], \n            key = match.substring(1, match.length - 1);\n\n        if (substitutes[key] === undefined)\n        {\n            throwError(\"The key '{0}' does not exist in the substitute collection!\", key);\n        }\n\n        template = template.replace(match, substitutes[key]);\n    }\n\n    return template;\n}\n\n/**\n * Transforms the title to a step item button.\n *\n * @static\n * @private\n * @method renderTitle\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n * @param header {Object} A jQuery header object\n * @param index {Integer} The position of the header\n */\nfunction renderTitle(wizard, options, state, header, index)\n{\n    var uniqueId = getUniqueId(wizard),\n        uniqueStepId = uniqueId + _tabSuffix + index,\n        uniqueBodyId = uniqueId + _tabpanelSuffix + index,\n        uniqueHeaderId = uniqueId + _titleSuffix + index,\n        stepCollection = wizard.find(\".steps > ul\"),\n        title = renderTemplate(options.titleTemplate, {\n            index: index + 1,\n            title: header.html()\n        }),\n        stepItem = $(\"<li role=\\\"tab\\\"><a id=\\\"\" + uniqueStepId + \"\\\" href=\\\"#\" + uniqueHeaderId + \n            \"\\\" aria-controls=\\\"\" + uniqueBodyId + \"\\\">\" + title + \"</a></li>\");\n        \n    stepItem._enableAria(options.enableAllSteps || state.currentIndex > index);\n\n    if (state.currentIndex > index)\n    {\n        stepItem.addClass(\"done\");\n    }\n\n    header._id(uniqueHeaderId).attr(\"tabindex\", \"-1\").addClass(\"title\");\n\n    if (index === 0)\n    {\n        stepCollection.prepend(stepItem);\n    }\n    else\n    {\n        stepCollection.find(\"li\").eq(index - 1).after(stepItem);\n    }\n\n    // Set the \"first\" class to the new first step button\n    if (index === 0)\n    {\n        stepCollection.find(\"li\").removeClass(\"first\").eq(index).addClass(\"first\");\n    }\n\n    // Set the \"last\" class to the new last step button\n    if (index === (state.stepCount - 1))\n    {\n        stepCollection.find(\"li\").removeClass(\"last\").eq(index).addClass(\"last\");\n    }\n\n    // Register click event\n    stepItem.children(\"a\").bind(\"click\" + getEventNamespace(wizard), stepClickHandler);\n}\n\n/**\n * Saves the current state to a cookie.\n *\n * @static\n * @private\n * @method saveCurrentStateToCookie\n * @param wizard {Object} A jQuery wizard object\n * @param options {Object} Settings of the current wizard\n * @param state {Object} The state container of the current wizard\n */\nfunction saveCurrentStateToCookie(wizard, options, state)\n{\n    if (options.saveState && $.cookie)\n    {\n        $.cookie(_cookiePrefix + getUniqueId(wizard), state.currentIndex);\n    }\n}\n\nfunction startTransitionEffect(wizard, options, state, index, oldIndex, doneCallback)\n{\n    var stepContents = wizard.find(\".content > .body\"),\n        effect = getValidEnumValue(transitionEffect, options.transitionEffect),\n        effectSpeed = options.transitionEffectSpeed,\n        newStep = stepContents.eq(index),\n        currentStep = stepContents.eq(oldIndex);\n\n    switch (effect)\n    {\n        case transitionEffect.fade:\n        case transitionEffect.slide:\n            var hide = (effect === transitionEffect.fade) ? \"fadeOut\" : \"slideUp\",\n                show = (effect === transitionEffect.fade) ? \"fadeIn\" : \"slideDown\";\n\n            state.transitionElement = newStep;\n            currentStep[hide](effectSpeed, function ()\n            {\n                var wizard = $(this)._showAria(false).parent().parent(),\n                    state = getState(wizard);\n\n                if (state.transitionElement)\n                {\n                    state.transitionElement[show](effectSpeed, function ()\n                    {\n                        $(this)._showAria();\n                    }).promise().done(doneCallback);\n                    state.transitionElement = null;\n                }\n            });\n            break;\n\n        case transitionEffect.slideLeft:\n            var outerWidth = currentStep.outerWidth(true),\n                posFadeOut = (index > oldIndex) ? -(outerWidth) : outerWidth,\n                posFadeIn = (index > oldIndex) ? outerWidth : -(outerWidth);\n\n            $.when(currentStep.animate({ left: posFadeOut }, effectSpeed, \n                    function () { $(this)._showAria(false); }),\n                newStep.css(\"left\", posFadeIn + \"px\")._showAria()\n                    .animate({ left: 0 }, effectSpeed)).done(doneCallback);\n            break;\n\n        default:\n            $.when(currentStep._showAria(false), newStep._showAria())\n                .done(doneCallback);\n            break;\n    }\n}\n\n/**\n * Fires when a step click happens.\n *\n * @static\n * @private\n * @event click\n * @param event {Object} An event object\n */\nfunction stepClickHandler(event)\n{\n    event.preventDefault();\n\n    var anchor = $(this),\n        wizard = anchor.parent().parent().parent().parent(),\n        options = getOptions(wizard),\n        state = getState(wizard),\n        oldIndex = state.currentIndex;\n\n    if (anchor.parent().is(\":not(.disabled):not(.current)\"))\n    {\n        var href = anchor.attr(\"href\"),\n            position = parseInt(href.substring(href.lastIndexOf(\"-\") + 1), 0);\n\n        goToStep(wizard, options, state, position);\n    }\n\n    // If nothing has changed\n    if (oldIndex === state.currentIndex)\n    {\n        getStepAnchor(wizard, oldIndex).focus();\n        return false;\n    }\n}\n\nfunction throwError(message)\n{\n    if (arguments.length > 1)\n    {\n        message = message.format(Array.prototype.slice.call(arguments, 1));\n    }\n\n    throw new Error(message);\n}\n\n/**\n * Checks an argument for null or undefined and throws an error if one check applies.\n *\n * @static\n * @private\n * @method validateArgument\n * @param argumentName {String} The name of the given argument\n * @param argumentValue {Object} The argument itself\n */\nfunction validateArgument(argumentName, argumentValue)\n{\n    if (argumentValue == null)\n    {\n        throwError(\"The argument '{0}' is null or undefined.\", argumentName);\n    }\n}\n\n/**\n * Represents a jQuery wizard plugin.\n *\n * @class steps\n * @constructor\n * @param [method={}] The name of the method as `String` or an JSON object for initialization\n * @param [params=]* {Array} Additional arguments for a method call\n * @chainable\n **/\n$.fn.steps = function (method)\n{\n    if ($.fn.steps[method])\n    {\n        return $.fn.steps[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n    else if (typeof method === \"object\" || !method)\n    {\n        return initialize.apply(this, arguments);\n    }\n    else\n    {\n        $.error(\"Method \" + method + \" does not exist on jQuery.steps\");\n    }\n};\n\n/**\n * Adds a new step.\n *\n * @method add\n * @param step {Object} The step object to add\n * @chainable\n **/\n$.fn.steps.add = function (step)\n{\n    var state = getState(this);\n    return insertStep(this, getOptions(this), state, state.stepCount, step);\n};\n\n/**\n * Removes the control functionality completely and transforms the current state to the initial HTML structure.\n *\n * @method destroy\n * @chainable\n **/\n$.fn.steps.destroy = function ()\n{\n    return destroy(this, getOptions(this));\n};\n\n/**\n * Triggers the onFinishing and onFinished event.\n *\n * @method finish\n **/\n$.fn.steps.finish = function ()\n{\n    finishStep(this, getState(this));\n};\n\n/**\n * Gets the current step index.\n *\n * @method getCurrentIndex\n * @return {Integer} The actual step index (zero-based)\n * @for steps\n **/\n$.fn.steps.getCurrentIndex = function ()\n{\n    return getState(this).currentIndex;\n};\n\n/**\n * Gets the current step object.\n *\n * @method getCurrentStep\n * @return {Object} The actual step object\n **/\n$.fn.steps.getCurrentStep = function ()\n{\n    return getStep(this, getState(this).currentIndex);\n};\n\n/**\n * Gets a specific step object by index.\n *\n * @method getStep\n * @param index {Integer} An integer that belongs to the position of a step\n * @return {Object} A specific step object\n **/\n$.fn.steps.getStep = function (index)\n{\n    return getStep(this, index);\n};\n\n/**\n * Inserts a new step to a specific position.\n *\n * @method insert\n * @param index {Integer} The position (zero-based) to add\n * @param step {Object} The step object to add\n * @example\n *     $(\"#wizard\").steps().insert(0, {\n *         title: \"Title\",\n *         content: \"\", // optional\n *         contentMode: \"async\", // optional\n *         contentUrl: \"/Content/Step/1\" // optional\n *     });\n * @chainable\n **/\n$.fn.steps.insert = function (index, step)\n{\n    return insertStep(this, getOptions(this), getState(this), index, step);\n};\n\n/**\n * Routes to the next step.\n *\n * @method next\n * @return {Boolean} Indicates whether the action executed\n **/\n$.fn.steps.next = function ()\n{\n    return goToNextStep(this, getOptions(this), getState(this));\n};\n\n/**\n * Routes to the previous step.\n *\n * @method previous\n * @return {Boolean} Indicates whether the action executed\n **/\n$.fn.steps.previous = function ()\n{\n    return goToPreviousStep(this, getOptions(this), getState(this));\n};\n\n/**\n * Removes a specific step by an given index.\n *\n * @method remove\n * @param index {Integer} The position (zero-based) of the step to remove\n * @return Indecates whether the item is removed.\n **/\n$.fn.steps.remove = function (index)\n{\n    return removeStep(this, getOptions(this), getState(this), index);\n};\n\n/**\n * Sets a specific step object by index.\n *\n * @method setStep\n * @param index {Integer} An integer that belongs to the position of a step\n * @param step {Object} The step object to change\n **/\n$.fn.steps.setStep = function (index, step)\n{\n    throw new Error(\"Not yet implemented!\");\n};\n\n/**\n * Skips an certain amount of steps.\n *\n * @method skip\n * @param count {Integer} The amount of steps that should be skipped\n * @return {Boolean} Indicates whether the action executed\n **/\n$.fn.steps.skip = function (count)\n{\n    throw new Error(\"Not yet implemented!\");\n};\n\n/**\n * An enum represents the different content types of a step and their loading mechanisms.\n *\n * @class contentMode\n * @for steps\n **/\nvar contentMode = $.fn.steps.contentMode = {\n    /**\n     * HTML embedded content\n     *\n     * @readOnly\n     * @property html\n     * @type Integer\n     * @for contentMode\n     **/\n    html: 0,\n\n    /**\n     * IFrame embedded content\n     *\n     * @readOnly\n     * @property iframe\n     * @type Integer\n     * @for contentMode\n     **/\n    iframe: 1,\n\n    /**\n     * Async embedded content\n     *\n     * @readOnly\n     * @property async\n     * @type Integer\n     * @for contentMode\n     **/\n    async: 2\n};\n\n/**\n * An enum represents the orientation of the steps navigation.\n *\n * @class stepsOrientation\n * @for steps\n **/\nvar stepsOrientation = $.fn.steps.stepsOrientation = {\n    /**\n     * Horizontal orientation\n     *\n     * @readOnly\n     * @property horizontal\n     * @type Integer\n     * @for stepsOrientation\n     **/\n    horizontal: 0,\n\n    /**\n     * Vertical orientation\n     *\n     * @readOnly\n     * @property vertical\n     * @type Integer\n     * @for stepsOrientation\n     **/\n    vertical: 1\n};\n\n/**\n * An enum that represents the various transition animations.\n *\n * @class transitionEffect\n * @for steps\n **/\nvar transitionEffect = $.fn.steps.transitionEffect = {\n    /**\n     * No transition animation\n     *\n     * @readOnly\n     * @property none\n     * @type Integer\n     * @for transitionEffect\n     **/\n    none: 0,\n\n    /**\n     * Fade in transition\n     *\n     * @readOnly\n     * @property fade\n     * @type Integer\n     * @for transitionEffect\n     **/\n    fade: 1,\n\n    /**\n     * Slide up transition\n     *\n     * @readOnly\n     * @property slide\n     * @type Integer\n     * @for transitionEffect\n     **/\n    slide: 2,\n\n    /**\n     * Slide left transition\n     *\n     * @readOnly\n     * @property slideLeft\n     * @type Integer\n     * @for transitionEffect\n     **/\n    slideLeft: 3\n};\n\nvar stepModel = $.fn.steps.stepModel = {\n    title: \"\",\n    content: \"\",\n    contentUrl: \"\",\n    contentMode: contentMode.html,\n    contentLoaded: false\n};\n\n/**\n * An object that represents the default settings.\n * There are two possibities to override the sub-properties.\n * Either by doing it generally (global) or on initialization.\n *\n * @static\n * @class defaults\n * @for steps\n * @example\n *   // Global approach\n *   $.steps.defaults.headerTag = \"h3\";\n * @example\n *   // Initialization approach\n *   $(\"#wizard\").steps({ headerTag: \"h3\" });\n **/\nvar defaults = $.fn.steps.defaults = {\n    /**\n     * The header tag is used to find the step button text within the declared wizard area.\n     *\n     * @property headerTag\n     * @type String\n     * @default \"h1\"\n     * @for defaults\n     **/\n    headerTag: \"h1\",\n\n    /**\n     * The body tag is used to find the step content within the declared wizard area.\n     *\n     * @property bodyTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    bodyTag: \"div\",\n\n    /**\n     * The content container tag which will be used to wrap all step contents.\n     *\n     * @property contentContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    contentContainerTag: \"div\",\n\n    /**\n     * The action container tag which will be used to wrap the pagination navigation.\n     *\n     * @property actionContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    actionContainerTag: \"div\",\n\n    /**\n     * The steps container tag which will be used to wrap the steps navigation.\n     *\n     * @property stepsContainerTag\n     * @type String\n     * @default \"div\"\n     * @for defaults\n     **/\n    stepsContainerTag: \"div\",\n\n    /**\n     * The css class which will be added to the outer component wrapper.\n     *\n     * @property cssClass\n     * @type String\n     * @default \"wizard\"\n     * @for defaults\n     * @example\n     *     <div class=\"wizard\">\n     *         ...\n     *     </div>\n     **/\n    cssClass: \"wizard\",\n\n    /**\n     * The css class which will be used for floating scenarios.\n     *\n     * @property clearFixCssClass\n     * @type String\n     * @default \"clearfix\"\n     * @for defaults\n     **/\n    clearFixCssClass: \"clearfix\",\n\n    /**\n     * Determines whether the steps are vertically or horizontally oriented.\n     *\n     * @property stepsOrientation\n     * @type stepsOrientation\n     * @default horizontal\n     * @for defaults\n     * @since 1.0.0\n     **/\n    stepsOrientation: stepsOrientation.horizontal,\n\n    /*\n     * Tempplates\n     */\n\n    /**\n     * The title template which will be used to create a step button.\n     *\n     * @property titleTemplate\n     * @type String\n     * @default \"<span class=\\\"number\\\">#index#.</span> #title#\"\n     * @for defaults\n     **/\n    titleTemplate: \"<span class=\\\"number\\\">#index#.</span> #title#\",\n\n    /**\n     * The loading template which will be used to create the loading animation.\n     *\n     * @property loadingTemplate\n     * @type String\n     * @default \"<span class=\\\"spinner\\\"></span> #text#\"\n     * @for defaults\n     **/\n    loadingTemplate: \"<span class=\\\"spinner\\\"></span> #text#\",\n\n    /*\n     * Behaviour\n     */\n\n    /**\n     * Sets the focus to the first wizard instance in order to enable the key navigation from the begining if `true`. \n     *\n     * @property autoFocus\n     * @type Boolean\n     * @default false\n     * @for defaults\n     * @since 0.9.4\n     **/\n    autoFocus: false,\n\n    /**\n     * Enables all steps from the begining if `true` (all steps are clickable).\n     *\n     * @property enableAllSteps\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    enableAllSteps: false,\n\n    /**\n     * Enables keyboard navigation if `true` (arrow left and arrow right).\n     *\n     * @property enableKeyNavigation\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableKeyNavigation: true,\n\n    /**\n     * Enables pagination if `true`.\n     *\n     * @property enablePagination\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enablePagination: true,\n\n    /**\n     * Suppresses pagination if a form field is focused.\n     *\n     * @property suppressPaginationOnFocus\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    suppressPaginationOnFocus: true,\n\n    /**\n     * Enables cache for async loaded or iframe embedded content.\n     *\n     * @property enableContentCache\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableContentCache: true,\n\n    /**\n     * Shows the cancel button if enabled.\n     *\n     * @property enableCancelButton\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    enableCancelButton: false,\n\n    /**\n     * Shows the finish button if enabled.\n     *\n     * @property enableFinishButton\n     * @type Boolean\n     * @default true\n     * @for defaults\n     **/\n    enableFinishButton: true,\n\n    /**\n     * Not yet implemented.\n     *\n     * @property preloadContent\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    preloadContent: false,\n\n    /**\n     * Shows the finish button always (on each step; right beside the next button) if `true`. \n     * Otherwise the next button will be replaced by the finish button if the last step becomes active.\n     *\n     * @property showFinishButtonAlways\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    showFinishButtonAlways: false,\n\n    /**\n     * Prevents jumping to a previous step.\n     *\n     * @property forceMoveForward\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    forceMoveForward: false,\n\n    /**\n     * Saves the current state (step position) to a cookie.\n     * By coming next time the last active step becomes activated.\n     *\n     * @property saveState\n     * @type Boolean\n     * @default false\n     * @for defaults\n     **/\n    saveState: false,\n\n    /**\n     * The position to start on (zero-based).\n     *\n     * @property startIndex\n     * @type Integer\n     * @default 0\n     * @for defaults\n     **/\n    startIndex: 0,\n\n    /*\n     * Animation Effect Configuration\n     */\n\n    /**\n     * The animation effect which will be used for step transitions.\n     *\n     * @property transitionEffect\n     * @type transitionEffect\n     * @default none\n     * @for defaults\n     **/\n    transitionEffect: transitionEffect.none,\n\n    /**\n     * Animation speed for step transitions (in milliseconds).\n     *\n     * @property transitionEffectSpeed\n     * @type Integer\n     * @default 200\n     * @for defaults\n     **/\n    transitionEffectSpeed: 200,\n\n    /*\n     * Events\n     */\n\n    /**\n     * Fires before the step changes and can be used to prevent step changing by returning `false`. \n     * Very useful for form validation. \n     *\n     * @property onStepChanging\n     * @type Event\n     * @default function (event, currentIndex, newIndex) { return true; }\n     * @for defaults\n     **/\n    onStepChanging: function (event, currentIndex, newIndex) { return true; },\n\n    /**\n     * Fires after the step has change. \n     *\n     * @property onStepChanged\n     * @type Event\n     * @default function (event, currentIndex, priorIndex) { }\n     * @for defaults\n     **/\n    onStepChanged: function (event, currentIndex, priorIndex) { },\n\n    /**\n     * Fires after cancelation. \n     *\n     * @property onCanceled\n     * @type Event\n     * @default function (event) { }\n     * @for defaults\n     **/\n    onCanceled: function (event) { },\n\n    /**\n     * Fires before finishing and can be used to prevent completion by returning `false`. \n     * Very useful for form validation. \n     *\n     * @property onFinishing\n     * @type Event\n     * @default function (event, currentIndex) { return true; }\n     * @for defaults\n     **/\n    onFinishing: function (event, currentIndex) { return true; },\n\n    /**\n     * Fires after completion. \n     *\n     * @property onFinished\n     * @type Event\n     * @default function (event, currentIndex) { }\n     * @for defaults\n     **/\n    onFinished: function (event, currentIndex) { },\n\n    /**\n     * Fires after async content is loaded. \n     *\n     * @property onContentLoaded\n     * @type Event\n     * @default function (event, index) { }\n     * @for defaults\n     **/\n    onContentLoaded: function (event, currentIndex) { },\n\n    /**\n     * Fires when the wizard is initialized. \n     *\n     * @property onInit\n     * @type Event\n     * @default function (event) { }\n     * @for defaults\n     **/\n    onInit: function (event, currentIndex) { },\n\n    /**\n     * Contains all labels. \n     *\n     * @property labels\n     * @type Object\n     * @for defaults\n     **/\n    labels: {\n        /**\n         * Label for the cancel button.\n         *\n         * @property cancel\n         * @type String\n         * @default \"Cancel\"\n         * @for defaults\n         **/\n        cancel: \"Cancel\",\n\n        /**\n         * This label is important for accessability reasons.\n         * Indicates which step is activated.\n         *\n         * @property current\n         * @type String\n         * @default \"current step:\"\n         * @for defaults\n         **/\n        current: \"current step:\",\n\n        /**\n         * This label is important for accessability reasons and describes the kind of navigation.\n         *\n         * @property pagination\n         * @type String\n         * @default \"Pagination\"\n         * @for defaults\n         * @since 0.9.7\n         **/\n        pagination: \"Pagination\",\n\n        /**\n         * Label for the finish button.\n         *\n         * @property finish\n         * @type String\n         * @default \"Finish\"\n         * @for defaults\n         **/\n        finish: \"Finish\",\n\n        /**\n         * Label for the next button.\n         *\n         * @property next\n         * @type String\n         * @default \"Next\"\n         * @for defaults\n         **/\n        next: \"Next\",\n\n        /**\n         * Label for the previous button.\n         *\n         * @property previous\n         * @type String\n         * @default \"Previous\"\n         * @for defaults\n         **/\n        previous: \"Previous\",\n\n        /**\n         * Label for the loading animation.\n         *\n         * @property loading\n         * @type String\n         * @default \"Loading ...\"\n         * @for defaults\n         **/\n        loading: \"Loading ...\"\n    }\n};\n})(jQuery);"]}]}