{"remainingRequest":"/Users/qulongjun/personal/shine-design-rebase/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"transform-class-properties\",\"@babel/plugin-transform-modules-commonjs\",\"@babel/plugin-transform-object-assign\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-object-rest-spread\",\"@babel/plugin-syntax-dynamic-import\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],[\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/instafilta.js","dependencies":[{"path":"/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/instafilta.js","mtime":1552960781402},{"path":"/Users/qulongjun/personal/shine-design-rebase/node_modules/docz/node_modules/cache-loader/dist/cjs.js","mtime":1552894089278},{"path":"/Users/qulongjun/personal/shine-design-rebase/node_modules/babel-loader/lib/index.js","mtime":1552894085178}],"contextDependencies":[],"result":["\"use strict\";\n\n/*!\n * instaFilta\n * Version: 1.4.4\n * Description: jQuery plugin for performing in-page filtering\n * Homepage and documentation: https://github.com/chromawoods/instaFilta\n * Author: Andreas Larsson <andreas@chromawoods.com> (http://chromawoods.com)\n * Contributions: Jaap-Jan Frans\n */\n;\n\n(function ($) {\n  $.fn.instaFilta = function (options) {\n    var _filterTerm = null,\n        _filterCategory = null;\n    /* Default settings. */\n\n    var settings = $.extend({\n      scope: null,\n      targets: '.instafilta-target',\n      sections: '.instafilta-section',\n      categoryDataAttr: 'instafilta-category',\n      matchCssClass: 'instafilta-match',\n      itemsHideEffect: 'hide',\n      itemsHideDuration: 0,\n      itemsShowEffect: 'show',\n      itemsShowDuration: 0,\n      sectionsHideEffect: 'hide',\n      sectionsHideDuration: 0,\n      sectionsShowEffect: 'show',\n      sectionsShowDuration: 0,\n      onFilterComplete: null,\n      markMatches: false,\n      hideEmptySections: true,\n      beginsWith: false,\n      caseSensitive: false,\n      typeDelay: 0,\n      useSynonyms: true,\n      synonyms: [{\n        src: 'à,á,å,ä,â,ã',\n        dst: 'a'\n      }, {\n        src: 'À,Á,Å,Ä,Â,Ã',\n        dst: 'A'\n      }, {\n        src: 'è,é,ë,ê',\n        dst: 'e'\n      }, {\n        src: 'È,É,Ë,Ê',\n        dst: 'E'\n      }, {\n        src: 'ì,í,ï,î',\n        dst: 'i'\n      }, {\n        src: 'Ì,Í,Ï,Î',\n        dst: 'I'\n      }, {\n        src: 'ò,ó,ö,ô,õ',\n        dst: 'o'\n      }, {\n        src: 'Ò,Ó,Ö,Ô,Õ',\n        dst: 'O'\n      }, {\n        src: 'ù,ú,ü,û',\n        dst: 'u'\n      }, {\n        src: 'Ù,Ú,Ü,Û',\n        dst: 'U'\n      }, {\n        src: 'ç',\n        dst: 'c'\n      }, {\n        src: 'Ç',\n        dst: 'C'\n      }, {\n        src: 'æ',\n        dst: 'ae'\n      }]\n    }, options);\n    /* Split synonym src into arrays. */\n\n    if (settings.useSynonyms) {\n      for (var i = 0, l = settings.synonyms.length; i < l; i++) {\n        settings.synonyms[i].src = settings.synonyms[i].src.split(',');\n      }\n    }\n    /* Setup each instaFilta instance. */\n\n\n    this.each(function () {\n      var typeTimer,\n          $targets,\n          $sections,\n          $scopeElement,\n          lastTerm = '';\n      /* Check if this instance should be bound to a scope. */\n\n      if (settings.scope) {\n        $scopeElement = $(this).closest(settings.scope);\n        $targets = $scopeElement.find(settings.targets);\n        $sections = $scopeElement.find(settings.sections);\n      } else {\n        $targets = $(settings.targets);\n        $sections = $(settings.sections);\n      }\n      /* Prepare value(s) to match against. */\n\n\n      $targets.each(function () {\n        $target = $(this), original = $target.text();\n        $target.data('values', function (s) {\n          var values = [original],\n              normalized = original;\n\n          if (!settings.useSynonyms) {\n            return values;\n          }\n\n          for (var i = 0, l = s.length; i < l; i++) {\n            for (var j = 0; j < s[i].src.length; j++) {\n              normalized = normalized.replace(s[i].src[j], s[i].dst);\n            }\n          }\n\n          !!(normalized === original) || values.push(normalized);\n          return values;\n        }(settings.synonyms));\n      });\n      /* Will hide any sections that don't have data-instafilta-hidden=\"false\" */\n\n      var toggleSections = function toggleSections() {\n        $sections.each(function () {\n          var $section = $(this);\n\n          if ($section.find('[data-instafilta-hide=\"false\"]').length) {\n            $section[settings.sectionsShowEffect](settings.sectionsShowDuration);\n          } else {\n            $section[settings.sectionsHideEffect](settings.sectionsHideDuration);\n          }\n        });\n      };\n      /* Apply the results of the filtering process GUI-wise. */\n\n\n      var toggleResults = function toggleResults(forceShowAll) {\n        var $matchedItems = function () {\n          return forceShowAll ? $targets.attr('data-instafilta-hide', 'false') : $targets;\n        }().filter('[data-instafilta-hide=\"false\"]')[settings.itemsShowEffect](settings.itemsShowDuration);\n\n        forceShowAll || $targets.filter('[data-instafilta-hide=\"true\"]')[settings.itemsHideEffect](settings.itemsHideDuration);\n        settings.hideEmptySections && toggleSections();\n        /* Check if a callback function has been provided. */\n\n        if (typeof settings.onFilterComplete === 'function') {\n          settings.onFilterComplete.apply(this, [$matchedItems]);\n        }\n\n        return $matchedItems;\n      };\n      /* Reset the filter completely. */\n\n\n      var showAll = function showAll() {\n        return toggleResults(true);\n      };\n      /* Main filtering function. */\n\n\n      _filterTerm = function _filterTerm(term) {\n        term = settings.caseSensitive ? term : term.toLowerCase();\n\n        if (lastTerm === term) {\n          return false;\n        } else {\n          lastTerm = term;\n        }\n\n        term || showAll();\n        /* Iterate through associated targets and find matches. */\n\n        $targets.each(function () {\n          var $item = $(this);\n\n          if (!$item.data('originalText')) {\n            $item.data('originalHtml', $item.html());\n            $item.data('originalText', $item.data('values')[0]);\n          }\n          /* Returns the index at which a match was found. Returns -1 if not found. */\n\n\n          var matchedIndex = function (values, t) {\n            var index = -1;\n\n            for (var i = 0; i < values.length; i++) {\n              index = (settings.caseSensitive ? values[i] : values[i].toLowerCase()).indexOf(t);\n\n              if (index >= 0) {\n                break;\n              } // We have a match, no need to iterate further.\n\n            }\n\n            return index;\n          }($item.data('values'), term);\n\n          var originalText = $item.data('originalText'),\n              targetText = settings.caseSensitive ? originalText : originalText.toLowerCase(),\n              matchedText = null,\n              newText = null;\n          /* If we should mark the match, wrap it in a span tag. */\n\n          if (matchedIndex >= 0 && settings.markMatches) {\n            matchedText = originalText.substring(matchedIndex, matchedIndex + term.length);\n            newText = originalText.replace(matchedText, '<span class=\"' + settings.matchCssClass + '\">' + matchedText + '</span>');\n            $item.html($item.data('originalHtml').replace(originalText, newText));\n          }\n\n          $item.attr('data-instafilta-hide', settings.beginsWith && matchedIndex !== 0 || matchedIndex < 0 ? 'true' : 'false');\n        });\n        return toggleResults();\n      };\n      /* Filter items depending on category data attribute. Categories can be a comma separated\n       * string or an array of strings. Shows all targets if categories is falsy. */\n\n\n      _filterCategory = function _filterCategory(categories, requireAll) {\n        if (!categories || !categories.length) {\n          return showAll();\n        }\n\n        if (typeof categories === 'string') {\n          categories = categories.split(',');\n        }\n\n        $targets.each(function () {\n          var hideStatus = true,\n              matched = 0,\n              $item = $(this),\n              targetCats = $item.data(settings.categoryDataAttr);\n\n          if (targetCats) {\n            targetCats = targetCats.split(',');\n\n            for (var i = 0; i < targetCats.length; i++) {\n              for (var j = 0; j < categories.length; j++) {\n                if (targetCats[i] === categories[j]) {\n                  if (requireAll) {\n                    matched++;\n                  } else {\n                    hideStatus = false;\n                    break;\n                  }\n                }\n              }\n            }\n\n            if (requireAll && matched === categories.length) {\n              hideStatus = false;\n            }\n\n            $item.html($item.data('originalText')).attr('data-instafilta-hide', hideStatus);\n          }\n        });\n        return toggleResults();\n      };\n      /* Setup event handlers. */\n\n\n      $(this).on('keyup', function () {\n        var $field = $(this);\n        clearTimeout(typeTimer);\n        typeTimer = setTimeout(function () {\n          _filterTerm($field.val());\n        }, settings.typeDelay);\n      });\n    });\n    return {\n      filterTerm: _filterTerm,\n      filterCategory: _filterCategory\n    };\n  };\n})(jQuery);",{"version":3,"sources":["/Users/qulongjun/personal/shine-design-rebase/site/theme/plugins/instafilta.js"],"names":["$","fn","instaFilta","options","_filterTerm","_filterCategory","settings","extend","scope","targets","sections","categoryDataAttr","matchCssClass","itemsHideEffect","itemsHideDuration","itemsShowEffect","itemsShowDuration","sectionsHideEffect","sectionsHideDuration","sectionsShowEffect","sectionsShowDuration","onFilterComplete","markMatches","hideEmptySections","beginsWith","caseSensitive","typeDelay","useSynonyms","synonyms","src","dst","i","l","length","split","each","typeTimer","$targets","$sections","$scopeElement","lastTerm","closest","find","$target","original","text","data","s","values","normalized","j","replace","push","toggleSections","$section","toggleResults","forceShowAll","$matchedItems","attr","filter","apply","showAll","term","toLowerCase","$item","html","matchedIndex","t","index","indexOf","originalText","targetText","matchedText","newText","substring","categories","requireAll","hideStatus","matched","targetCats","on","$field","clearTimeout","setTimeout","val","filterTerm","filterCategory","jQuery"],"mappings":"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","sourcesContent":["/*!\n * instaFilta\n * Version: 1.4.4\n * Description: jQuery plugin for performing in-page filtering\n * Homepage and documentation: https://github.com/chromawoods/instaFilta\n * Author: Andreas Larsson <andreas@chromawoods.com> (http://chromawoods.com)\n * Contributions: Jaap-Jan Frans\n */\n;(function($) {\n\n\n    $.fn.instaFilta = function(options) {\n\n        var _filterTerm = null,\n            _filterCategory = null;\n\n\n        /* Default settings. */\n        var settings = $.extend({\n\n            scope: null,\n            targets: '.instafilta-target',\n            sections: '.instafilta-section',\n            categoryDataAttr: 'instafilta-category',\n            matchCssClass: 'instafilta-match',\n            itemsHideEffect: 'hide',\n            itemsHideDuration: 0,\n            itemsShowEffect: 'show',\n            itemsShowDuration: 0,\n            sectionsHideEffect: 'hide',\n            sectionsHideDuration: 0,\n            sectionsShowEffect: 'show',\n            sectionsShowDuration: 0,\n            onFilterComplete: null,\n            markMatches: false,\n            hideEmptySections: true,\n            beginsWith: false,\n            caseSensitive: false,\n            typeDelay: 0,\n            useSynonyms: true,\n            synonyms: [\n                { src: 'à,á,å,ä,â,ã', dst: 'a' },\n                { src: 'À,Á,Å,Ä,Â,Ã', dst: 'A' },\n                { src: 'è,é,ë,ê', dst: 'e' },\n                { src: 'È,É,Ë,Ê', dst: 'E' },\n                { src: 'ì,í,ï,î', dst: 'i' },\n                { src: 'Ì,Í,Ï,Î', dst: 'I' },\n                { src: 'ò,ó,ö,ô,õ', dst: 'o' },\n                { src: 'Ò,Ó,Ö,Ô,Õ', dst: 'O' },\n                { src: 'ù,ú,ü,û', dst: 'u' },\n                { src: 'Ù,Ú,Ü,Û', dst: 'U' },\n                { src: 'ç', dst: 'c' },\n                { src: 'Ç', dst: 'C' },\n                { src: 'æ', dst: 'ae' }\n            ]\n        }, options);\n\n\n        /* Split synonym src into arrays. */\n        if (settings.useSynonyms) {\n            for (var i = 0, l = settings.synonyms.length; i < l; i++) {\n                settings.synonyms[i].src = settings.synonyms[i].src.split(',');\n            }\n        }\n\n\n        /* Setup each instaFilta instance. */\n        this.each(function() {\n\n            var typeTimer,\n                $targets,\n                $sections,\n                $scopeElement,\n                lastTerm = '';\n\n            /* Check if this instance should be bound to a scope. */\n            if (settings.scope) {\n                $scopeElement = $(this).closest(settings.scope);\n                $targets = $scopeElement.find(settings.targets);\n                $sections = $scopeElement.find(settings.sections);\n            } \n\n            else {\n                $targets = $(settings.targets);\n                $sections = $(settings.sections);\n            }\n\n            /* Prepare value(s) to match against. */\n            $targets.each(function() {\n\n                $target = $(this), original = $target.text();\n\n                $target.data('values', (function(s) {\n\n                    var values = [original], normalized = original;\n\n                    if (!settings.useSynonyms) { return values; }\n\n                    for (var i = 0, l = s.length; i < l; i++) {\n\n                        for (var j = 0; j < s[i].src.length; j++) {\n                            normalized = normalized.replace(s[i].src[j], s[i].dst);\n                        }\n\n                    }\n\n                    !!(normalized === original) || values.push(normalized);\n\n                    return values;\n\n                }(settings.synonyms)));\n\n            });\n\n\n            /* Will hide any sections that don't have data-instafilta-hidden=\"false\" */\n            var toggleSections = function() {\n\n                $sections.each(function() {\n\n                    var $section = $(this);\n\n                    if ($section.find('[data-instafilta-hide=\"false\"]').length) {\n                        $section[settings.sectionsShowEffect](settings.sectionsShowDuration);\n                    }\n\n                    else {\n                        $section[settings.sectionsHideEffect](settings.sectionsHideDuration);\n                    }\n\n                });\n\n            };\n\n\n            /* Apply the results of the filtering process GUI-wise. */\n            var toggleResults = function(forceShowAll) {\n\n                var $matchedItems = (function() {\n                    return forceShowAll ? $targets.attr('data-instafilta-hide', 'false') : $targets;\n                }()).filter('[data-instafilta-hide=\"false\"]')[settings.itemsShowEffect](settings.itemsShowDuration);\n\n                forceShowAll || $targets.filter('[data-instafilta-hide=\"true\"]')[settings.itemsHideEffect](settings.itemsHideDuration);\n\n                settings.hideEmptySections && toggleSections();\n\n                /* Check if a callback function has been provided. */\n                if (typeof settings.onFilterComplete === 'function') {\n                    settings.onFilterComplete.apply(this, [$matchedItems]);\n                }\n\n                return $matchedItems;\n            };\n\n\n            /* Reset the filter completely. */\n            var showAll = function() {\n                return toggleResults(true);\n            };\n\n\n            /* Main filtering function. */\n            _filterTerm = function(term) {\n\n                term = settings.caseSensitive ? term : term.toLowerCase();\n\n                if (lastTerm === term) { return false; }\n                else { lastTerm = term; }\n\n                term || showAll();\n\n                /* Iterate through associated targets and find matches. */\n                $targets.each(function() {\n\n                    var $item = $(this);\n\n                    if (!$item.data('originalText')) {\n                        $item.data('originalHtml', $item.html());\n                        $item.data('originalText', $item.data('values')[0]);\n                    }\n\n                    /* Returns the index at which a match was found. Returns -1 if not found. */\n                    var matchedIndex = (function(values, t) {\n                        var index = -1;\n\n                        for (var i = 0; i < values.length; i++) {\n                            index = (settings.caseSensitive ? values[i] : values[i].toLowerCase()).indexOf(t);\n                            if (index >= 0) { break; } // We have a match, no need to iterate further.\n                        }\n\n                        return index;\n                    }($item.data('values'), term));\n\n                    var originalText = $item.data('originalText'),\n                        targetText = settings.caseSensitive ? originalText : originalText.toLowerCase(),\n                        matchedText = null,\n                        newText = null;\n\n                    /* If we should mark the match, wrap it in a span tag. */\n                    if (matchedIndex >= 0 && settings.markMatches) {\n                        matchedText = originalText.substring(matchedIndex, matchedIndex + term.length);\n                        newText = originalText.replace(matchedText, '<span class=\"' + settings.matchCssClass + '\">' + matchedText + '</span>');\n\n                        $item.html($item.data('originalHtml').replace(originalText, newText));\n                    }\n\n                    $item.attr('data-instafilta-hide', (settings.beginsWith && matchedIndex !== 0) || matchedIndex < 0 ? 'true' : 'false');\n                });\n\n                return toggleResults();\n            };\n\n\n            /* Filter items depending on category data attribute. Categories can be a comma separated\n             * string or an array of strings. Shows all targets if categories is falsy. */\n            _filterCategory = function(categories, requireAll) {\n\n                if (!categories || !categories.length) {\n                    return showAll();\n                }\n\n                if (typeof categories === 'string') {\n                    categories = categories.split(',');\n                }\n\n                $targets.each(function() {\n\n                    var hideStatus = true, \n                        matched = 0,\n                        $item = $(this), \n                        targetCats = $item.data(settings.categoryDataAttr);\n\n                    if (targetCats) {\n\n                        targetCats = targetCats.split(',');\n\n                        for (var i = 0; i < targetCats.length; i++) {\n                            for (var j = 0; j < categories.length; j++) {\n                                if (targetCats[i] === categories[j]) {\n                                    if (requireAll) { matched++; }\n                                    else { hideStatus = false; break; }\n                                }\n                            }\n                        }\n\n                        if (requireAll && matched === categories.length) { hideStatus = false; }\n                        $item.html($item.data('originalText')).attr('data-instafilta-hide', hideStatus);\n                    }\n\n                });\n\n                return toggleResults();\n            };\n\n\n            /* Setup event handlers. */\n            $(this).on('keyup', function() {\n                var $field = $(this);\n\n                clearTimeout(typeTimer);\n\n                typeTimer = setTimeout(function() {\n                    _filterTerm($field.val());\n                }, settings.typeDelay);\n            });\n\n        });\n\n\n        return { \n            filterTerm: _filterTerm,\n            filterCategory: _filterCategory\n        };\n\n    };\n\n}(jQuery));"]}]}