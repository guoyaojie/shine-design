/**
 * @Author 瞿龙俊 - qulongjun@shine.design
 * @Date 2018/11/14 11:25
 */

@mixin sh-build-component--switch-base() {
  .sh-switch {
    //== Base
    //display: inline-block;
    display: flex;
    font-size: 1rem;
    margin-right: 1rem;

    label {
      margin-bottom: 0;
    }

    input:empty {
      margin-left: -999px;
      height: 0;
      width: 0;
      overflow: hidden;
      position: absolute;
      @include opacity(0);
    }

    input:empty ~ span {
      display: inline-block;
      position: relative;
      float: left;
      width: 1px;
      text-indent: 0;
      cursor: pointer;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    input:empty ~ span:before,
    input:empty ~ span:after {
      position: absolute;
      display: block;
      top: 0;
      bottom: 0;
      left: 0;
      content: ' ';
      -webkit-transition: all 100ms ease-in;
      transition: all 100ms ease-in;
    }

    //== State icons
    &.sh-switch--icon {
      input:empty ~ span:after {
        @include sh-icon-self('\f342');
      }

      input:checked ~ span:after {
        content: '\f17b';
      }
    }

    //== State icons
    &.sh-switch--icon-check {
      input:checked ~ span:after {
        @include sh-icon-self('\f17b');
      }
    }

    //== Default size
    & {
      $sh-switch-margin: 2px 0;
      $sh-switch-width: 54px;
      $sh-switch-height: 30px;
      $sh-switch-line-height: 26px;
      $sh-switch-space: 3px;
      $sh-switch-checked-tick-pos: 26px;
      $sh-switch-icon-font-size: 0.9em;

      @include sh-build-component--switch-size(
                      $sh-switch-margin,
                      $sh-switch-width,
                      $sh-switch-height,
                      $sh-switch-line-height,
                      $sh-switch-space,
                      $sh-switch-checked-tick-pos,
                      $sh-switch-icon-font-size
      );
    }

    //== Large size
    &.sh-switch--lg {
      $sh-switch-margin: 2px 0;
      $sh-switch-width: 72px;
      $sh-switch-height: 40px;
      $sh-switch-line-height: 34px;
      $sh-switch-space: 3px;
      $sh-switch-checked-tick-pos: 34px;
      $sh-switch-icon-font-size: 1em;

      @include sh-build-component--switch-size(
                      $sh-switch-margin,
                      $sh-switch-width,
                      $sh-switch-height,
                      $sh-switch-line-height,
                      $sh-switch-space,
                      $sh-switch-checked-tick-pos,
                      $sh-switch-icon-font-size
      );
    }

    //== Small size
    &.sh-switch--sm {
      $sh-switch-margin: 2px 0;
      $sh-switch-width: 38px;
      $sh-switch-height: 24px;
      $sh-switch-line-height: 20px;
      $sh-switch-space: 2px;
      $sh-switch-checked-tick-pos: 16px;
      $sh-switch-icon-font-size: 0.8em;

      @include sh-build-component--switch-size(
                      $sh-switch-margin,
                      $sh-switch-width,
                      $sh-switch-height,
                      $sh-switch-line-height,
                      $sh-switch-space,
                      $sh-switch-checked-tick-pos,
                      $sh-switch-icon-font-size
      );
    }

    //== Form group
    .sh-form__group.row & {
      margin-top: 0.15rem;

      &.sh-switch--lg {
        margin-top: 0rem;
        position: relative;
        top: -0.3rem;
      }

      &.sh-switch--sm {
        margin-top: 0.3rem;
      }
    }
  }
}

//== Component Size
@mixin sh-build-component--switch-size($margin, $width, $height, $line-height, $space, $checked-tick-pos, $icon-font-size) {
  input:empty ~ span {
    line-height: $height;
    margin: $margin;
    height: $height;
    width: $width + $space;
    @include border-radius($height/2);
  }

  input:empty ~ span:before,
  input:empty ~ span:after {
    width: $width;
    @include border-radius($height/2);
  }

  input:empty ~ span:after {
    height: $height - 2 * $space;
    width: $height - 2 * $space;
    line-height: $line-height;
    top: $space;
    bottom: $space;
    margin-left: $space;
    font-size: $icon-font-size;
    text-align: center;
    vertical-align: middle;
  }

  input:checked ~ span:after {
    margin-left: $checked-tick-pos;
  }
}

//== Component Skin
@mixin sh-build-component--switch-skin() {
  $skin: get-default-skin();

  .sh-switch {
    //== Panel bg
    input:empty ~ span:before {
      background-color: get-color($skin, panel);
    }

    //== Tick bg
    input:empty ~ span:after {
      color: get-color($skin, panel, '--');
      background-color: get-color($skin, panel, '++');
    }

    //== Checked state
    input:checked {
      //== Panel bg
      ~ span:before {
        background-color: get-color($skin, panel);
        @include shadow(0px 3px 20px 0px rgba(get-color($skin, panel), 0.41));
      }

      //== Tick bg
      ~ span:after {
        background-color: get-brand-color();
        color: get-brand-inverse-color();
        @include shadow(0px 3px 20px 0px rgba(get-brand-color(), 0.41));
      }
    }

    input[disabled] {
      cursor: not-allowed;

      ~ span:after,
      ~ span:before {
        cursor: not-allowed;
        @include opacity(0.7);
      }
    }

    //== States
    @each $name, $color in $sh--state-colors {
      //== states
      &.sh-switch--#{$name}:not(.sh-switch--outline) {
        input:empty ~ span:before {
          background-color: array-get($color, base);
        }

        input:empty ~ span:after {
          color: array-get($color, base);
          background-color: array-get($color, inverse);
          @include opacity(0.4);
        }

        input:checked {
          //== Panel bg
          ~ span:before {
            background-color: array-get($color, base);
          }

          //== Tick bg
          ~ span:after {
            @include opacity(1);
          }
        }
      }

      //== outline style states
      &.sh-switch--outline.sh-switch--#{$name} {
        input:empty ~ span:before {
          border: 2px solid get-color($skin, panel);
          background-color: get-color($skin, box);
        }

        input:empty ~ span:after {
          color: array-get($color, inverse);
          background-color: array-get($color, panel);
        }

        input:checked {
          //== Panel bg
          ~ span:before {
            background-color: array-get($color, inverse);
          }

          //== Tick bg
          ~ span:after {
            background-color: array-get($color, base);
            @include opacity(1);
          }
        }
      }
    }
  }
}

@include sh-build-component--switch-base();

@include sh-build-component--switch-skin();