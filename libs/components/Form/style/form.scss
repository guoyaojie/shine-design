/**
 * @Author 瞿龙俊 - qulongjun@shine.design
 * @Date 2018/9/17 下午5:20
 */

@mixin sh-build-component--form-base() {
  $space: 30px;

  .sh-form {
    //== Form group
    .form-control-label,
    label {
      font-weight: get-font-weight(bold);
      font-size: get-font-size(regular);

      &.col-form-label {
        padding-top: array-get($sh--forms, input, layout, self, size, default, padding, y);
        //padding-bottom: array-get($sh--forms, input, layout, self, size, default, padding, y);
        display: flex;
        align-items: center;
      }
    }

    .sh-form__group {
      margin-bottom: 0;
      padding-top: 15px;
      padding-bottom: 15px;

      &.sh-form__group--md {
        padding-top: 5px;
        padding-bottom: 5px;
      }

      &.sh-form__group--sm {
        padding-top: 0px;
        padding-bottom: 0px;
      }

      .sh-form__control-static {
        display: inline-block;
        font-weight: get-font-weight(normal);
        font-size: get-font-size(regular);
        padding-top: array-get($sh--forms, input, layout, self, size, default, padding, y);
      }

      &.sh-form__group--first {
        padding-top: 0;
      }

      &.sh-form__group--last {
        padding-bottom: 0;
      }

      @include desktop() {
        &:first-child {
          padding-top: 0;
        }

        &:last-child {
          padding-bottom: 0;
        }
      }

      &.sh-form__group--inline {
        display: table;
        padding: 0;

        > .sh-form__label {
          display: table-cell;
          vertical-align: middle;
          margin: 0;
          padding-right: 0.5rem;

          &.sh-form__label-no-wrap {
            white-space: nowrap;
          }

          > label {
            margin: 0;
          }
        }

        > .sh-form__control {
          display: table-cell;
          vertical-align: middle;
          margin: 0;
          width: 100%;
        }
      }
    }

    //== Form control help
    .sh-form__help {
      font-weight: get-font-weight(normal);
      font-size: get-font-size(regular, '-');
      padding-top: 7px;
      display: block;
    }

    span.sh-form__help {
      display: inline-block;
    }

    //== Form section
    .sh-form__section {
      margin: 40px 0 40px 0;

      &:first-child,
      &.sh-form__section--first {
        margin-top: 0;
      }

      &:last-child,
      &.sh-form__section--last {
        margin-bottom: 0;
      }
    }

    //== Form separator
    .sh-form__seperator {
      display: block;
      height: 0;

      &.sh-form__seperator--space {
        margin: 20px 0;
      }

      &.sh-form__seperator--space-2x {
        margin: 30px 0;
      }

      &.sh-form__seperator--space-3x {
        margin: 40px 0;
      }
    }

    //== Form heading
    .sh-form__heading {
      padding: 0;
      margin: 0 0 15px 0;

      .sh-form__heading-title {
        font-weight: get-font-weight(bolder);
        font-size: get-font-size(regular, '+++');

        .sh-form__heading-help-icon {
          line-height: 0;
          vertical-align: middle;
          padding-left: 5px;
        }
      }

      .sh-form__heading-sub {
        margin: 5px 0 0 0;
        padding: 0;
        font-size: get-font-size(regular);
      }

      &.sh-form__heading--bordered,
      &.sh-form__heading--dashed {
        padding: 0 0 15px 0;
        margin: 0 0 15px 0;
      }
    }

    //== Form actions
    .sh-form__actions {
      @include clearfix();
      padding: $space;

      &.sh-form__actions--right {
        text-align: right;
      }

      &.sh-form__actions--sm {
        padding-top: 1rem;
        padding-bottom: 1rem;
      }

      &.sh-form__actions--paddingless-sides {
        padding-left: 0;
        padding-right: 0;
      }
    }

    &.sh-form--custom {
      .sh-form__actions {
        padding: $space 0;
        margin-top: $space;

        &.sh-form__actions--top {
          margin-top: 0;
          margin-bottom: $space;
        }
      }
    }

    //== form layout options

    // fit form option
    &.sh-form--fit {
      .sh-form__content,
      .sh-form__heading,
      .sh-form__group {
        padding-left: $space;
        padding-right: $space;
      }
    }

    // form labels right aligned option
    @include desktop {
      // label 右对齐
      .sh-form__section.sh-form__section--label-align-right,
      &.sh-form--label-align-right {
        .sh-form__group {
          > label {
            text-align: right;
          }
        }
      }

      // label 居中对齐
      .sh-form__section.sh-form__section--label-align-center,
      &.sh-form--label-align-center {
        .sh-form__group {
          > label {
            text-align: center;
          }
        }
      }
    }

    // form labels right aligned option
    @include tablet {
      &.sh-form--label-align-right-tablet {
        .sh-form__group {
          label {
            text-align: right;
          }
        }
      }
    }

    &.sh-form--group-seperator-dashed,
    &.sh-form--group-seperator {
      .sh-portlet__body {
        padding-top: 0;
        padding-bottom: 0;
      }

      .sh-form__group {
        padding-top: 25px;
        padding-bottom: 25px;
      }
    }

    // Validation state
    .form-control-feedback {
      margin-top: 0.2rem;
      font-size: get-font-size(regular, '-');
    }

    //== Filter
    .sh-form__filtration {
      margin: 0 0 30px 0;
    }

    //== Group actions
    .sh-form__group-action {
      margin: 0 0 30px 0;
    }
  }
}

//== Component Skin
@mixin sh-build-component--form-skin() {
  $skin: get-default-skin();

  .sh-form {
    .form-control-label,
    .col-form-label,
    .sh-form__group > label {
      color: get-color($skin, regular, '+');
    }

    .sh-form__control-static {
      color: get-color($skin, regular, '-');
    }

    &.sh-form--group-seperator {
      .sh-form__group {
        border-bottom: 1px solid get-color($skin, panel, '-');

        &.sh-form__group--last,
        &:last-child {
          border-bottom: 0;
        }
      }
    }

    &.sh-form--group-seperator-dashed {
      .sh-form__group {
        border-bottom: 1px dashed get-color($skin, panel);

        &.sh-form__group--last,
        &:last-child {
          border-bottom: 0;
        }
      }
    }

    .sh-form__help {
      color: get-color($skin, regular, '--');
    }

    .sh-form__seperator {
      border-top: 1px solid get-color($skin, panel);

      &.sh-form__seperator--dashed {
        border-top: 1px dashed get-color($skin, panel);
      }
    }

    .sh-form__heading {
      .sh-form__heading-title {
        color: get-color($skin, regular);
      }

      .sh-form__heading-sub {
        color: get-color($skin, regular, '-');
      }

      &.sh-form__heading--bordered {
        border-bottom: 1px solid get-color($skin, panel);
      }

      &.sh-form__heading--dashed {
        border-bottom: 1px dashed get-color($skin, panel);
      }
    }

    .sh-form__section {
      color: get-color($skin, regular, '--');
    }

    .sh-form__actions {
      &.sh-form__actions--line {
        border-top: 1px solid get-color($skin, panel);
      }

      &.sh-form__actions--top {
        &.sh-form__actions--line {
          border-top: 0;
          border-bottom: 1px solid get-color($skin, panel);
        }
      }

      &.sh-form__actions--solid {
        background-color: get-color($skin, panel, '--');
        border-color: get-color($skin, panel, '--');
      }
    }
  }
}

//== Component Skin
@mixin sh-build-component--form-validation-state($state, $color) {
  .has-#{$state} {
    label:not([class]),
    label.col-form-label,
    label.form-control-label {
      color: $color;
    }

    .form-control-feedback {
      color: $color;
    }

    .input-group-text,
    .form-control {
      border-color: array-get($sh--forms, input, skins, light, default, border, default);
    }

    .form-control:focus {
      border-color: array-get($sh--forms, input, skins, light, default, border, focus);
    }
  }

  .sh-form.sh-form--state {
    .has-#{$state} {
      .input-group .input-group-text,
      .input-group .btn.btn-secondary,
      .form-control:focus,
      .form-control {
        border-color: $color;
      }

      .bootstrap-select.btn-group.btn.btn-secondary,
      .input-group-btn > .btn.btn-secondary {
        border-color: $color;

        &:hover {
          border-color: $color;
        }
      }
    }
  }
}

//==== Generate Component ====//

//== Component Base
@include sh-build-component--form-base();

//== Component Skin
@include sh-build-component--form-skin();

//== Component States
@include sh-build-component--form-validation-state(success, array-get($sh--state-colors, success, base));
@include sh-build-component--form-validation-state(warning, array-get($sh--state-colors, warning, base));
@include sh-build-component--form-validation-state(danger, array-get($sh--state-colors, danger, base));